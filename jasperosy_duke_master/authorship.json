[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    testImplementation(\u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    testRuntime(\u0027org.junit.jupiter:junit-jupiter-engine:5.5.0\u0027)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "run {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 33,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a Personal Assistant bot. A \u003ccode\u003eDuke\u003c/code\u003e object corresponds to three other classes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * , namely called \u003ccode\u003eStorage\u003c/code\u003e, \u003ccode\u003eUi\u003c/code\u003e and \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    private TaskList arr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eDuke\u003c/code\u003e for instantiation of other classes \u003ccode\u003eUi\u003c/code\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * , \u003ccode\u003eStorage\u003c/code\u003e and \u003ccode\u003eTasklist\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr \u003d new TaskList(storage.readFromFile());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch (DukeException exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.showLoadingError(exception);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Runs the Personal Assistant."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.hello();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                String line \u003d ui.scanLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                Command command \u003d chooseCommand.choose(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                command.execute(arr, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            catch (DukeException exception) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                ui.showLoadingError(exception);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * This is the main method which makes use of run method."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 57,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e class to store and read"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e objects to/from harddisk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Writes \u003ccode\u003eTask\u003c/code\u003e objects to harddisk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param tasklist \u003ccode\u003eTaskList\u003c/code\u003e that contains \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Exception if the file cannot be written to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void writeToFile(TaskList tasklist) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ArrayList\u003cTask\u003e arr \u003d tasklist.getTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String filename \u003d \"output.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            BufferedWriter out \u003d new BufferedWriter(new FileWriter(filename));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                out.write(arr.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(e + \", thus please try inputting other things.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Reads \u003ccode\u003eTask\u003c/code\u003e objects that were previously saved to harddisk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return \u003ccode\u003eTaskList\u003c/code\u003e containing \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Exception if the file does not exist or cannot be read."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ArrayList\u003cTask\u003e readFromFile() throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String filename \u003d \"output.txt\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                counter +\u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                if (line.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    boolean checker \u003d checkDone(line);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    line \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    Task task \u003d new Todo(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    if (checker) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                        arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                else if (line.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    boolean checker \u003d checkDone(line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    line \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String linesplit[] \u003d line.split(\"\\\\(by:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String start \u003d linesplit[0].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String end \u003d linesplit[1].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    end \u003d end.substring(0, end.length() - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    Task task \u003d new Deadline(start, end);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    if (checker) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                        arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                else if (line.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    boolean checker \u003d checkDone(line);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    line \u003d line.substring(7).trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String linesplit[] \u003d line.split(\"\\\\(at:\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String start \u003d linesplit[0].trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    String end \u003d linesplit[1].trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    end \u003d end.substring(0, end.length() - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    Task task \u003d new Event(start, end);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    arr.add(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    if (checker) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                        arr.get(counter - 1).setStatus();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return arr;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            e.printStackTrace(System.out);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"Look at the output.txt for any irregularities!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if the \u003ccode\u003eTask\u003c/code\u003e has already been marked as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line \u003ccode\u003eTask\u003c/code\u003e object in string format."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return true if the \u003ccode\u003eTask\u003c/code\u003e object has already been marked as done, false otherwise."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean checkDone(String line) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (line.charAt(4) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 113
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a list of \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr \u003ccode\u003eTaskList\u003c/code\u003e that contains \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Retrieves all the \u003ccode\u003eTask\u003c/code\u003e objects in \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return \u003ccode\u003eTaskList\u003c/code\u003e containing all its \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Retrieves the number of \u003ccode\u003eTask\u003c/code\u003e objects in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Number of \u003ccode\u003eTask\u003c/code\u003e objects in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return arr.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Retrieves the \u003ccode\u003eTask\u003c/code\u003e object at a particular index."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param index Index of \u003ccode\u003eTask\u003c/code\u003e object, specified by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return \u003ccode\u003eTask\u003c/code\u003e object at a particular index."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return arr.get(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param task \u003ccode\u003eTask\u003c/code\u003e object to be added to \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Deletes a \u003ccode\u003eTask\u003c/code\u003e object from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param index Index of \u003ccode\u003eTask\u003c/code\u003e object, specified by the user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        arr.remove(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 69
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eUi\u003c/code\u003e class that is responsible for Input/Output operations."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Scans for a line of user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Scanner to scan for next line of user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String scanLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows the welcome logo and message for \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows preceding welcome messages after \u003ccode\u003eshowWelcome()\u003c/code\u003e function."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void hello() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows termination message before \u003ccode\u003eDuke\u003c/code\u003e exits."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Prints lines."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Prints the \u003ccode\u003eTask\u003c/code\u003e object that was added and its relevant messages."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param task \u003ccode\u003eTask\u003c/code\u003e object that was added."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param size Number of \u003ccode\u003eTask\u003c/code\u003e objects in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void addTaskMessage(Task task, int size) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (size \u003e 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows the \u003ccode\u003eTask\u003c/code\u003e object that has been marked as done and its relevant messages."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param task \u003ccode\u003eTask\u003c/code\u003e object that was marked as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void completeMessage(Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows the \u003ccode\u003eTask\u003c/code\u003e object that has been deleted and its relevant messages."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param task \u003ccode\u003eTask\u003c/code\u003e object that was deleted."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param size Number of \u003ccode\u003eTask\u003c/code\u003e objects in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void deleteMessage(Task task, int size) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (size \u003e 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Shows the error message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param exception Exception encountered."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void showLoadingError(DukeException exception) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t\" + exception.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 114
    }
  },
  {
    "path": "src/main/java/duke/chooseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.addDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.addEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.completeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.deleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.exitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.findCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a parser to process the comands inputted by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class chooseCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Main method of the \u003ccode\u003echooseCommand\u003c/code\u003e class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Parses the input given by user and calls specific \u003ccode\u003eCommands\u003c/code\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after checking the validity of the input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return \u003ccode\u003eCommand\u003c/code\u003e based on the user input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    static Command choose (String line) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new exitCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            int num \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new completeCommand(num);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new AddToDoCommand(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new addDeadlineCommand(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            line \u003d line.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new addEventCommand(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            int num \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new deleteCommand(num);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (line.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return new findCommand(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 60
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eTodo\u003c/code\u003e objects"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * to \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class AddToDoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eAddTodoCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public AddToDoCommand(String line) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Processes the command inputted by user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Adds the \u003ccode\u003eTodo\u003c/code\u003e object to \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Stores the object in harddisk by calling \u003ccode\u003eStorage\u003c/code\u003e before printing the object added."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        line \u003d line.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (line.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        Task task \u003d new Todo(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        arr.addTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        storage.writeToFile(arr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jasperosy": 56
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e object that corresponds to specific commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * defined by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Abstract parent of all other \u003ccode\u003eCommand\u003c/code\u003e subclasses."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Invokes other \u003ccode\u003eCommand\u003c/code\u003e subclasses based on the input given by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param tasks Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return true if \u003ccode\u003eexitCommand\u003c/code\u003e is called, false otherwise."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to list all \u003ccode\u003eTasks\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Lists all the \u003ccode\u003eTasks\u003c/code\u003e present in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.getSize(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + arr.getTask(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 42
    }
  },
  {
    "path": "src/main/java/duke/command/addDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.sql.Timestamp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that appends a new \u003ccode\u003eDeadline\u003c/code\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * object to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class addDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eaddDeadlineCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user for processing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public addDeadlineCommand(String line) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Processes the command inputted by user into \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks for the validity of the format of \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Adds a \u003ccode\u003eDeadline\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * and prints the object added before calling methods in \u003ccode\u003eStorage\u003c/code\u003e to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * store the object added in the harddisk."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *                objects to harddisk."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String linesplit[] \u003d line.split(\"/by\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (linesplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline needs a due date.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String start \u003d linesplit[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String end \u003d linesplit[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (end.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The datetime of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (isTimeStampValid(end)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String pattern \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.from(formatter.parse(end));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Timestamp timestamp \u003d Timestamp.valueOf(localDateTime);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            end \u003d formatter2.format(timestamp.toLocalDateTime());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Task task \u003d new Deadline(start, end);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr.addTask(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            storage.writeToFile(arr);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"Time format is wrong! Try again.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks for the validity of the datetime given by user"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * by checking the format and validity of the datetime itself."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param inputString datetime input by user in \u003ccode\u003eString\u003c/code\u003e format."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Returns true if the datetime given by user is valid, false otherwise."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isTimeStampValid(String inputString)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        SimpleDateFormat format \u003d new java.text.SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String str \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            format.parse(inputString);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String pattern \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.from(formatter.parse(inputString));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Timestamp timestamp \u003d Timestamp.valueOf(localDateTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            str \u003d formatter2.format(timestamp.toLocalDateTime());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch(ParseException | DateTimeException e)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 108
    }
  },
  {
    "path": "src/main/java/duke/command/addEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.sql.Timestamp;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to add \u003ccode\u003eEvent\u003c/code\u003e objects"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * to the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class addEventCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eaddEventCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public addEventCommand(String line) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Performs a series of three main tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Processes the command inputted by user into \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks for the validity of the format of \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Adds an \u003ccode\u003eEvent\u003c/code\u003e object to the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * and prints the object added before calling methods in \u003ccode\u003eStorage\u003c/code\u003e to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * store the object added in the harddisk."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *                objects to harddisk."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String linesplit[] \u003d line.split(\"/at\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (linesplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event needs a date.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String start \u003d linesplit[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String end \u003d linesplit[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (end.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The datetime of an event cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else if (isTimeStampValid(end)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String pattern \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.from(formatter.parse(end));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Timestamp timestamp \u003d Timestamp.valueOf(localDateTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            end \u003d formatter2.format(timestamp.toLocalDateTime());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Task task \u003d new Event(start, end);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr.addTask(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.addTaskMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            storage.writeToFile(arr);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"Time format is wrong! Try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks for the validity of the datetime given by user"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * by checking the format and validity of the datetime itself."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param inputString datetime input by user in \u003ccode\u003eString\u003c/code\u003e format."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Returns true if the datetime given by user is valid, false otherwise."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isTimeStampValid(String inputString)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        SimpleDateFormat format \u003d new java.text.SimpleDateFormat(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String str \u003d \"\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            format.parse(inputString);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            String pattern \u003d \"dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.from(formatter.parse(inputString));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Timestamp timestamp \u003d Timestamp.valueOf(localDateTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            DateTimeFormatter formatter2 \u003d DateTimeFormatter.ISO_LOCAL_DATE_TIME;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            str \u003d formatter2.format(timestamp.toLocalDateTime());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch(ParseException | DateTimeException e)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 105
    }
  },
  {
    "path": "src/main/java/duke/command/completeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to mark \u003ccode\u003eTask\u003c/code\u003e as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class completeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003ecompleteCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param index Represents the index of the \u003ccode\u003eTask\u003c/code\u003e to be marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public completeCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Marks the specific \u003ccode\u003eTask\u003c/code\u003e defined by the user as done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after confirming the validity of the command inputted by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (index \u003e\u003d arr.getSize() || index \u003c 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Invalid number!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Task task \u003d arr.getTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            task.setStatus();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.completeMessage(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 52
    }
  },
  {
    "path": "src/main/java/duke/command/deleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to delete a specific \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class deleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003edeleteCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param index Represents the index of the \u003ccode\u003eTask\u003c/code\u003e to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public deleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Deletes the specific \u003ccode\u003eTask\u003c/code\u003e defined by the user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * after confirming the validity of the command inputted by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (index \u003e\u003d arr.getSize() || index \u003c 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! Invalid number!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            Task task \u003d arr.getTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            arr.deleteTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.deleteMessage(task, arr.getSize());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            storage.writeToFile(arr);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 53
    }
  },
  {
    "path": "src/main/java/duke/command/exitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e to terminate \u003ccode\u003eDuke\u003c/code\u003e."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class exitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eexitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public exitCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Exits the \u003ccode\u003eDuke\u003c/code\u003e program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return true."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 36
    }
  },
  {
    "path": "src/main/java/duke/command/findCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eCommand\u003c/code\u003e that finds and displays specific tasks in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class findCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003efindCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public findCommand(String line) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Finds the \u003ccode\u003eTasks\u003c/code\u003e that contain the keyword(s) specified"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * by the user after processing the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Displays the \u003ccode\u003eTasks\u003c/code\u003e found after collating them."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param arr Instance of \u003ccode\u003eTaskList\u003c/code\u003e that stores \u003ccode\u003eTask\u003c/code\u003e objects."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param ui Instance of \u003ccode\u003eUi\u003c/code\u003e that is responsible for visual feedback."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param storage Instance of \u003ccode\u003eStorage\u003c/code\u003e that enables the reading and writing of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     *      *         objects to harddisk."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @throws DukeException Catches invalid commands given by user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void execute(TaskList arr, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String linesplit[] \u003d line.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (linesplit.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        String item \u003d linesplit[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        ArrayList\u003cTask\u003e foundarr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.getSize(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            if (arr.getTask(i).getLine().contains(item)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                foundarr.add(arr.getTask(i));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        if (foundarr.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tThere are no matching tasks in your list!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            for (int i \u003d 0; i \u003c foundarr.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \". \" + foundarr.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Checks if \u003ccode\u003eexitCommand\u003c/code\u003e is called for \u003ccode\u003eDuke\u003c/code\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * to terminate."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return false."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 69
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a newly specified \u003ccode\u003eException\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eDukeException\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param error Error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e object. A \u003ccode\u003eDeadline\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * object is a type of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param description Details of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param by Due date and time of the \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Customises the \u003ccode\u003etoString()\u003c/code\u003e method to print"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * the \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Customised String for \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e object. An \u003ccode\u003eEvent\u003c/code\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * object is a type of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param description Details of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param timing Date and time of the \u003ccode\u003eEvent\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Customises the \u003ccode\u003etoString()\u003c/code\u003e method to print"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * the \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Customised String for \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + timing + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Abstract parent class of all subclasses of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected String line;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param line Command inputted by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Task(String line) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void setStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Retrieves the description of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Description of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Retrieves the status icon of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Status icon of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return (status ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Customises the \u003ccode\u003etoString()\u003c/code\u003e method to print"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * the \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Customised String for \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e object. A \u003ccode\u003eTodo\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " * object is a type of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Constructor for \u003ccode\u003eTodo\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @param description Description of the \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * Customises the \u003ccode\u003etoString()\u003c/code\u003e method to print"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * the \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     * @return Customised String for \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 24
    }
  },
  {
    "path": "src/test/java/chooseCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.addDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.addEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.completeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.deleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.exitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.findCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jasperosy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "public class chooseCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testBye() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new exitCommand(), chooseCommand.choose(\"bye\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testList() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new ListCommand(), chooseCommand.choose(\"list\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testDone() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new completeCommand(2), chooseCommand.choose(\"done 2\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testTodo() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new AddToDoCommand(\"borrow book\"), chooseCommand.choose(\"todo borrow book\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testDeadline() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new addDeadlineCommand(\"homework /by 11-11-2019 11:11\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "                chooseCommand.choose(\"deadline homework /by 11-11-2019 11:11\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testInvalidDeadline() throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            chooseCommand.choose(\"deadline testing /by\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a deadline needs a due date.\", e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testEvent() throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        assertEquals(new addEventCommand(\"testing /at 11-11-2019 11:11\"), chooseCommand.choose(\"event testing /at 11-11-2019 11:11\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    public void testInvalid() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            chooseCommand.choose(\"abcd\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "            assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jasperosy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jasperosy": 62
    }
  }
]

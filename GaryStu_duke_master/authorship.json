[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    toolVersion \u003d \u00278.1\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 15,
      "Ivan Andika": 23
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        //Greeting the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Greeting();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        //Create an dynamic ArrayList for tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        LoadFile(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            //Split the command line to command and description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            String[] splitCommand \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            String command \u003d splitCommand[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            if (splitCommand.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                description \u003d splitCommand[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                if (command.equals(\"done\") || command.equals(\"todo\") || command.equals(\"event\") || command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    Bye();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    ListTasks(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    DoneCommand(tasks, description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    AddToDo(tasks, description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    AddDeadline(tasks, description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    AddEvent(tasks, description);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    // AddTask(tasks, description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                String padding \u003d \"     \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                System.out.println(boundary);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                System.out.println(padding + e.getMessage());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                System.out.println(boundary);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void Greeting() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void Bye() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(\"     \" + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void ListTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            Task currentTask \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(padding + i + \". \" + currentTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void DoneCommand(ArrayList\u003cTask\u003e tasks, String description) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        int commandNumber \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        //we need to get the reference for the task in the array"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Task currentTask \u003d tasks.get(commandNumber - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        currentTask.markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        UpdateFile(tasks);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"  \" + currentTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void AddTask(ArrayList\u003cTask\u003e tasks, String input) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(new Task(input));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        UpdateFile(tasks);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"added: \" + input);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void AddToDo(ArrayList\u003cTask\u003e tasks, String description) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newToDo);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        UpdateFile(tasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"  \" + newToDo);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void AddDeadline(ArrayList\u003cTask\u003e tasks, String description) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String SplitString[] \u003d description.split(\" /by \", 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(SplitString[0], SplitString[1]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        UpdateFile(tasks);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"  \" + newDeadline);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void AddEvent(ArrayList\u003cTask\u003e tasks, String description) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String boundary \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String padding \u003d \"     \";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String SplitString[] \u003d description.split(\" /at \", 2);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Event newEvent \u003d new Event(SplitString[0], SplitString[1]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        UpdateFile(tasks);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"  \" + newEvent);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(padding + \"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println(boundary);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void LoadFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String fileName \u003d \".\\\\Data\\\\duke.txt\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            FileReader fileReader \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            while((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                ParseLine(line, tasks);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(\"Unable to open file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(\"Error reading file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void ParseLine(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String[] splitLine \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String taskType \u003d splitLine[0];"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        boolean isDone \u003d splitLine[1].equals(\"1\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String description \u003d splitLine[2];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String timeFrame \u003d \"\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        if (taskType.equals(\"D\") || taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            timeFrame \u003d splitLine[3];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            ParseToDo(tasks, description, isDone);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            ParseDeadline(tasks, description, timeFrame, isDone);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            ParseEvent(tasks, description, timeFrame, isDone);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void ParseToDo(ArrayList\u003cTask\u003e tasks, String description, boolean isDone) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        ToDo newToDo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            newToDo.markAsDone();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newToDo);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void ParseDeadline(ArrayList\u003cTask\u003e tasks, String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            newDeadline.markAsDone();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void ParseEvent(ArrayList\u003cTask\u003e tasks, String description, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        Event newEvent \u003d new Event(description, duration);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            newEvent.markAsDone();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static void UpdateFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        String filePath\u003d \".\\\\Data\\\\duke.txt\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                String currentLine \u003d currentTask.toString();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                if (i \u003e 0) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                String status \u003d \"0\";"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                if (currentTask.isDone) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    status \u003d \"1\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                bufferedWriter.write(currentTask.type + \" | \" + status + \" | \" + currentTask.description);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                if ((currentTask.type).equals(\"E\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    String timeFrame \u003d (currentLine.split(\"at: \", 2))[1];"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    bufferedWriter.write(\" | \" + timeFrame.substring(0, timeFrame.length() - 1));"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                else if ((currentTask.type).equals(\"D\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    String timeFrame \u003d (currentLine.split(\"by: \", 2))[1];"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                    bufferedWriter.write(\" | \" + timeFrame.substring(0, timeFrame.length() - 1));"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(\"Error writing to file \u0027\" + filePath + \"\u0027\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static LocalDate getDateFromString(String string, DateTimeFormatter format) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(string, format);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public static LocalDate StringtoDate(String str) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"\" +"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                \"[dd/MM/yyyy HHmm]\" +"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                \"[dd/MM/yy]\" +"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "                \"[yyyy-MM-dd\u0027T\u0027HH:mm[:ss.n]]\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            return getDateFromString(str, formatter);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(\"Exception: \" + e);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "            System.out.println(\"Exception: \" + e);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    protected String type \u003d \"\";"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        //TODO: refactor this by using type also"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "//tasks without any date/time attached to it"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "//tasks that need to be done before a specific date/time"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "//tasks that start at a specific time and ends at a specific time"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public Event(String description, String duration) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super.type \u003d \"E\";"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "}"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "Ivan Andika"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "Ivan Andika": 372
    }
  }
]

[
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String input, command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static int number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "        file \u003d new File(workingDir + \"\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            updateFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                command \u003d sc.next();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                if(command.trim().isEmpty()){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    throw new DukeException(\"\\u2639\" + \" OOPS!!! Input is empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(i + \".\" + list.get(i - 1).toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        number \u003d sc.nextInt();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (number \u003e list.size()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            throw new DukeException(\"number entered is more than size of list\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        list.get(number - 1).setDone(true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(list.get(number - 1).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    } catch(Exception e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.printf(\"Please enter the todo as follows:\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"done number_on_list\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"For example: done 2\\n\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        if(input.trim().isEmpty()){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                        list.add(new Todo(input.trim()));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                        if(input.trim().isEmpty()){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            throw new DukeException(\"\\u2639\" + \" OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] arr \u003d input.trim().split(\" /by \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                            Date date \u003d formatter.parse(arr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                            list.add(new Deadline(arr[0], date));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (Exception e){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.printf(\"Please enter the deadline as follows:\\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \"deadline name_of_activity /at dd/MM/yyyy HHmm\\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \"For example: deadline return book /by 2/12/2019 1800\\n\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (input.trim().isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                            String[] arr \u003d input.trim().split(\" /at \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                            Date date \u003d formatter.parse(arr[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                            list.add(new Event(arr[0], date));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.println(list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            System.out.println();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                        } catch (Exception e){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.printf(\"Please enter the event time as follows:\\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \"event name_of_event /at dd/MM/yyyy HHmm\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                                    \"For example: event project meeting /at 1/1/2000 0600\\n\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                else if (command.equals(\"delete\")){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        number \u003d sc.nextInt();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        if (number \u003e list.size()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            throw new DukeException(\"number entered is more than size of list\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.println(list.get(number - 1).toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        list.remove(number-1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.print(\"Now you have \" + list.size() + \" tasks in the list.\\n\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    } catch(Exception e){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.printf(\"Please enter the delete as follows:\\n\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"delete number_on_list\\n\" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"For example: delete 2\\n\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                else if (command.equals(\"find\")){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        ArrayList\u003cTask\u003e temp;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        for (Task task : list) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            if (task.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                temp.add(task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        if(temp.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            System.out.print(\"Sorry, there weren\u0027t any description matching your keyword.\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                    \"Please enter again.\\n\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            for (int i \u003d 1; i \u003c\u003d temp.size(); i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                System.out.println(i + \".\" + temp.get(i - 1).toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                            System.out.println();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                        System.out.print(\"Please enter the find as follows:\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"find keyword\\n\" +"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                                \"For example: find book\\n\\n\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lionlim97"
        },
        "content": "                    throw new DukeException(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void readFile() throws ParseException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cString\u003e temp;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            temp \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(String.valueOf(file))));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        if(temp.isEmpty()) return;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        for(String string : temp){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "            if(string.trim().isEmpty()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Error\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                System.exit(5);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            Task line;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            if(string.contains(\"[T]\")){"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d new Todo(string.substring(7));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            else if(string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                DateFormat format \u003d new SimpleDateFormat(\"E MMM dd HH:mm:ss Z yyyy\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                Date date \u003d format.parse(string.substring(string.indexOf(\"by:\") + 4, string.indexOf(\u0027)\u0027)).trim());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d new Deadline(string.substring(7, string.indexOf(\"by:\") - 2), date);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "                DateFormat format \u003d new SimpleDateFormat(\"E MMM dd HH:mm:ss Z yyyy\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "                Date date \u003d format.parse(string.substring(string.indexOf(\"at:\") + 4, string.indexOf(\u0027)\u0027)));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d new Event(string.substring(7, string.indexOf(\"at:\")-2), date);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            if(string.contains(\"\\u2713\")){"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                line.setDone(true);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            list.add(line);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void updateFile() throws FileNotFoundException{"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        PrintWriter outputStream \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        for(Task task : list){"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            outputStream.println(task.toString());"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        outputStream.close();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lionlim97": 64,
      "-": 159
    }
  }
]

[
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        FileWriter openFile \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            openFile \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            System.out.println((i + 1) + \". \" + taskList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    } else if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                String taskOut \u003d userInput.replaceFirst(\"todo\", \"\");//todo| |read book spilt to three parts"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                    throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskList.add(new Todo(taskOut));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                openFile.write(\"T | 0 | \" +  taskOut + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                //catch exception"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Please enter another task!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                continue;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                String taskOut \u003d userInput.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                    throw new DukeException(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                String[] by \u003d taskOut.split(\" /by \", 2);//3. by|sunday"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskList.add(new Deadline(by[0], by[1]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                openFile.write(\"D | 0 | \" + by[0] + \" | \" + by[1] + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Please enter another task! in the form: deadline \u0027description\u0027 /by \u0027due period\u0027\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                continue;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                String taskOut \u003d userInput.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                    throw new DukeException(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                String[] at \u003d taskOut.split(\" /at \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskList.add(new Event(at[0], at[1]));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                openFile.write(\"E | 0 | \" + at[0] + \" | \" + at[1] + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                continue;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            String[] split \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            int index \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"Invalid number!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                taskList.get(index).updateFlag();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                System.out.println(\"  \" + taskList.get(index).getStatusIcon());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                //Write to file"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                openFile.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                openFile \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                for(int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                                    openFile.write(taskList.get(i).getType()+ \" | \" + taskList.get(i).isDone + \" | \" + taskList.get(i).description + \" | \" + taskList.get(i).getWhen() + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                            throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    // continue;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }finally {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            openFile.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 117,
      "-": 20
    }
  }
]

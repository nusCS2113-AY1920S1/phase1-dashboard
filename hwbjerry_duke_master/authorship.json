[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "\tmainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 2,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.type \u003d \"type\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return super.getDescription() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getWhen() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    static ArrayList\u003cTask\u003e arrList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        tasks \u003d new TaskList(arrList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "       // try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            ui.showWelcomeDukeLogo();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            ui.sayHello();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            //tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "           // String userInput \u003d ui.scanLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            Parser parser \u003d new Parser(ui, tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            parser.decode(\"userInput\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            //tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//    static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//    public static void main(String[] args) throws IOException{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        String userInput;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        FileWriter openFile \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            openFile \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            while (true) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            System.out.println((i + 1) + \". \" + taskList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    } else if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String taskOut \u003d userInput.replaceFirst(\"todo\", \"\");//todo| |read book spilt to three parts"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskList.add(new Todo(taskOut));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                openFile.write(\"T | 0 | \" +  taskOut + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                //catch exception"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Please enter another task!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String taskOut \u003d userInput.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String[] by \u003d taskOut.split(\" /by \", 2);//3. by|sunday"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskList.add(new Deadline(by[0], by[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                openFile.write(\"D | 0 | \" + by[0] + \" | \" + by[1] + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Please enter another task! in the form: deadline \u0027description\u0027 /by \u0027due period\u0027\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                continue;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String taskOut \u003d userInput.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    throw new DukeException(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String[] at \u003d taskOut.split(\" /at \", 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskList.add(new Event(at[0], at[1]));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"  \" + taskList.get(taskList.size() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                openFile.write(\"E | 0 | \" + at[0] + \" | \" + at[1] + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                continue;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            String[] split \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            int index \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Invalid number!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskList.get(index).updateFlag();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"  \" + taskList.get(index).getStatusIcon());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                //Write to file"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                openFile.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                openFile \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                for(int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    openFile.write(taskList.get(i).getType()+ \" | \" + taskList.get(i).isDone + \" | \" + taskList.get(i).description + \" | \" + taskList.get(i).getWhen() + \"\\n\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        } else if(userInput.startsWith(\"find\")){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                String taskOut \u003d userInput.replaceFirst(\"find\", \"\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    throw new DukeException(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                int count \u003d 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                for(int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    if(taskList.get(i).getDescription().contains(taskOut)){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                        System.out.println(count + \". \" + taskList.get(i).getStatusIcon());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            } catch(DukeException exception){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                System.out.println(\"Please find in format. find \u0027keyword\u0027\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                                continue;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                            throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                    // continue;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }finally {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            openFile.close();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 182,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.InputMismatchException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class DukeException extends InputMismatchException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.type \u003d \"type\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return  \"[E][\" + super.getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return super.getDescription() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getWhen() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //protected String userInput;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    private TaskList taskList; //\u003d new TaskList();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    private Ui ui; //\u003d new Ui();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Parser(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        //this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        //decode(userInput);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void decode(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        while(!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "         try{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            userInput \u003d ui.scanLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String taskOut \u003d userInput.replaceFirst(\"todo\", \"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //Todo todo \u003d new Todo(taskOut);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskList.addTask(new Todo(taskOut));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    ui.addedTaskMessage(taskList.getTask(taskList.getSize() - 1).getStatusIcon(), taskList.getSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //catch exception"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"Please enter another task!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String taskOut \u003d userInput.replaceFirst(\"deadline\", \"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String[] by \u003d taskOut.split(\" /by \", 2);//3. by|sunday"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskList.addTask(new Deadline(by[0], by[1]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    ui.addedTaskMessage(taskList.getTask(taskList.getSize() - 1).getStatusIcon(), taskList.getSize());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"Please enter another task! in the form: deadline \u0027description\u0027 /by \u0027due period\u0027\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String taskOut \u003d userInput.replaceFirst(\"event\", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        throw new DukeException(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String[] at \u003d taskOut.split(\" /at \", 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskList.addTask(new Event(at[0], at[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    ui.addedTaskMessage(taskList.getTask(taskList.getSize() - 1).getStatusIcon(), taskList.getSize());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                System.out.println(\"  \" + taskList.getTask(taskList.getSize() - 1).getStatusIcon());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                openFile.write(\"E | 0 | \" + at[0] + \" | \" + at[1] + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                String[] split \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                int index \u003d Integer.parseInt(split[1]) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                if (index \u003c 0 || index \u003e\u003d taskList.getSize()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"Invalid number!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskList.markCompleted(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    // System.out.println(\"  \" + taskList.getAllDescription());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    ui.completeMessage(taskList.getTask(index).getStatusIcon());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                //Write to file"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                openFile.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                openFile \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                for(int i \u003d 0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                    openFile.write(taskList.get(i).getType()+ \" | \" + taskList.get(i).isDone + \" | \" + taskList.get(i).description + \" | \" + taskList.get(i).getWhen() + \"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    //                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String taskOut \u003d userInput.replaceFirst(\"find\", \"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        throw new DukeException(\"Please enter another task! In the form: event \u0027description\u0027 /at \u0027due period\u0027\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    ui.listFindDetailsWithKeyword(taskList, taskOut, taskList.getSize());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"Please find in format. find \u0027keyword\u0027\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    String taskOut \u003d userInput.replaceFirst(\"list\", \"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    taskOut \u003d taskOut.trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    if (taskOut.isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        ui.listFindDetails(taskList, taskList.getSize());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        System.out.println(\"Please find in format. find \u0027keyword\u0027\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                } catch (DukeException exception) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    throw new DukeException(\"Please find in format. find \u0027keyword\u0027\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                //next time (branch-level-6)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else if (userInput.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }catch (DukeException exception) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                    // continue;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 120
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 2
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected String when;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.type \u003d \"type\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.when \u003d \"when\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void updateFlag(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void updateDescription(String userInput){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        description \u003d userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getWhen(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return when;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 38
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e temp) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        this.taskList \u003d temp;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //adds new item to array list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void addTask(Task temp) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        taskList.add(temp);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //remove selected item"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //flags item as completed (done)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void markCompleted(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        taskList.get(index).updateFlag();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    //gets desired output format of all details"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getAllDescription(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return taskList.get(index).getStatusIcon();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 37
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    protected Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public String scanLine() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void showWelcomeDukeLogo() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void sayHello() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void addedTaskMessage(String task, int size) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        if (size \u003e 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void completeMessage(String task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void deleteMessage(String task, int size) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\t\\t\" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        if (size \u003e 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            System.out.println(\"\\tNow you have \" + size + \" tasks in your list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//            System.out.println(\"\\tNow you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void listFindDetails(TaskList taskList, int size){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.getSize(); i++){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            System.out.println(count++ + \". \" + taskList.getTask(i).getStatusIcon());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void listFindDetailsWithKeyword(TaskList taskList,String keyword, int size){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.getSize(); i++){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            if(taskList.getTask(i).getDescription().contains(keyword)){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "                System.out.println(count++ + \". \" + taskList.getTask(i).getStatusIcon());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    public void showLoadingError(DukeException exception) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        System.out.println(\"\\t\" + exception.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hwbjerry"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hwbjerry": 88
    }
  }
]

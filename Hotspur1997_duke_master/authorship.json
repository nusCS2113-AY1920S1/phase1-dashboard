[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    id\u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "sourceCompatibility \u003d \u002711\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    mainClassName \u003d \"main.java.Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 26,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "enum TimePatternType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    DAY_OF_WEEK, DATE_TIME, DATE, TIME"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "* Class to specifically handle the date time parsing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "* @param line: the string to format"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "*/"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    LocalDateTime parseStringToDate(String line) throws DukeException { //implement a dat to find how to parse the time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] patterns \u003d {\"[\u0027next \u0027][\u0027this \u0027]E\", \"[\u0027this \u0027][\u0027next \u0027]EEEE\", \"dd/MM/yyyy HHmm\","
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                \"d/MM/yyyy HHmm\", \"dd/MM/yy HHmm\", \"HHmm\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                \"dd/MM/yy\", \"yyyy-MM-dd\u0027T\u0027HH:mm[:ss.n]\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        TimePatternType[] types \u003d {TimePatternType.DAY_OF_WEEK, TimePatternType.DAY_OF_WEEK,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                TimePatternType.DATE_TIME, TimePatternType.DATE_TIME, TimePatternType.DATE_TIME, TimePatternType.TIME, TimePatternType.DATE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                TimePatternType.DATE_TIME};"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        while (i \u003c patterns.length) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                TemporalAccessor ac \u003d DateTimeFormatter.ofPattern(patterns[i]).parse(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                switch (types[i]) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    case DAY_OF_WEEK:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        LocalDateTime localDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        return localDateTime.with(TemporalAdjusters.nextOrSame(DayOfWeek.from(ac))); //parsing from local date time"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    case DATE_TIME:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        return LocalDateTime.from(ac);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    case TIME:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        LocalDate localDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        return localDate.atTime(LocalTime.from(ac)); //parsing in time format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    case DATE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        LocalTime localTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                        return localTime.atDate(LocalDate.from(ac)); //parsing in date format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        throw new DukeException(\"The format is invalid! Please try writing in a better format\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 49
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "*Inherited class to store information representing a deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class Deadline extends Request {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private LocalDateTime ddate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String localDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Constructor of Deadline class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param description: information about the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param ddate: local date time java type to get realtime date and time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Deadline(String description, LocalDateTime ddate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.ddate \u003d ddate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Constructor of Deadline class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param description: information about the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param localDate: string type containing info about the date and time of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Deadline(String description, String localDate) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.localDate \u003d localDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to print the task on the command line to the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String print_req() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"[D]\" + result() + \" \" + getName() + \" (by: \" + (ddate \u003d\u003d null ? localDate : ddate.toString()) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to format the string to be output onto a txt file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String file_format() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"D | \" + index() + \" | \" + getName() + \" | \" + (ddate \u003d\u003d null ? localDate : ddate.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * main class of duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Task schedule \u003d new Task();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        FileParse fileManager \u003d new FileParse();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke!\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        fileManager.load_file(schedule);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        while (true) { //keep checking until we encounter the \"bye\" command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String command \u003d ui.readCommand(); //read the command of the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            Parser parser \u003d new Parser(command); //create a new parser class for the command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            parser.parseCommand(schedule); //handle the command accordingly"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (parser.isExit()) { //check if bye has been entered into the input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                break; //exit the program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 20,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * class to handle exceptions in duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * constructor for a duke exception"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param message: message to tell the user when he encounters an error"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " *Inherited class to store information representing an event task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class Event extends Request {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private LocalDateTime dtime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String dt_string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Constructor of Deadline class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param description: information about the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param dtime: local date time java type to get realtime date and time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Event(String description, LocalDateTime dtime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.dtime \u003d dtime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Constructor of Deadline class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param description: information about the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param dt_string: string type containing info about the date and time of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Event(String description, String dt_string) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.dt_string \u003d dt_string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to print the task on the command line to the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String print_req() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"[E]\" + result() + \" \" + getName() + \" (at: \" + (dtime \u003d\u003d null ? dt_string: dtime.toString()) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to format the string to be output onto a txt file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String file_format() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"E | \" + index() + \" | \" + getName() + \" | \" + (dtime \u003d\u003d null ? dt_string: dtime.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 40
    }
  },
  {
    "path": "src/main/java/FileParse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * class to handle writing into the txt file and reading from txt file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class FileParse {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String f_path \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private DateTimeParser dt_parser \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String filePath \u003d \"src/main/Data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to write to txt file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param list: to do list of duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void save_file(ArrayList\u003cRequest\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            for (Request t: list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                String line \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    line \u003d ((Deadline)t).file_format();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    line \u003d ((Event)t).file_format();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                } else if (t instanceof ToDo) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    line \u003d ((ToDo)t).file_format();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                fileWriter.write(line + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\"File error is: \" + e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to read a line of the txt file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param list: to do list of duke"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param schedule: class to handle updating operations of the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void line_parse(Task schedule, String line) throws DukeException{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "         String[] token \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             String type \u003d token[0].strip();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             String status \u003d token[1].strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             String description \u003d token[2].strip();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             ArrayList\u003cRequest\u003e to_do \u003d schedule.retrieve_list();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                     to_do.add(new Deadline(description, dt_parser.parseStringToDate(token[3].strip())));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                     to_do.add(new Deadline(description, token[3].strip()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                     to_do.add(new Event(description, dt_parser.parseStringToDate(token[3].strip())));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                     to_do.add(new Event(description, token[3].strip()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             } else if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                 to_do.add(new ToDo(description));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             if (status.equals(\"1\")) to_do.get(to_do.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "         } catch(Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "             throw new DukeException (e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "         }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to load the txt file information onto the to_do list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param schedule: class to handle the update operations of duke"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void load_file(Task schedule) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            Scanner fileReader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            while (fileReader.hasNext()) line_parse(schedule, fileReader.nextLine());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 82
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * class to handle the command of the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private DateTimeParser dt_parser \u003d new DateTimeParser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * constructor of the parser"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param command: type of command to handle"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param command: type of command to handle"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String extract() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] token \u003d command.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return token[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     /*"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "      * function to handle the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "      * @param schedule: class to handle the various commands in duke"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "      */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void parseCommand(Task schedule) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] token \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String action \u003d token[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            switch(action) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.update_list(token[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.print_list();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.add(createToDo());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.add(createEvent());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.add(createDeadline());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.find(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    schedule.remove_item(command);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                    throw new DukeException (\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * check if the \u0027bye\u0027 command has been entered"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * creates a deadline class"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Deadline createDeadline() throws DukeException{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] token \u003d command.substring(\"deadline\".length()).strip().split(\"/by\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!!  The deadline description must be formatted correctly.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return new Deadline(token[0].strip(), dt_parser.parseStringToDate(token[1].strip()));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return new Deadline(token[0].strip(),token[1].strip());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * creates an event class"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Event createEvent() throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] token \u003d command.substring(\"event\".length()).strip().split(\"/at\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!!  The deadline description must be formatted correctly.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return new Event(token[0].strip(), dt_parser.parseStringToDate(token[1].strip()));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            return new Event(token[0].strip(),token[1].strip());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * creates a to do class"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public ToDo createToDo() throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String token \u003d command.substring(\"todo\".length()).strip();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token.strip().isEmpty()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return new ToDo(token);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 113
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * superclass for all tasks in the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "class Request {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private boolean completed;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * constructor for the request class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param name: description of the string"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Request(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * marks the particular task as completed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * checks if the task is completed and returns the relevant symbol"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String result() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return (completed ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * return the description of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * prints the task on the command line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String print_req() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return result() + \" \" + name;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * returns an integer depending on wether the task is complete"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public int index() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return (completed ? 1 : 0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * return a string denoting the format of the task in the txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String file_format() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * class to control the entire to-do list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    private ArrayList\u003cRequest\u003e to_do;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    FileParse fp;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        to_do \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        fp \u003d new FileParse();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * adds item inside to-do list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param d: a task to be added into the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void add(Request d) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        to_do.add(d);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(d.print_req());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Now you have \" + to_do.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            fp.save_file(to_do);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "           System.err.println(\"File error is: \" + e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * marks the queried item as done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param request: index of the task to mark as done"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void update_list(String request) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        int index \u003d Integer.parseInt(request);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        index--;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            to_do.get(index).markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(\"[✓] \" + to_do.get(index).getName());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            fp.save_file(to_do);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "           System.err.println(\"There are not that many tasks in the list please try again\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * removes the item from the list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param req: the index of the task to remove"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void remove_item(String req) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            String[] token \u003d req.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            int index \u003d Integer.parseInt(token[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            index--;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(to_do.get(index).print_req());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            to_do.remove(index);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println(\"Now you have \" + to_do.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            fp.save_file(to_do);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.err.println(\"The list is not that large, please try again\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     *prints the entire list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void print_list() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (int i \u003d 0; i \u003c to_do.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            System.out.println((i + 1) + \".\" + to_do.get(i).print_req());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * return the size of the list"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     public int size() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "         return to_do.size();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * return the entire to_do list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public ArrayList\u003cRequest\u003e retrieve_list() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return to_do;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * finds an item with a specific keyword in the list"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param command: string containing the keyword to be found"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void find(String command) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String[] token \u003d command.split(\" \");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        if (token.length !\u003d 2 || token[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            throw new DukeException (\"find cannot be empty\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        String query \u003d token[1];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        for (Request i: to_do) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            if (i.getName().contains(query)) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "                System.out.println(index++ + \".\" + i.print_req());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 162
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " *Inherited class to store information representing a to do task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class ToDo extends Request {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * Constructor of to do class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * @param description: information about the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * prints the to do task on the CLI"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String print_req() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"[T]\" + result() + \" \" + getName();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * prints the task in a file format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String file_format() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return \"T | \" + index() + \" | \" + getName();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "/*"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " * class to read in the user input"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     * function to read in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 13
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 9
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    Parser parse \u003d new Parser(\"deadline return book /by Sunday\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void parsing() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        assertTrue(parse.extract().equals(\"deadline\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 10
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    Task schedule \u003d new Task();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    public void test() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "        assertTrue(schedule.size() \u003d\u003d 0);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Hotspur1997"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Hotspur1997": 10
    }
  }
]

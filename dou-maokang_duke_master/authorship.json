[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static TaskList taskList\u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat ft \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat rt \u003d new SimpleDateFormat(\"EEE MMM d HH:mm:ss z yyyy\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.printLogo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        Storage.readData(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        while (!parser.getCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (parser.getCommand().toLowerCase()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.getList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (taskList.finishTask(parser.getTaskNum()) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                        parser.getNewLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.printf(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                                \"%s\\n\", taskList.getTask(parser.getTaskNum()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (taskList.deleteTask(parser.getTaskNum()) \u003d\u003d -1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                        parser.getNewLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.findTask(parser.getSearchKeyword());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.addTask(new ToDos(parser.getTodoTask()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.countTask() - 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.printf(\"Now you have %d %s in the list.\\n\", taskList.countTask(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "                            ((taskList.countTask() \u003e 1) ? \"tasks\" : \"duke/task\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (parser.getDeadlineDescription() \u003d\u003d null || parser.getDeadlineTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(DukeException.invalidInput());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                        parser.getNewLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.addTask(new Deadline(parser.getDeadlineDescription(), parser.getDeadlineTime()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.countTask() - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.printf(\"Now you have %d %s in the list.\\n\", taskList.countTask(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "                                ((taskList.countTask() \u003e 1) ? \"tasks\" : \"duke/task\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (parser.getEventDescription() \u003d\u003d null || parser.getEventTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(DukeException.invalidInput());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        parser.getNewLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.addTask(new Event(parser.getEventDescription(), parser.getEventTime()));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.countTask() - 1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.printf(\"Now you have %d %s in the list.\\n\", taskList.countTask(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "                                ((taskList.countTask() \u003e 1) ? \"tasks\" : \"duke/task\"));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(DukeException.unknownInput());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    Ui.drawLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    parser.getNewLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.drawLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            parser.getNewLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.sayGoodbye();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.drawLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        Storage.saveData(taskList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 14,
      "-": 84
    }
  },
  {
    "path": "src/main/java/duke/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents an error occurred when duke is performing an action."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Creates an exception with the specified message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String unknownInput() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"I am sorry, but I do not understand what this means.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Creates an exception with the specified message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String invalidInput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"I am sorry, but your input is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 11,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents a parser that breaks down user input into commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat ft \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat rt \u003d new SimpleDateFormat(\"EEE MMM d HH:mm:ss z yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the following line of user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return the user input String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getNewLine() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get user command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return the command type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.userInput.contains(\" \") ? this.userInput.split(\" \", 2)[0] : this.userInput;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the task number in the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return the number of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public int getTaskNum() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            num \u003d Integer.parseInt(userInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(DukeException.invalidInput());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        return num;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the researched keyword."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return the keyword."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSearchKeyword() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the description for ToDos."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return return the task description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getTodoTask() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        return userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the description for Deadline."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return return the task description."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDeadlineDescription() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        String subStr \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        return subStr.split(\"/by\")[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the date and time for Deadline."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return return the task date and time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getDeadlineTime() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        String subStr \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        Date time \u003d null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "             time \u003d ft.parse(subStr.split(\"/by\")[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch(ParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"OOPS!!! Please enter time in right format: dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the description for Event."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return return the task description."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEventDescription() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        String subStr \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        return subStr.split(\"/at\")[0];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the date and time for Event."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return return the task date and time."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    public Date getEventTime() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        String subStr \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        Date time \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            time \u003d ft.parse(subStr.split(\"/at\")[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch(ParseException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"OOPS!!! Please enter time in right format: dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 47,
      "-": 75
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static File dukeText \u003d new File(\"dukeTaskList.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private static InputStream is;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat ft \u003d new SimpleDateFormat(\"dd/MM/yyyy hhmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private static SimpleDateFormat rt \u003d new SimpleDateFormat(\"EEE MMM d HH:mm:ss z yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /***\u003cp\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * read the data stored in hard disk to taskList\u003c/p\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList the array list stores all tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void readData(TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            is \u003d new FileInputStream(dukeText);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new InputStreamReader(is));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "                String[] words \u003d line.split(\";\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.addTask(new ToDos(words[2]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.finishTask(taskList.countTask() - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.addTask(new Deadline(words[2], rt.parse(words[3])));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.finishTask(taskList.countTask() - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                else if (words[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.addTask(new Event(words[2], rt.parse(words[3])));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.finishTask(taskList.countTask() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            is.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    /***\u003cp\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     * save the tasks data to the hard disk\u003c/p\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskList the array list of tasks to be saved"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void saveData(TaskList taskList) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        int isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        int indexOfDescriptionFront;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        int indexOfDescriptionBack;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.countTask();i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskStr \u003d taskList.getTask(i).toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskStr.contains((\"[v]\")))"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                isDone \u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            else"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                isDone \u003d 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskStr.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                output +\u003d \"todo;\" + isDone + \";\" + taskStr.substring(taskStr.lastIndexOf(\"]\") + 1) + \"\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (taskStr.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                indexOfDescriptionFront \u003d taskStr.lastIndexOf(\"]\") + 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                indexOfDescriptionBack \u003d taskStr.indexOf(\"(by\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                output +\u003d \"deadline;\" + isDone + \";\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskStr.substring(indexOfDescriptionFront, indexOfDescriptionBack - 1) +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                        \";\" + taskStr.substring(indexOfDescriptionBack + 4, taskStr.length() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (taskStr.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                indexOfDescriptionFront \u003d taskStr.lastIndexOf(\"]\") + 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                indexOfDescriptionBack \u003d taskStr.indexOf(\"(at\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                output +\u003d \"event;\" + isDone + \";\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskStr.substring(indexOfDescriptionFront, indexOfDescriptionBack - 1) +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                        \";\" + taskStr.substring(indexOfDescriptionBack + 4, taskStr.length() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(dukeText));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            bw.write(output);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) { }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 7,
      "-": 95
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents a deadline that stores description and date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    private Date deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a task with deadline in format of dd/mm/yyyy time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param deadline The deadline of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public Deadline(String description, Date deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a finished task with deadline in format of dd/mm/yyyy time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param deadline The deadline of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param isDone The status of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public Deadline(String description, Date deadline, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Extracting a task content into readable string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return String to be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        if (this.getStatus())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "            return (\"[D]\" + \"[v]\" + super.description + \" (by:\" + deadline + \")\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "            return (\"[D]\" + \"[x]\" + super.description + \" (by:\" + deadline + \")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Change the status of the task to done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The new task with isDone \u003d True."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        return new Deadline(this.description, this.deadline,true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public static void main(String[] args) {}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents an event that stores description and date/time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private Date time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create an event at a specific date and time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param time The specific date and time of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, Date time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a finished event at a specific date and time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param time The specific date and time of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param isDone The status of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, Date time, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Extracting a task content into readable string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return String to be displayed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.getStatus())"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"[E]\" + \"[v]\" + super.description + \" (at:\" + time + \")\" ;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"[E]\" + \"[x]\" + super.description + \" (at:\" + time + \")\" ;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Change the status of the task to done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The new task with isDone \u003d True."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Event(this.description, this.time,true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 25,
      "-": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents a task that stores description and boolean that indicates the task as completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a task with description and status."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a task with description and status."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param isDone The status of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Extracting a task content into readable string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return String to be displayed."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        if (this.getStatus())"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"[v]\" + this.description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            return \"[x]\" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the status of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The status of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Change the status of the task to done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The new task with isDone \u003d True."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 28,
      "-": 33
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents a task list that stores a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Creates an empty task list using an array list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Creates an updated task list with the specified array list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param taskList The updated array list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the whole list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"The current list is empty!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.printf(\"%d. %s\\n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get the number of tasks in the list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The number of tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public int countTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Get a specific task in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param num The number of the target task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The target task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task getTask(int num) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskList.get(num);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Add a new task into the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param newTask The new task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param num The number of the target task in the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The new task marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    public int finishTask(int num) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskList.get(num).isDone) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"This task is already finished!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                taskList.set(num, taskList.get(num).markAsDone());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"OOPS!!! The index of task is out of range.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Delete a task in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param num The number of the target task in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return An integer indicating whether the deleting is successful."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    public int deleteTask(int num) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            String taskStr \u003d taskList.get(num).toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            taskList.remove(num);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.printf(\"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    \"%s\\n\", taskStr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"OOPS!!! The index of task is out of range.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Find a specific task in the list based on the keyword given."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param keyword The user given keyword."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        String taskStr;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            taskStr \u003d taskList.get(i).toString();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            if (taskStr.contains(keyword)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.printf(\"%d. %s\\n\", num++, taskList.get(i));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 44,
      "-": 77
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " * Represents a to-do that stores description."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a task with description and status."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Create a task with description and status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @param isDone The status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public ToDos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Extracting a task content into readable string."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return String to be displayed."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        if (this.getStatus())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "            return \"[T]\" + \"[v]\" + super.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "            return \"[T]\" + \"[x]\" + super.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * Change the status of the task to done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     * @return The new task with isDone \u003d True."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public ToDos markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        return new ToDos(this.description, true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    public static void main(String[] args) {}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 48
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void printLogo() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void sayGoodbye() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void drawLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"__________________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 2,
      "-": 22
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    void deadlineTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        Task task \u003d new Deadline(\"Testing Duke deadline\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        assertEquals(\"[D][✗]Testing Duke deadline\", task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 12
    }
  },
  {
    "path": "src/test/java/duke/task/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "class ToDosTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    void todosTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        Task task \u003d new ToDos(\"Testing Duke todo\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "        assertEquals(\"[T][✗]Testing Duke todo\", task.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dou-maokang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dou-maokang": 12
    }
  }
]

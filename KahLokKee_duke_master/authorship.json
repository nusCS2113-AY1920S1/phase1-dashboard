[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                ui.showError(e.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        new Duke(\"output.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 16
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    abstract public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 16
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingDeadlineDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public DeadlineCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException, MissingDeadlineDateException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!fullCommand.trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            String[] deadlineSplit \u003d commandSplit[1].split(\" /at \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (deadlineSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    simpleDateFormat.setLenient(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Date date \u003d simpleDateFormat.parse(deadlineSplit[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String processedDate \u003d new SimpleDateFormat(\"dd MMMM yyyy hh:mmaa\").format(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    tasks.addDeadline(deadlineSplit[0], processedDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    throw new MissingDeadlineDateException(\"The due date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.println(\"The date is invalid\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 42
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (commandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                tasks.deleteTask(Integer.parseInt(commandSplit[1]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.println(\"The index argument must be a single integer.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 29
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (commandSplit.length !\u003d 2) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                int index \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                tasks.setTaskDone(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.println(\"The index argument must be a single integer.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 30
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingEventDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public EventCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws MissingEventDateException, MissingDescriptionException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!fullCommand.trim().equals(\"event\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            String[] eventSplit \u003d commandSplit[1].split(\" /at \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (eventSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    simpleDateFormat.setLenient(false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Date date \u003d simpleDateFormat.parse(eventSplit[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String processedDate \u003d new SimpleDateFormat(\"dd MMMM yyyy hh:mmaa\").format(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    tasks.addEvent(eventSplit[0], processedDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    throw new MissingEventDateException(\"The date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.println(\"The date is invalid\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 42
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (fullCommand.trim().equals(\"find\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new MissingDescriptionException(\"The search parameter cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            tasks.findTask(commandSplit[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 23
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyListException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        tasks.listTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 17
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.MissingDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public TodoCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws MissingDescriptionException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!fullCommand.trim().equals(\"todo\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            tasks.addTodo(fullCommand.substring(5));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new MissingDescriptionException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 23
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 4
    }
  },
  {
    "path": "src/main/java/exception/EmptyListException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public EmptyListException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/InvalidTaskIndexException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class InvalidTaskIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public InvalidTaskIndexException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/InvalidTimeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class InvalidTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public InvalidTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/MissingDeadlineDateException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class MissingDeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public MissingDeadlineDateException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/MissingDescriptionException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public MissingDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/MissingEventDateException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class MissingEventDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public MissingEventDateException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/TaskAlreadyDoneException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class TaskAlreadyDoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public TaskAlreadyDoneException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public UnknownCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/exception/UnknownTaskException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public UnknownTaskException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return String.format(\"OOPS!!! %s\", this.errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 14
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public static Command parse(String fullCommand) throws UnknownCommandException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new DeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new EventCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (commandSplit[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            return new TodoCommand(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new UnknownCommandException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 33
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        try (BufferedReader bufferedreader \u003d new BufferedReader(new FileReader(filepath))) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            while ((line \u003d bufferedreader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                char task \u003d line.charAt(1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                char isDone \u003d line.charAt(4);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                if (task \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Todo todo \u003d new Todo(line.substring(7));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (isDone \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        todo.setDone(true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else if (task \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String details \u003d line.substring(7);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String[] deadlineSplit \u003d details.split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    deadlineSplit[1] \u003d deadlineSplit[1].substring(0, deadlineSplit[1].length() - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Deadline deadline \u003d new Deadline(deadlineSplit[0], deadlineSplit[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (isDone \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        deadline.setDone(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                } else if (task \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String details \u003d line.substring(7);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    String[] eventSplit \u003d details.split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    eventSplit[1] \u003d eventSplit[1].substring(0, eventSplit[1].length() - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    Event event \u003d new Event(eventSplit[0], eventSplit[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    if (isDone \u003d\u003d \u0027Y\u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                        event.setDone(true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (FileNotFoundException ignored) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            FileWriter filewriter \u003d new FileWriter(\"output.txt\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            for (Task task : tasks.getTaskList()) filewriter.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            filewriter.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 72
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 15
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 16
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 37
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 13
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.EmptyListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.InvalidTaskIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.TaskAlreadyDoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import exception.UnknownTaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void getTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void listTask() throws EmptyListException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.print(index + \".\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                getTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new EmptyListException(\"The task list is empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void setTaskDone(int index) throws UnknownTaskException, InvalidTaskIndexException, TaskAlreadyDoneException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (task.getStatusIcon().equals(\"Y\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                throw new TaskAlreadyDoneException(\"This task is already marked as done\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            getTask(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new UnknownTaskException(\"This task does not exist.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void deleteTask(int index) throws UnknownTaskException, InvalidTaskIndexException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            getTask(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            tasks.remove(index - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new UnknownTaskException(\"This task does not exist.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            throw new InvalidTaskIndexException(\"The index is invalid.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        ArrayList\u003cInteger\u003e matchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        int searchIndex \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                matchList.add(searchIndex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            searchIndex++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        if (matchList.size() \u003e 0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            int printIndex \u003d 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            for (int index : matchList) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                System.out.print(printIndex++ + \". \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "                getTask(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "            System.out.println(\"The search parameter returned no matching results\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(todo.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void addDeadline(String description, String by) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(deadline.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void addEvent(String description, String at) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(event.toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 120
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"Save file not detected!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KahLokKee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KahLokKee": 35
    }
  }
]

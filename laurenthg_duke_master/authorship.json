[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "laurenthg": 5
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  ByeCommand(String user){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected String user;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Command(String user ){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.user\u003duser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage, Parser parser) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.zip.DataFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private GregorianCalendar d;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Date(GregorianCalendar d){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.d \u003d d;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        SimpleDateFormat fmt \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        fmt.setCalendar(this.d);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String dateFormatted \u003d fmt.format(this.d.getTime());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return  dateFormatted; //no need secondes and time zone"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 19
    }
  },
  {
    "path": "src/main/java/DateEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DateEventFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DateEventFormatException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t dateEventFormatException:\\n\\t\\t ☹ OOPS!!! Please respect the date format for an event\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                \"\\n\\t\\t\\t dd/MM/yyyy HH:mm - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 10
    }
  },
  {
    "path": "src/main/java/DateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DateFormatException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DateFormatException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t dateFormatException:\\n\\t\\t ☹ OOPS!!! Please respect the date format\\n\\t\\t\\t \" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                \"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 10
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DeadlineCommand(String user){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throws EmptyDeadlineDateException, EmptyDeadlineException, DateFormatException,InexistentDateException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] taskDescription \u003d user.substring(8).split(\"/by\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (taskDescription[0].isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new EmptyDeadlineException(ui);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (taskDescription.length \u003d\u003d 1) { // no /by in input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new EmptyDeadlineDateException(ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String description \u003d taskDescription[0].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String deadlineString \u003d taskDescription[1].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            //date format used: dd/MM/yyyy HH:mm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String regex \u003d\"[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            if (!deadlineString.matches(regex)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                throw new DateFormatException(ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                Date deadline \u003d parser.stringToDate(deadlineString,ui);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                tasks.add(new DeadlinesTask(description, deadline));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                DeadlinesTask newTask \u003d (DeadlinesTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    storage.getAppendWrite().write(tasks.size() + \"//\" + newTask.getTag() + \"//\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                            newTask.getMark() + \"//\" + newTask.getTask() + \"//\" + \" by:\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                            +newTask.getDeadlines() + \"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    ui.display(\"\\t IOException:\\n\\t\\t error when writing a deadline to file\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                ui.display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        + newTask.getTag() + newTask.getMark() + newTask.getTask() + \" by:\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        + newTask.getDeadlines() +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 47
    }
  },
  {
    "path": "src/main/java/DeadlinesTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DeadlinesTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String tag; // [D]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Date deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DeadlinesTask(String task, Date deadlines){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d\"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.deadlines \u003d deadlines;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DeadlinesTask(String task, String mark, Date deadlines){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.setMark(mark);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d\"[D]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.deadlines \u003d deadlines;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Date getDeadlines(){ return this.deadlines;}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "laurenthg": 22
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  DeleteCommand(String user){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser)throws InexistentTaskException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int index \u003d Integer.parseInt(user.substring(7)) - 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (index \u003e tasks.size() - 1 || index \u003c 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new InexistentTaskException(ui);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else { // the tasks exist"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            Task removedTask \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String text \u003d storage.getDeleteTaskString(removedTask,index,ui,tasks.size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            //rewriter of file by replacing the whole file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            storage.rewriteFile(text,ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    \"\\t\\t \"+removedTask.getTag() + removedTask.getMark() + \" \" + removedTask.getTask()+"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    \"\\n\\t Now you have \"+ tasks.size() +\" tasks in the list\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 25
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  DoneCommand(String user){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser) throws InexistentTaskException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int index \u003d Integer.parseInt(user.substring(5)) - 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (index \u003e tasks.size() - 1 || index \u003c 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new InexistentTaskException(ui);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else { // to change the mark, the whole file is rewritten ( probably a better way to do it)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            tasks.get(index).taskDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            //get the String with the index task marked done"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String text \u003d storage.getDoneString(tasks,index,ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            //  rewriter of file by replacing the whole file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            storage.rewriteFile(text,ui);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t Nice! I\u0027ve marked this task as done:\\n\\t \" + tasks.get(index).getTag() +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    tasks.get(index).getMark() + \" \" + tasks.get(index).getTask());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Duke(String[] filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String file; // file name"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (filePath.length !\u003d 0 ){ // test file in case of test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            file \u003d filePath[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else{ // no test file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            file \u003d System.getProperty(\"user.dir\")+ \"/data/duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load(parser, ui)); // Use of ArrayList (A-Collections) to store tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            e.print();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.ui.display(\"\\t IOException: \\n\\t\\t error when readFile for initialization of tasks list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.ui.showWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.storage.getNewAppendWrite(this.storage.getFilePath(),ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        while (!isExit){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                String user \u003d this.ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                Command c \u003d parser.parse(user);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                c.execute(tasks, ui, storage,parser); // parser is needed beacause stringToDate is in Parser class"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            catch (DukeException e){ // catch one of subclass of dukeException and print the right message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                e.print();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.storage.getAppendWrite().freeBufferedWriter();  // close() bufferedwriter"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        new Duke(args).run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 47,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public DukeException(Ui ui){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public abstract void print();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 8
    }
  },
  {
    "path": "src/main/java/EmptyDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EmptyDeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EmptyDeadlineDateException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t emptyDeadlineDateException:\\n\\t\\t ☹ OOPS!!! Please enter a deadline for the task\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EmptyDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EmptyDeadlineException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t emptyDeadlineException:\\n\\t\\t ☹ OOPS!!! The description of a deadline task cannot be empty\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/EmptyEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EmptyEventDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EmptyEventDateException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t emptyEventDateException:\\n\\t\\t ☹ OOPS!!! Please enter a period for the event task\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/EmptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EmptyEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EmptyEventException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t emptyEventException:\\n\\t\\t ☹ OOPS!!! The description of a event task cannot be empty\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EmptyTodoException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t emptyTodoException:\\n\\t\\t ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  EventCommand(String user){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throws EmptyEventDateException , EmptyEventException , DateEventFormatException, InexistentDateException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] taskDescription \u003d user.substring(5).split(\"/at\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (taskDescription[0].isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new EmptyEventException(ui);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (taskDescription.length \u003d\u003d 1) { // no /by in input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new EmptyEventDateException(ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String description \u003d taskDescription[0].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String periodString \u003d taskDescription[1].trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            //date format used: dd/MM/yyyy HH:mm - dd/MM/yyyy HH:mm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            String regex \u003d\"[0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9] \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    \"- [0-9][0-9]/[0-9][0-9]/[0-9][0-9][0-9][0-9] [0-9][0-9]:[0-9][0-9]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            if (!periodString.matches(regex)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                throw new DateEventFormatException(ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                String[] dateString \u003d periodString.split(\" - \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                Date dateFirst \u003d parser.stringToDate(dateString[0],ui);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                Date dateSecond \u003d parser.stringToDate(dateString[1],ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                tasks.add(new EventsTask(description, dateFirst,dateSecond));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                EventsTask newTask \u003d (EventsTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    storage.getAppendWrite().write(tasks.size() + \"//\" + newTask.getTag() + \"//\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                            newTask.getMark() + \"//\" + newTask.getTask() + \"//\"+"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                            \" at:\" + newTask.getDateFirst() + \"//\" + newTask.getDateSecond()+\"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                catch (IOException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    ui.display(\"\\t IOException:\\n\\t\\t error when writing a event to file\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                ui.display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        + newTask.getTag() + newTask.getMark() + newTask.getTask() + \" at:\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        + newTask.getDateFirst() + \" - \" + newTask.getDateSecond() +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 51
    }
  },
  {
    "path": "src/main/java/EventsTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class EventsTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String tag; // [E]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Date dateFirst;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Date dateSecond;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EventsTask(String task, Date dateFirst, Date dateSecond) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.dateFirst \u003d dateFirst;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.dateSecond \u003d dateSecond;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public EventsTask(String task, String mark, Date dateFirst, Date dateSecond) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.setMark(mark);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d \"[E]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.dateFirst \u003d dateFirst;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.dateSecond \u003ddateSecond;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Date getDateFirst(){ return this.dateFirst;}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Date getDateSecond(){ return this.dateSecond; }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "laurenthg": 26
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public FindCommand(String user){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String find \u003d user.substring(5);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        for ( int i \u003d 0 ; i\u003c tasks.size() ; i++){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            if ( tasks.get(i).getTask().contains(find)){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                result +\u003d tasks.displayOneElementList(i);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if ( result.isEmpty()){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t There is no matching tasks in your list\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t Here are the matching tasks in your list: \\n\" + result );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 26
    }
  },
  {
    "path": "src/main/java/InexistentDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class InexistentDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public InexistentDateException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t inexistentDateException:\\n\\t\\t ☹ OOPS!!! \\n\\t\\t\\t The date doesn\u0027t exist\" );"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/InexistentTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class InexistentTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public InexistentTaskException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t inexistentTaskException:\\n\\t\\t ☹ OOPS!!! The task doesn\u0027t exist\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  ListCommand(String user){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.displayList(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t There is any task yet \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 19
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.GregorianCalendar;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Command parse(String user){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        Command c ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (user.equals(\"list\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new ListCommand(user);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"find (.*)\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new FindCommand(user);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"done \\\\d+\")) {// if it is done and a number of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new DoneCommand(user);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"delete \\\\d+\")) {// if it is done and a number of task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new DeleteCommand(user);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"todo(.*)\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new TodoCommand(user);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"deadline (.*)\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new DeadlineCommand(user);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches(\"event (.*)\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new EventCommand(user);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if (user.matches((\"bye\"))){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new ByeCommand(user);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            c \u003d new UnmeaningCommand(user);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return c ;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Date stringToDate(String deadlineString, Ui ui) throws InexistentDateException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] dateString \u003d deadlineString.split(\" \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] daysString \u003d dateString[0].split(\"/\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] hoursString \u003d dateString[1].split(\":\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int day \u003d Integer.parseInt(daysString[0]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int month \u003d Integer.parseInt(daysString[1]) -1 ;// Convention of Gregorian Calendar Jan\u003d 0; Feb \u003d1; Dec \u003d11;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int year \u003d Integer.parseInt(daysString[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int hrs\u003d Integer.parseInt(hoursString[0]) ;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        int min \u003d Integer.parseInt(hoursString[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (min\u003c0 || min \u003e59){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (hrs \u003c0 || hrs \u003e23){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        switch( month){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            case 0: case 2: case 4: case 6: case 7: case 9: case 11: // month with 31 days : 11 for december"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                if (day \u003e 31 || day \u003c0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            case 3 : case 5: case 8: case 10: // month with 31 days"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                if (day \u003e 30 || day \u003c0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            case 1 : // February"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                // second part : no leap year and day\u003d\u003d29"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                if ((day \u003e29 || day \u003c 0) || ((!((year % 4 \u003d\u003d0 \u0026\u0026 year % 100 !\u003d 0) || year % 400 \u003d\u003d 0))\u0026\u0026 day\u003d\u003d29) ){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                throw new InexistentDateException(ui);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        GregorianCalendar d \u003d new GregorianCalendar(year,month,day,hrs,min);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return new Date(d);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 79
    }
  },
  {
    "path": "src/main/java/ReadFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class ReadFile {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private BufferedReader bufferedR;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public ReadFile(String file, Ui ui){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.ui\u003dui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.bufferedR \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t FileNotFoundException: \\n\\t\\t the \" + file +\" isn\u0027t found \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            Duke.display(\"\\t IOException: \\n\\t\\t error with fileReader\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public BufferedReader getBufferedReader() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return bufferedR;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void freeBufferedReader(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.bufferedR.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error when close the bufferedReader\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 38
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private WriteFile appendWrite;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public List\u003cTask\u003e load(Parser parser, Ui ui) throws IOException, InexistentDateException{ // load the initial data file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        ReadFile rFile \u003d new ReadFile(this.filePath,ui);// reader for initialization of tasks list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        BufferedReader bufferedReader \u003d rFile.getBufferedReader();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String readLine \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String[] line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String mark \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        while (readLine !\u003d null \u0026\u0026 !readLine.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            line \u003d readLine.split(\"//\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            mark \u003d line[2];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            switch (line[1]) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    tasks.add(new TodoTask(line[3], mark));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    tasks.add(new DeadlinesTask(line[3], mark, parser.stringToDate(line[4].substring(4).trim(),ui)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    tasks.add("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                            new EventsTask(line[3], mark, parser.stringToDate(line[4].substring(4),ui), parser.stringToDate(line[5],ui)));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            readLine \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        rFile.freeBufferedReader();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public WriteFile getAppendWrite() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return appendWrite;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void getNewAppendWrite(String file, Ui ui){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.appendWrite \u003d new WriteFile(file,true,ui);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getDeleteTaskString(Task removedTask, int index , Ui ui, int tasksSize){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String text\u003d\"\" , line \u003d\"\", oldLine \u003d(index+1)+\"//\"+removedTask.getTag() ,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                newLine \u003d\"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        ReadFile readFile \u003d new ReadFile(this.filePath,ui);// reader to read before change the data file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        BufferedReader bufferedR \u003d readFile.getBufferedReader();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            for (int i \u003d 0 ; i\u003c tasksSize+1 ; i++){ // one task have been just removed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                line \u003d bufferedR.readLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                if (!line.contains(oldLine)){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    if (i \u003e index ) { // we should minus 1 to each line after the line removed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        line \u003d line.replace( (i+1) +\"//\", (i)+\"//\"  ) + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        text +\u003d line ;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    else{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        text+\u003d line +\"\\n\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error when reading the whole file\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        readFile.freeBufferedReader(); //close the reader"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getDoneString(TaskList tasks , int index, Ui ui){ //returns String by replacing the done task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String text\u003d\"\" , line, oldLine \u003d(index+1)+\"//\"+task.getTag()+\"//\"+\"[✗]\" ,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                newLine \u003d(index+1)+\"//\"+task.getTag()+\"//\"+task.getMark();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        ReadFile readFile \u003d new ReadFile(this.filePath,ui);// reader to read before change the data file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        BufferedReader bufferedR \u003d readFile.getBufferedReader();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            while ((line \u003d bufferedR.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                if (line.contains(oldLine)){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    line \u003d line.replace(oldLine,newLine);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                text +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error when reading the whole file\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        readFile.freeBufferedReader(); //close the reader"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void rewriteFile(String text, Ui ui){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        WriteFile rwFile \u003d new WriteFile(this.filePath,false,ui);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            rwFile.write(text);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error when writing the whole file\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        rwFile.freeBufferedWriter();//free the writer"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 111
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String mark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected Task (String task){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.mark \u003d \"[✗]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected void setMark(String mark){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.mark\u003d mark;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected void taskDone(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.mark \u003d \"[✓]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected String getTask(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    protected String getMark(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.mark;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public abstract String getTag();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Task get(int i ){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void add(Task t ){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Task remove( int i){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.tasks.remove(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    return the String of display of one element of list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String displayOneElementList(int index){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        Task t \u003d this.tasks.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String result \u003d \"\\t \"+ (index+1) + \". \" + t.getTag() +t.getMark() + \" \" +t.getTask();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (t instanceof DeadlinesTask){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            result +\u003d  \" by:\" + ((DeadlinesTask) t).getDeadlines() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else if ( t instanceof EventsTask){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            result +\u003d  \" at:\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    ((EventsTask) t).getDateFirst() + \" - \" + ((EventsTask) t).getDateSecond() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            result +\u003d \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 44
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  TodoCommand(String user){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser) throws EmptyTodoException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        if (user.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            throw new EmptyTodoException(ui);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            tasks.add(new TodoTask(user.substring(4).trim()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            TodoTask newTask \u003d (TodoTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                storage.getAppendWrite().write(tasks.size() + \"//\" + newTask.getTag() + \"//\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                        newTask.getMark() + \"//\" + newTask.getTask()+\"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            catch (IOException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                ui.display(\"\\t IOException:\\n\\t\\t error when writing a todoTask to file\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    + newTask.getTag() + newTask.getMark() + newTask.getTask() +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                    \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 31
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class TodoTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private String tag; // [T]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public TodoTask(String task){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d\"[T]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public TodoTask(String task, String mark){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.setMark(mark);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.tag \u003d\"[T]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void displayLogo(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.displayLogo();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.display(\"\\t Hello I\u0027m Duke\\n\\t What can I do for you ?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void showBye(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.display(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void display(String s){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    Display the list of tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void displayList(TaskList tasks){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        for (int i \u003d 0 ;i\u003c tasks.size() ; i++ ){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            System.out.print(tasks.displayOneElementList(i));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 53
    }
  },
  {
    "path": "src/main/java/UnmeaningCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class UnmeaningCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public  UnmeaningCommand(String user){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(user);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui , Storage storage, Parser parser) throws UnmeaningException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        throw new UnmeaningException(ui);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 13
    }
  },
  {
    "path": "src/main/java/UnmeaningException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class UnmeaningException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public UnmeaningException(Ui ui){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super(ui);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        super.ui.display(\"\\t unmeaningException:\\n\\t\\t OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 9
    }
  },
  {
    "path": "src/main/java/WriteFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "public class WriteFile {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private BufferedWriter bufferedW;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private StringBuffer stringBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public WriteFile(String file, boolean append, Ui ui){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            FileWriter fileW \u003d new FileWriter(file,append); // write only for append text on datafile"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.bufferedW \u003d new BufferedWriter(fileW);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error with fileWritter\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void write(String s) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        bufferedW.write(s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        bufferedW.flush();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    public void freeBufferedWriter(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            this.bufferedW.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        catch (IOException e){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "            ui.display(\"\\t IOException: \\n\\t\\t error when close the bufferedWriter\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "laurenthg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "laurenthg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "laurenthg": 35
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 5,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public static void display(String s){ // Used by Exception Classes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private static void displayList(List\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        for (int i \u003d 0 ;i\u003c tasks.size() ; i++ ){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            Task t \u003d tasks.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            System.out.print(\"\\t \"+ (i+1) + \". \" + t.getTag() +t.getMark() + \" \" +t.getTask());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            if (t instanceof deadlinesTask){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                System.out.println(((deadlinesTask) t).getDeadlines());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            else if ( t instanceof eventsTask){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                System.out.println(((eventsTask) t).getPeriod());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                System.out.println(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(\"\\t---------------------------------------------------------------------------------\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private static void displayLogo(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        displayLogo();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        display(\"\\t Hello I\u0027m Duke\\n\\t What can I do for you ?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        String user \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        while (!user.equals(\"bye\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                if (user.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        displayList(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        display(\"\\t There is any task yet \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                else if (user.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    // if it is done and a number of task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    int index \u003d Integer.parseInt(user.substring(5, user.length())) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    if (index \u003e tasks.size() - 1 || index \u003c 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new inexistentTaskException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        tasks.get(index).taskDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        display(\"\\t Nice! I\u0027ve marked this task as done:\\n\\t \" + tasks.get(index).getTag() +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                    tasks.get(index).getMark() + \" \" + tasks.get(index).getTask());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                else if (user.matches(\"todo(.*)\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    if (user.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new emptyTodoException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        tasks.add(new todoTask(user.substring(4).trim()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        todoTask newTask \u003d (todoTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                    + newTask.getTag() + newTask.getMark() + newTask.getTask() +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                    \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                else if (user.matches(\"deadline(.*)\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    String[] taskDescription \u003d user.substring(8).trim().split(\"/by\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    if (taskDescription[0].isBlank()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new emptyDeadlineException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else if (taskDescription.length \u003d\u003d 1) { // no /by in input"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new emptyDeadlineDateException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        String description \u003d taskDescription[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        String deadline \u003d \"(by:\" + taskDescription[1] + \")\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        tasks.add(new deadlinesTask(description, deadline));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        deadlinesTask newTask \u003d (deadlinesTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                + newTask.getTag() + newTask.getMark() + newTask.getTask() + newTask.getDeadlines() +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                    \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                else if (user.matches(\"event(.*)\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    String[] taskDescription \u003d user.substring(5).trim().split(\"/at\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    if (taskDescription[0].isBlank()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new emptyEventException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else if (taskDescription.length \u003d\u003d 1) { // no /by in input"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        throw new emptyEventDateException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        String description \u003d taskDescription[0];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        String period \u003d \"(at:\" + taskDescription[1] + \")\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        tasks.add(new eventsTask(description, period));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        eventsTask newTask \u003d (eventsTask) tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                        display(\"\\t Got it. I\u0027ve added this task:\\n\\t   \""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                + newTask.getTag() + newTask.getMark() + newTask.getTask() + newTask.getPeriod() +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                                \"\\n\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                    throw new unmeaningException();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            catch (dukeException e ){ // catch one of subclass of dukeException and print the right message"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "                e.print();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "            user\u003dsc.nextLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        display(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 119,
      "Jeffry Lum": 1,
      "-": 7
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String mark;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    protected Task (String task){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.mark \u003d \"[✗]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    protected void taskDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.mark \u003d \"[✓]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    protected String getTask(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    protected String getMark(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        return this.mark;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public abstract String getTag();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 23
    }
  },
  {
    "path": "src/main/java/deadlinesTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class deadlinesTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String tag; // [D]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public deadlinesTask(String task, String deadlines){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.tag \u003d\"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.deadlines \u003d deadlines;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public String getDeadlines(){ return this.deadlines;}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 15
    }
  },
  {
    "path": "src/main/java/dukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public abstract class dukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public abstract void print();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 3
    }
  },
  {
    "path": "src/main/java/emptyDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class emptyDeadlineDateException extends dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public emptyDeadlineDateException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t emptyDeadlineDateException:\\n\\t\\t ☹ OOPS!!! Please enter a deadline for the task\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/emptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class emptyDeadlineException extends dukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public emptyDeadlineException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t emptyDeadlineException:\\n\\t\\t ☹ OOPS!!! The description of a deadline task cannot be empty\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/emptyEventDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class emptyEventDateException extends dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public emptyEventDateException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t emptyEventDateException:\\n\\t\\t ☹ OOPS!!! Please enter a period for the event task\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/emptyEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class emptyEventException extends dukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public emptyEventException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t emptyEventException:\\n\\t\\t ☹ OOPS!!! The description of a event task cannot be empty\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/emptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class emptyTodoException extends dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public emptyTodoException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t emptyTodoException:\\n\\t\\t ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/eventsTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class eventsTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String tag; // [E]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String period;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public eventsTask(String task, String period) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.tag \u003d \"[E]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.period \u003d period;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public String getPeriod(){ return this.period;}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 15
    }
  },
  {
    "path": "src/main/java/inexistentTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class inexistentTaskException extends dukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public inexistentTaskException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t inexistentTaskException:\\n\\t\\t ☹ OOPS!!! The task doesn\u0027t exist\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  },
  {
    "path": "src/main/java/todoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class todoTask extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    private String tag; // [T]"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public todoTask(String task){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        this.tag \u003d\"[T]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public String getTag(){ return this.tag;}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 10
    }
  },
  {
    "path": "src/main/java/unmeaningException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "public class unmeaningException extends dukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public unmeaningException(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    public void print(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "        Duke.display(\"\\t unmeaningException:\\n\\t\\t OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\\"\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Laurent Huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Laurent Huang": 8
    }
  }
]

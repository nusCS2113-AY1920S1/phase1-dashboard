[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 1,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that packages the different parts of a command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor to create a command object. Includes the type of command,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * the name/description of task, and the date (if any)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param type        string that contains the command type"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description string that contains the name or description of the"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *                    command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param date        string that contains the date portion of the input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Command(String type, String description, String date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Starts the execution process of the chatbot when a command is entered. The"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * command is parsed using Parser to determine the steps Duke is required to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * perform."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks   An object of TaskList containing a list of tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui      An object that handles all interactions with the user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException when there is an unknown command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "                System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "                ui.showList(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "                CreateTodo(description, tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "                CreateDeadline(description, date, tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "                CreateEvent(description, date, tasks, ui, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "                MarkDone(description, tasks, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": "                DeleteTask(description, tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "                ui.showFind(tasks.find(description));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "                throw new DukeException(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * When a user enters a todo command, this method will be called and a new task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * object will be created (of todo type)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description the string that identifies the task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskLists that contains the list of tasks"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui An object that handles interactions with the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateTodo(String description, TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks.addTodo(description.trim());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(tasks.get(Task.totalItems - 1), Task.totalItems);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * When a user enters a deadline command, this method will be called and a new task"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * object will be created (of deadline type)."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description the string that identifies the task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param date the deadline of the task (in dd/mm/yyyy HHmm format)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskLists that contains the list of tasks"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui An object that handles interactions with the user"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException if there is an unknown error"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateDeadline(String description, String date, TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limryan"
        },
        "content": "            LocalDateTime dateTime \u003d Parser.convertDate(date.substring(4));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks.addDeadline(description, dateTime);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(tasks.get(Task.totalItems - 1), Task.totalItems);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Please enter date and time in the format: dd/mm/yyyy HHmm.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description/date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throw new DukeException(\"Unknown error\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * When a user enters a event command, this method will be called and a new task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * object will be created (of event type)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description the string that identifies the task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param date the deadline of the task (in dd/mm/yyyy HHmm format)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskLists that contains the list of tasks"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui An object that handles interactions with the user"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException if there is an unknown error"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateEvent(String description, String date, TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limryan"
        },
        "content": "            LocalDateTime dateTime \u003d Parser.convertDate(date.substring(4));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks.addEvent(description, dateTime);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(tasks.get(Task.totalItems - 1), Task.totalItems);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Please enter date \u0026 time in the format: dd/mm/yyyy HHmm.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description/date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throw new DukeException(\"Unknown error\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * When a user enters a done command, this method will be called. The task item"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * number will be used to get the task from the TaskList and the task will be"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * set as done. File will then be overwritten with the new information. The user"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * will then be informed that the item has been marked as done."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description the string that identifies the task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskLists that contains the list of tasks"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui An object that handles interactions with the user"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException if there is an unknown error"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void MarkDone(String description, TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "limryan"
        },
        "content": "            int item \u003d Parser.convertInt(description);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks.markDone(item - 1);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showDone(tasks.getDescription(item - 1));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Please enter an item number.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Item not found.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error. File not found.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throw new DukeException(\"Unknown error\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * When a user enters a delete command, this method will be called. The task item"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * number will be used to get the task from the TaskList and the task will be"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * removed from the list. File will then be overwritten with the new information."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * The user will then be informed that the item has been deleted along with the"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * number of items left in the list."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description the string that identifies the task"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskLists that contains the list of tasks"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param ui An object that handles interactions with the user"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param storage An object that handles writing to file and loading from file"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException if there is an unknown error"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void DeleteTask(String description, TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "limryan"
        },
        "content": "            int item \u003d Parser.convertInt(description) - 1;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String task \u003d tasks.get(item);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks.removeTask(item);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(tasks);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showDelete(task, tasks.getSize());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Please enter an item number.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Item not found.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error. File not found.\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throw new DukeException(\"Unknown error\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * This method returns the isExit condition to indicate if Duke should"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * terminate."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return the isExit boolean"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 221
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class representing a task with a deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor to create a new Deadline object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description string that includes the name or description of a task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param dateTime LocalDateTime object that includes the date/time of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Gets the date of the deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return date as a string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.by \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Takes the properties of the deadline and formats it in a string"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return the properties as a string"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + date() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return D for deadline"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limryan": 52
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Main class for the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\ryana\\\\Desktop\\\\2113_Project\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Initialises the Duke chat bot. Creates an object UI for user interactions,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * storage object to load and write information from a specified location."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Creates a TaskList object to store data. If information from the specified"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * file cannot be found, an empty TaskList will be created."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param filePath string that contains the location to the data file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Starts the operation of the chat bot. It will read in input from the user,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * complete the specified command, and output requested data or confirmation"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * that the task is complete. Will continue in an infinite loop until the"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * isExit condition is true."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String fullCommand \u003d ui.read();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "//    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": "//    public void start(Stage stage) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": "//        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "//        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "//"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "//        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": "//        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 64,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that represents an event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor to create a new Event object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description string that includes the name or description of a task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param dateTime LocalDateTime object that includes the date/time of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Gets the date of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return date as a string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "        at \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Takes the properties of the event and formats it in a string"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return the properties as a string"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + date() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return E for event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 50
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that parses a string and breaks it up or converts it to another format"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Takes in the input from the user and tokenize it into different strings."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Packages them into a Command object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param string the raw input from the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return command object with the type, description and date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws DukeException when there is a null string"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public static Command parse(String string) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "            StringTokenizer tokenizer \u003d new StringTokenizer(string);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String type \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String description \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String date \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (tokenizer.hasMoreTokens()) description \u003d tokenizer.nextToken(\"/\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (tokenizer.hasMoreTokens()) date \u003d tokenizer.nextToken(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "            return new Command(type, description, date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "            throw new DukeException(\"    Please key in a command.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Takes in a string that contains a date in the format \u0027dd/MM/yyyy HHmm\u0027."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Outputs it as a LocalDateTime object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param string the date input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return LocalDateTime object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws NumberFormatException when string is in the wrong format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public static LocalDateTime convertDate(String string) throws NumberFormatException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return LocalDateTime.parse(string.trim(), formatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Takes in a string that contains just a number character and outputs it as"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * a integer."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param string containing a numerical character"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return int number"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws NumberFormatException when string contains a non-numerical character"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public static int convertInt(String string) throws NumberFormatException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return Integer.parseInt(string.trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 57
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class the represents the aspects of saving and reading from file"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor to instantiate the storage object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param filepath string that specifies which file to use"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Transfers the items/tasks in a task list into a text file and saves it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskList that contains all tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws IOException when file cannot be read"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void write(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.totalItems; i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (tasks.getType(i).equals(\"T\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"T | \" + tasks.getStatusIcon(i) + \" | \" + tasks.getDescription(i) + \" | \\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } else if (tasks.getType(i).equals(\"D\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"D | \" + tasks.getStatusIcon(i) + \" | \" + tasks.getDescription(i) + \" | \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        + tasks.getDate(i) + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"E | \" + tasks.getStatusIcon(i) + \" | \" + tasks.getDescription(i) + \" | \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        + tasks.getDate(i) + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that opens a text file, reads it and adds the information into a"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * new TaskList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return TaskList with the tasks in the text file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @throws IOException when file cannot be found/read"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filepath))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "                StringTokenizer tokenizer \u003d new StringTokenizer(line, \"|\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String event \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String Done \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String description \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String date \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": "                LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": "                if (!(event.trim().equals(\"T\"))) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    dateTime \u003d Parser.convertDate(date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "                switch (event.trim()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Todo(description.trim()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems - 1).markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Deadline(description.trim(), dateTime));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems - 1).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Event(description.trim(), dateTime));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems - 1).markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        System.out.println(\"    ERROR \" + event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limryan"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 85
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that represents a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected static int totalItems \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor to create a new Task object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description string that includes the name or description of a task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "        totalItems++;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * assigns the isDone variable as true"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return date as a string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return this.date();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * If the task is marked done, it will return tick. Else return cross"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return tick or cross"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return T for task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 49
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public int getSize() { return taskList.size(); }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String get(int itemNumber) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return taskList.get(itemNumber).toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getType(int itemNumber) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return taskList.get(itemNumber).getType();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getStatusIcon(int itemNumber) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return taskList.get(itemNumber).getStatusIcon();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getDescription(int itemNumber) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return taskList.get(itemNumber).description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getDate(int itemNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return taskList.get(itemNumber).date();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public ArrayList\u003cString\u003e find(String keyword) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ArrayList\u003cString\u003e results \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (task.description.contains(keyword.trim())) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "                results.add(j + \". \" + task.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return results;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void markDone(int itemNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "        taskList.get(itemNumber).markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void removeTask(int itemNumber) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "        taskList.remove(itemNumber);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "        Task.totalItems--;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void addEvent(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "        taskList.add(new Event(description.trim(), dateTime));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void addDeadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "        taskList.add(new Deadline(description.trim(), dateTime));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void addTodo(String description) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limryan"
        },
        "content": "        taskList.add(new Todo(description.trim()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 70
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that represents a task that is a todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor that creates a todo task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param description name of the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Creates a string that contains information about the todo task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @return formatted string containing attributes about the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 23
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": " * Class that deals with all interactions with a user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Constructor that starts the scanning of System input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method to display welcome and logo of Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that prints out a line"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that confirms that a task has been added and the new total number"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * of tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param task the string containing the task that was added"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param totalItems total number of tasks in taskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showCreateTask(String task, int totalItems) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"      \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"    Now you have \" + totalItems + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that prints out the tasks in the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param tasks the TaskList containing all the tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.totalItems; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that confirms that a task has been deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param task string containing information about the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param totalItems current number of items in the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showDelete(String task, int totalItems) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n\" + \"    \" + task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Now you have \" + totalItems + \" item(s) in your list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that confirms that a task has been marked done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param task string containing information about the task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showDone(String task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"      [\\u2713] \" + task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that prints out the results from a search of the task list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limryan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * @param results an array that contains the results in string format"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showFind(ArrayList\u003cString\u003e results) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limryan"
        },
        "content": "            for (String string : results) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limryan"
        },
        "content": "                System.out.println(\"    \" + string);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    No results found. Try another keyword.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limryan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limryan"
        },
        "content": "     * Method that reads the input that a user keys in"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limryan"
        },
        "content": "      * @return string of raw input"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limryan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 106
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 10
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    LocalDateTime dateTime1 \u003d LocalDateTime.parse(\"02/08/2019 1400\", formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void testInt1() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(1, Parser.convertInt(\"1\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void testInt2() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(-500, Parser.convertInt(\"-500\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void testInt3() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(3, Parser.convertInt(\"3 \"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void testInt4() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(0, Parser.convertInt(\"  0    \"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void testDate1() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "        assertEquals(dateTime1, Parser.convertDate(\" 02/08/2019 1400    \"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 37
    }
  }
]

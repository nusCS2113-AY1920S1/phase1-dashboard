[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.by \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + date() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "limryan": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import javax.swing.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\ryana\\\\Desktop\\\\2113_Project\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private Duke(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui.showLogo();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "        boolean exitCondition \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.load(list, filepath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in loading from file.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "        while (!exitCondition) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String string \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "            StringTokenizer tokenizer \u003d new StringTokenizer(string);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String command \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String description \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String date \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (tokenizer.hasMoreTokens()) description \u003d tokenizer.nextToken(\"/\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (tokenizer.hasMoreTokens()) date \u003d tokenizer.nextToken(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    exitCondition \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    ui.showList(list);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    CreateTodo(list, false, description, filepath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    CreateDeadline(list, false, description, date, filepath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    CreateEvent(list, false, description, date, filepath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    MarkDone(list, description, filepath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    DeleteTask(list, description, filepath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limryan"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    ui.showFind(list, description);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limryan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateTodo( ArrayList\u003cTask\u003e list, boolean markAsDone, String description, String filepath) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limryan"
        },
        "content": "            list.add(new Todo(description.trim()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(list, filepath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(list.get(Task.totalItems-1).toString(), Task.totalItems);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateDeadline(ArrayList\u003cTask\u003e list, boolean markAsDone, String description, String date, String filepath) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limryan"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limryan"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(date.trim().substring(4), formatter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limryan"
        },
        "content": "            list.add(new Deadline(description.trim(), dateTime));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(list, filepath);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(list.get(Task.totalItems-1).toString(), Task.totalItems);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description/date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void CreateEvent(ArrayList\u003cTask\u003e list, boolean markAsDone, String description, String date, String filepath) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limryan"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limryan"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(date.trim().substring(4), formatter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limryan"
        },
        "content": "            list.add(new Event(description.trim(), dateTime));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(list, filepath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showCreateTask(list.get(Task.totalItems-1).toString(), Task.totalItems);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! The description/date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error in writing to file.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void MarkDone(ArrayList\u003cTask\u003elist, String description, String filepath) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limryan"
        },
        "content": "            int item \u003d Integer.parseInt(description.trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limryan"
        },
        "content": "            list.get(item - 1).markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(list, filepath);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showDone(list.get(item - 1).description);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Please enter an item number.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Item not found.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error. File not found.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limryan"
        },
        "content": "    private void DeleteTask(ArrayList\u003cTask\u003e list, String description, String filepath) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limryan"
        },
        "content": "            int item \u003d Integer.parseInt(description.trim());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String task \u003d list.get(item-1).toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limryan"
        },
        "content": "            list.remove(item-1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limryan"
        },
        "content": "            Task.totalItems--;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limryan"
        },
        "content": "            storage.write(list, filepath);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limryan"
        },
        "content": "            ui.showDelete(task, list.size());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Please enter an item number.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    OOPS!!! Item not found.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "limryan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    Error. File not found.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 142,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class DukeException  extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "        at \u003d dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + date() + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 22
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e list, String filePath) throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.totalItems; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (list.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"T | \" + list.get(i).getStatusIcon() + \" | \" + list.get(i).description + \" | \\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } else if (list.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"D | \" + list.get(i).getStatusIcon() + \" | \" + list.get(i).description + \" | \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        + list.get(i).date() + \"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "                bufferedWriter.write(\"E | \" + list.get(i).getStatusIcon() + \" | \" + list.get(i).description + \" | \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        + list.get(i).date() + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void load(ArrayList\u003cTask\u003e list, String filepath) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filepath))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "                StringTokenizer tokenizer \u003d new StringTokenizer(line, \"|\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String event \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String Done \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String description \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "                String date \u003d tokenizer.nextToken();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "                LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": "                if (!(event.trim().equals(\"T\"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    dateTime \u003d LocalDateTime.parse(date.trim(), formatter);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "                switch (event.trim()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Todo (description.trim()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems-1).markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Deadline(description.trim(), dateTime));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems-1).markAsDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        list.add(new Event(description.trim(), dateTime));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        if (Done.trim().equals(\"\\u2713\")) list.get(Task.totalItems-1).markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limryan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limryan"
        },
        "content": "                        System.out.println(\"    ERROR \" + event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limryan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 59
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "    protected static int totalItems \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "        totalItems++;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return this.date();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limryan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limryan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showLogo() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limryan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showCreateTask(String task, int totalItems) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"      \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limryan"
        },
        "content": "                + \"    Now you have \" + totalItems + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (int i \u003d 0; i \u003c Task.totalItems; i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limryan"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \". \" + list.get(i).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showDelete(String task, int totalItems) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n\" + \"    \" + task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Now you have \" + totalItems + \" item(s) in your list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showDone(String task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"      [\\u2713] \" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limryan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limryan"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e list, String query) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limryan"
        },
        "content": "        System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limryan"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limryan"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limryan"
        },
        "content": "            if (task.description.contains(query.trim())) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limryan"
        },
        "content": "                System.out.println(j + \". \" + task.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limryan"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limryan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limryan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limryan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limryan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limryan": 52
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "run{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 31,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Contains all command types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    delete,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    event,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    bye,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    find"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a task of type deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the deadline time in String type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the deadline time in Date type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param by          Time of the deadline as a string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the time of the deadline as a Date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return the time of the deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Set the time of the deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param time the time of the deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setTime(Date time) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns a string representing this deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return A string representing this deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 58
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Duke is a personal assistance that helps to keep track of the tasks you have There are three types of task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Todo, Deadline, Event"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * @author liushiru"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Manages storage to the text file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * A List to store tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Control all user interaction"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /////////////////////////"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    ////////////////////////"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a duke class"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            tasks \u003d storage.readFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Runs the programme."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if (c instanceof ExitCommand) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                e.printMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        outContent.reset();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        setUpStreams();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            restoreStreams();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return outContent.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            dukeException.printMessage();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return dukeException.getMessage();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static void setFilePath(String path) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        filePath \u003d path;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "liushiru": 134
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents all Exceptions that specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the massage to be contained in the exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a DukeException with the given message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input Message the exception wants to deliver"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.message \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Print the message of the exception"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(this.message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a invalid input exception"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class inputInvalidException extends DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public inputInvalidException() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a emptyDescription exception"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class emptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public emptyDescriptionException() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a invalid task number exception"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class invalidTaskNumException extends DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidTaskNumException() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! We don\u0027t know which task to process, pls enter an task number as a integer\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a exception when user does not key in \"time\" component for event and deadline"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class missingTimeException extends DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public missingTimeException() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"Please enter timing for your task\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a exception when task number is out of the range"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class taskOutOfRangeException extends DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public taskOutOfRangeException() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! You don\u0027t have such task in your list\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/*    public static class invalidCommandType extends DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidCommandType() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! the command type is invalid\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents a input with valid command word but invalid formatting"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class invalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidFormatException() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The format is invalid\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class emptyFileException extends DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public emptyFileException() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The file is empty\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 99
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a task of type Event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Event time in String type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Event time in Date type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a new event with the given description and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param description Description of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param at          Time of the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the time of the event as a Date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return the time of the event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Set the time of the event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param time Time of the event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setTime(Date time) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns a string describing the event in desired format"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return The string representation of the event"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 58
    }
  },
  {
    "path": "src/main/java/seedu/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.ui.Main;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        Duke.setFilePath(args[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 14
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a parser to parse the user input and turn it into specific command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the task number specified by the user in a delete and done command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Task number specified by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException.invalidTaskNumException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static int getTaskNum(String input) throws DukeException.invalidTaskNumException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String[] arr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                //   if (!arr[1].equals(\"all\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                int x \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return x - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                //   }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                throw new DukeException.invalidTaskNumException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.invalidTaskNumException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Parses the given string to a command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input user input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return The command in the input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        CommandType type \u003d getCommandType(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case deadline: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String description \u003d getDescriptionOfEventAndDeadline(input).trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String time \u003d getTimeString(input).trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (getTimeDate(input) !\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                deadline.setTime(getTimeDate(input));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new AddCommand(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case event: {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String description \u003d getDescriptionOfEventAndDeadline(input).trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String time \u003d getTimeString(input).trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (getTimeDate(input) !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                event.setTime(getTimeDate(input));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new AddCommand(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case todo: {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String description \u003d getDescriptionOfTodo(input).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new AddCommand(todo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case list: {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case done: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            int taskNum \u003d getTaskNum(input);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case delete: {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            int taskNum \u003d getTaskNum(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case find: {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case bye: {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"invalid Input\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Validates the starting word to be a valid command"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param userCmd User input"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Command type"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException.inputInvalidException Throw exception when the starting word is not a valid"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *                                             command"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static CommandType getCommandType(String userCmd) throws DukeException.inputInvalidException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        //make sure starting words is inside C enums"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for (CommandType c : CommandType.values()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (c.name().equals(userCmd.split(\" \")[0])) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns arr[description][time] for ddl and event"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return String array arr[description][time] for ddl and event"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static String[] getInfo(String input) throws DukeException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        CommandType type \u003d getCommandType(input);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (input.split(\" \", 2).length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String descriptionWithTime \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String[] arr \u003d new String[2];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case deadline:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                throw new DukeException.invalidFormatException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                arr \u003d descriptionWithTime.split(\" /by \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        case event:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                throw new DukeException.invalidFormatException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            arr \u003d descriptionWithTime.split(\" /at \");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (arr.length \u003d\u003d 1 || arr.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Determines if the description component is empty in an input"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return True if description is empty, false otherwise"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if ((input.split(\" \", 2).length \u003d\u003d 1)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                || input.split(\" \", 2)[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the description of a todo task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return The description"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException Throw exception when description is left empty"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getDescriptionOfTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (!isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the description of a deadline and event"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return The description"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException Throw exception when description is left empty"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getDescriptionOfEventAndDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (getInfo(input)[0].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return getInfo(input)[0];"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Gets the time of a deadline of a event in the form of string"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Time"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException Throw exception when time is left empty"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getTimeString(String input) throws DukeException {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (getInfo(input)[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.missingTimeException();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return getInfo(input)[1];"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //previously get date, get the date from string"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Transform the time from String type to Date type, if the string is of valid format"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Time of the task as a Date type, return \"null\" if format is not parsable"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException throw exception if the format of the strings is invalid"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static Date getTimeDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String time \u003d getTimeString(input);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Date date;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (time.contains(\" \")) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(input);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(input);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 242
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represent a class to read and write from a file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the name of the text file to be stored to."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a Storage object with the given file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param fileName path of the file that needs to be read from and write to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws FileNotFoundException throw exception when file is not found"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Storage(String fileName) throws FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.fileName \u003d getFilePath(fileName);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Gets file path"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param fileName name of the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Relative path of the file from the accessing place"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private String getFilePath(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String UiTestFilePath \u003d \"..\\\\\" + fileName;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String accessFrom \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (accessFrom.contains(\"text-ui-test\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return UiTestFilePath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return fileName;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Decode the string to a task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param line The string to decode"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Task in that string"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static Task decodeLine(String line) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int typeIndex \u003d line.indexOf(\"[\") + 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        char type \u003d line.charAt(typeIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int doneIndex \u003d line.indexOf(\"][\") + 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        boolean done \u003d (line.charAt(doneIndex) \u003d\u003d \u0027\\u2713\u0027) ? true : false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String info \u003d line.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String[] infoList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d info;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                todo.setDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            infoList \u003d info.split(\" \\\\(by: \", 2);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d infoList[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            time \u003d infoList[1].substring(0, infoList[1].length() - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                deadline.setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Deadline(description, time);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            infoList \u003d info.split(\" \\\\(at: \", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d infoList[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            time \u003d infoList[1].substring(0, infoList[1].length() - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                event.setDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Event(description, time);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Overwrite the file with the updated task list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks Updated tasks lists"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void writeFile(TaskList tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String content \u003d tasks.toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            PrintWriter outputStream \u003d new PrintWriter(new FileWriter(this.fileName));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            outputStream.print(content);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            outputStream.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Read all tasks to task list"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Task list that contains all tasks stored in the file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public TaskList readFile() throws IOException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(this.fileName));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (line \u003d\u003d null) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new TaskList();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Task task \u003d decodeLine(line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String accessFrom \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(accessFrom);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String absoluteFilePath \u003d accessFrom + \"\\\\\" + this.fileName;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(absoluteFilePath);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            File file \u003d new File(absoluteFilePath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                System.out.println(\"file created: \" + absoluteFilePath);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 144
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a generic task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the description component of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the whether the tasks is marked as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a task with the given description. Status is \"not done\" by default"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param description Description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the description of this task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Description of this task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the status of this tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return True when task is done, False when it is not"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the status icon string of the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return \"✓\" if task is done, \"✗\" otherwise"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 62
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents the task list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns the content in the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return a string that display every task in the lists"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            content +\u003d i++ + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a task of type Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Instantiate a Todo Object with the given description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Returns a string describing the todo in desired format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return The string representation of the todo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a class that interact with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a UI object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Read user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @return Input string from user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException(\"No Line Found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(e.message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Display all tasks in the tasks list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks Task list containing all tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void displayTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(tasks.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays total number of tasks in the list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks Task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void displayNumOfTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays message after adding a task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param task The task that is added."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void addTaskUI(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays message after a task is marked as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param task The task that is marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void doneTaskUI(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays message after a task is deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param taskNum The task number of the task that needs to be deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void deleteTaskUI(int taskNum) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"I have deleted task No.\" + (taskNum + 1) + \" for you\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays all tasks found."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param relevantTasks Task list containing all tasks found."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void findTaskUI(TaskList relevantTasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Here are the relevant tasks\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(relevantTasks.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays greeting message when program starts."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays separation line between each user input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"_____________________________________________________\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Display goodbye message when user exits."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 123
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a command to add new task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the task to be added"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a new AddCommand with the given task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param task The task to add"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Executes this command by"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003cli\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * adding the task into the given task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003c/li\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003cli\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * displaying response to show user task are added"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003c/li\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003cli\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * store the task to the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * \u003c/li\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.addTaskUI(this.task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.displayNumOfTasks(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 48
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Abstract class representing a generic command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Execute this command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException.taskOutOfRangeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 21
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a command to delete a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represent the task number of the task to be deleted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a new DeleteCommand with the task number (1 based) of task that needs to be deleted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param taskNum The task number of the task that needs to be deleted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Deletes the task specified from the task list and the storage file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException.taskOutOfRangeException Throws exception when the task number is out of range"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (taskNum \u003e\u003d tasks.size() || taskNum \u003c 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.taskOutOfRangeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        tasks.remove(this.taskNum);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.deleteTaskUI(this.taskNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.displayNumOfTasks(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents the command to mark a task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represent the task number of the task to be marked as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a new DoneCommand with the task number of the task that needs to be marked as done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param taskNum Task number of the task to be marked as done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @throws DukeException.taskOutOfRangeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (taskNum \u003e\u003d tasks.size() || taskNum \u003c 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.taskOutOfRangeException();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        tasks.get(this.taskNum).setDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.doneTaskUI(tasks.get(this.taskNum));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a command to exit main programme"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Displays farewell message"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a command to find all tasks with the given keywords"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Represents the keywords to be searched"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates a new FindCommand with the given keywords"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param keyword The keyword that needs to be searched"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Finds all relevant tasks with the keyword and store them into a new temporary task lists"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param tasks   The TaskList object that stores all tasks in the list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param ui      The user interface object that displays text response to user\u0027s input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * @param storage The seedu.duke.Storage object that controls the text file that stores tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        TaskList relevantTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Task currTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (currTask.toString().contains(this.keyword)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                relevantTasks.add(currTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.findTaskUI(relevantTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 45
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Represents a command to list all tasks in the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Display all tasks in the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 61
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 33
    }
  },
  {
    "path": "src/main/java/seedu/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Duke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.ui.DialogBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private void handleUserInput() throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 55
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "liushiru": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "liushiru": 22
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Duke duke \u003d new Duke(\"test.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //@Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //public void test() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //    duke.run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //public void addTask_todo_successful() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //    String input \u003d \"todo read book\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //    String expected \u003d \"_____________________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //            + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //            + \"  [T][✗] read book\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //            + \"Now you have 1 tasks in the list\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //            + \"_____________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //    assertEquals(expected, );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 27
    }
  },
  {
    "path": "src/test/java/seedu/duke/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    void executeTest_addSuccessful() throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        setUpStreams();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        Storage storage \u003d new Storage(\"test.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        AddCommand addCommand \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        addCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        TaskList testTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        testTaskList \u003d storage.readFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        boolean assertion \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                (testTaskList.get(testTaskList.size() - 1).toString().equals(task.toString()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        assertTrue(assertion);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String expected \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                \"Got it. I\u0027ve added this task: \\r\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"  [T][✗] read book\\r\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"Now you have 1 tasks in the list\\r\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        restoreStreams();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 62
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "run{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 20,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    list,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    done,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    delete,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    todo,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    deadline,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    event,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    bye,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    find"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.setType(EventType.D);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setTime(Date time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[D]\"+\"[\" + super.getStatusIcon()+\"] \" + super.getDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            tasks \u003d storage.readFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                isExit \u003d fullCommand.equals(\"bye\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "              //  isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                e.printMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "liushiru": 45,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "   // public static Object inputInvalidException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //public static Object inputInvalidException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "   // public static Object emptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.message \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void printMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(this.message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class inputInvalidException extends DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public inputInvalidException() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class emptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public emptyDescriptionException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The description cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class invalidTaskNumException extends DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidTaskNumException() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! We don\u0027t know which task to process, pls enter an task number as a integer\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class missingTimeException extends DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public missingTimeException() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"Please enter timing for your task\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class taskOutOfRangeException extends DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public taskOutOfRangeException() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! You don\u0027t have such task in your list\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class invalidCommandType extends DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidCommandType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! the command type is invalid\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class invalidFormatException extends DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public invalidFormatException() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The format is invalid\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static class emptyFileException extends DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        public emptyFileException() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            super(\"☹ OOPS!!! The file is empty\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 64
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected Date time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.setType(EventType.E);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Date getTime() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setTime(Date time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon()+\"] \"  + super.getDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/EventType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public enum EventType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    T,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    D,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    E"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static int getTaskNum (String input) throws DukeException.invalidTaskNumException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "         if (input.contains(\" \")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String[] arr;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "             try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "             //   if (!arr[1].equals(\"all\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    int x \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    return x-1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "             //   }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                throw new DukeException.invalidTaskNumException();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.invalidTaskNumException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        CommandType type \u003d getCommandType(input);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case deadline: {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String description \u003d getDescriptionOfEventAndDeadline(input).trim();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String time \u003d getTimeString(input).trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if (getTimeDate(input) !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    deadline.setTime(getTimeDate(input));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case event: {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String description \u003d getDescriptionOfEventAndDeadline(input).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String time \u003d getTimeString(input).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if (getTimeDate(input) !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    event.setTime(getTimeDate(input));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new AddCommand(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case todo: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String description \u003d getDescriptionOfTodo(input).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case list: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case done: {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                int taskNum \u003d getTaskNum(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new DoneCommand(taskNum);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case delete: {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                int taskNum \u003d getTaskNum(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new DeleteCommand(taskNum);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case find: {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case bye: {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(\"invalid Input\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //make sure starting words is inside C enums"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static CommandType getCommandType(String userCmd) throws DukeException.inputInvalidException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for (CommandType c : CommandType.values()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (c.name().equals(userCmd.split(\" \")[0])) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return c;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    // return arr[description][time] for ddl and event"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static String[] getInfo(String input) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        CommandType type \u003d getCommandType(input);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (input.split(\" \", 2).length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String descriptionWithTime\u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String[] arr \u003d new String[2];"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case deadline:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if(!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    throw new DukeException.invalidFormatException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    arr \u003d descriptionWithTime.split(\" /by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            case event:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if(!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    throw new DukeException.invalidFormatException();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                arr \u003d descriptionWithTime.split(\" /at \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (arr.length \u003d\u003d 1 || arr.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.inputInvalidException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private static boolean isEmptyDescription(String input) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if ((input.split(\" \", 2).length \u003d\u003d 1)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                || input.split(\" \", 2)[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getDescriptionOfTodo(String input) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (!isEmptyDescription(input)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getDescriptionOfEventAndDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (getInfo(input)[0].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.emptyDescriptionException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return getInfo(input)[0];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static String getTimeString(String input) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (getInfo(input)[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.missingTimeException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return getInfo(input)[1];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    //previously get date, get the date from string"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static Date getTimeDate (String input) throws DukeException{"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                String time \u003d getTimeString(input);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Date date;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                if (time.contains(\" \")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(input);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                    date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(input);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 177
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "//to read and write from the file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Storage(String fileName) throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.fileName \u003d getFilePath(fileName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getFilePath(String fileName) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String UiTestFilePath \u003d \"..\\\\\" + fileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String accessFrom \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (accessFrom.contains(\"text-ui-test\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return UiTestFilePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return fileName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": "/*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String taskArrayToString (ArrayList\u003cTask\u003e inputArray) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for(Task task : inputArray) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            content +\u003d i++ + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static Task decodeLine (String line) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int typeIndex \u003d line.indexOf(\"[\") + 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        char type \u003d line.charAt(typeIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int doneIndex \u003d line.indexOf(\"][\") + 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        boolean done \u003d (line.charAt(doneIndex) \u003d\u003d \u0027\\u2713\u0027) ? true : false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String info \u003d line.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String[] infoList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (type \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d info;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                todo.setDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return todo;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else if (type \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            infoList \u003d info.split(\" \\\\(by: \", 2);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d infoList[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            time \u003d infoList[1].substring(0, infoList[1].length() - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                deadline.setDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return deadline;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Deadline(description, time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            infoList \u003d info.split(\" \\\\(at: \", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            description \u003d infoList[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            time \u003d infoList[1].substring(0, infoList[1].length() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (done) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                event.setDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return event;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new Event(description, time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void writeFile(TaskList tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        //String content \u003d taskArrayToString(inputArray);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        //UI ui \u003d new UI();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String content \u003d tasks.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            PrintWriter outputStream \u003d new PrintWriter(new FileWriter(this.fileName));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            outputStream.print(content);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            outputStream.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public TaskList readFile () {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        BufferedReader reader;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(this.fileName));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            String line \u003d reader.readLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (line\u003d\u003dnull) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                return new TaskList();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                Task task \u003d decodeLine(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                line \u003d reader.readLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return new TaskList();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void displayFile() throws IOException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        BufferedReader in \u003d new BufferedReader(new FileReader(this.fileName));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        while((line \u003d in.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 126
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected EventType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setType(EventType type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public EventType getType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 37
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "   @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "   public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       String content \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       int i \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       for(Task task : this) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "           content +\u003d i++ + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       return content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "   }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 17
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"[T]\"+ \"[\" + super.getStatusIcon()+\"] \" + super.getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 12
    }
  },
  {
    "path": "src/main/java/seedu/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            return scanner.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException(\"No Line Found\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            System.out.println(e.message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void displayTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(tasks.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void displayNumOfTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void addTaskUI(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void doneTaskUI(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void deleteTaskUI(int taskNum) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"I have deleted task No.\" + (taskNum + 1) + \" for you\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void findTaskUI(TaskList relevantTasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Here are the relevant tasks\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(relevantTasks.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"_____________________________________________________\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liushiru"
        },
        "content": "       // scanner.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liushiru"
        },
        "content": " /*   public String taskArrayToString (TaskList tasks) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for(Task task : tasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            content +\u003d i++ + \".\" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage)  {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                tasks.add(this.task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.addTaskUI(this.task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                ui.displayNumOfTasks(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                storage.writeFile(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (taskNum \u003e\u003d tasks.size() || taskNum \u003c 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.taskOutOfRangeException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        tasks.remove(this.taskNum);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.deleteTaskUI(this.taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.displayNumOfTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 26
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected int taskNum;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException.taskOutOfRangeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        if (taskNum \u003e\u003d tasks.size() || taskNum \u003c 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            throw new DukeException.taskOutOfRangeException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        tasks.get(this.taskNum).setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.doneTaskUI(tasks.get(this.taskNum));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        TaskList relevantTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            Task currTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            if (currTask.toString().contains(this.keyword)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liushiru"
        },
        "content": "                relevantTasks.add(currTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liushiru"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.findTaskUI(relevantTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 27
    }
  },
  {
    "path": "src/main/java/seedu/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "import seedu.duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        ui.displayTasks(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 13
    }
  },
  {
    "path": "src/test/java/seedu/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liushiru"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liushiru"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liushiru"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    public static void main(String args[]){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liushiru"
        },
        "content": "        System.out.println(\"Hello Java\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liushiru"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liushiru"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liushiru": 7
    }
  }
]

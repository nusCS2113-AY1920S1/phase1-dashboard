[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.addedTaskMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.printTask(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.currentTaskListSizeMsg(tasks.getSize());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        store.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 22
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        store.writeData(task.getTasks());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.goodbyeMsg();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 13
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage store) throws DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    Deadline(String... input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        super(input[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        setDateAndTime(input[input.length - 1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private void setDateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (dateAndTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            setStringToDate(dateAndTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private void setStringToDate(String dateAndTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] split \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        LocalDate datePart \u003d LocalDate.parse(split[0], DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        LocalTime timePart \u003d LocalTime.parse(split[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        dateTime \u003d  LocalDateTime.of(datePart, timePart);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String writingFile() { return \"D\" + \"|\" + super.writingFile() + \"|\" + dateAndTime; }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dateAndTime + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 36
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeInvalidIndexException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (index - 1 \u003c 0 || index - 1 \u003e\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeInvalidIndexException();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            Task temp \u003d tasks.getTasks().get(index - 1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            tasks.getTasks().remove(index - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            ui.deleteMsg(temp);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            store.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 26
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage store) throws DukeInvalidIndexException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (index - 1 \u003e\u003d tasks.getTasks().size() || index - 1 \u003c 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeInvalidIndexException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            tasks.getTasks().get(index - 1).setTaskDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            ui.doneTaskMsg(tasks.getTasks().get(index - 1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private Storage store;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        store \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        tasks \u003d new TaskList(store);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.helloMsg();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                c.execute(tasks, ui, store);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 23,
      "-": 16
    }
  },
  {
    "path": "src/main/java/DukeCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DukeCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return super.getMessage() + \"Must be a valid command!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 7
    }
  },
  {
    "path": "src/main/java/DukeEmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DukeEmptyCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return super.getMessage() + \"Command cannot be empty!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 7
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"DukeException: \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class DukeInvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return super.getMessage() + \"Invalid Index!\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "namiwa": 7
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    Events(String... input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        super(input[0]);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        setDateAndTime(input[input.length - 1]);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private void setDateAndTime(String dateAndTime) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (dateAndTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            setStringToDate(dateAndTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.dateAndTime \u003d dateAndTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private void setStringToDate(String dateAndTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] split \u003d dateAndTime.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        LocalDate datePart \u003d LocalDate.parse(split[0], DateTimeFormatter.ofPattern(\"d/MM/yyyy\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        LocalTime timePart \u003d LocalTime.parse(split[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        dateTime \u003d  LocalDateTime.of(datePart, timePart);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String writingFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"E\" + \"|\" + super.writingFile() + \"|\" + dateAndTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateAndTime + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 39
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.find(keyword);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        ui.findMsg(temp);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 21
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private boolean isEmpty;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage store) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        isEmpty \u003d tasks.getTasks().isEmpty();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (!isEmpty) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            ui.printTaskList(tasks.getTasks());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            ui.tryAgainListSize();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private static Command checkValidDoneIndex(String input) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] hold \u003d input.split(\" \");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        int test \u003d hold.length;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        int index \u003d Integer.parseInt(hold[1]);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (test \u003e 2) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private static String[] testRegex(String inputs) throws DukeEmptyCommandException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (inputs.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!inputs.contains(\"/by\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (inputs.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!inputs.contains(\"/at\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (inputs.equals(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] res \u003d inputs.split(\"/\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (res.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return res;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private static Command deleteTask(String input) throws DukeEmptyCommandException, DukeCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        int res \u003d -1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (split[split.length - 1].equals(\"\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeEmptyCommandException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            res \u003d Integer.parseInt(split[split.length - 1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeCommandException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return new DeleteCommand(res);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private static Command parseFind(String input) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return new FindCommand(split[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public static Command parse(String input) throws DukeCommandException, DukeEmptyCommandException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (input.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String[] temp \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String [] split \u003d testRegex(temp[temp.length - 1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!temp[0].equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                throw new DukeCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            Task hold \u003d new Todo(split);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new AddCommand(hold);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String[] temp \u003d input.split(\"event \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String [] split \u003d testRegex(temp[temp.length - 1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!temp[0].equals(\"\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                throw new DukeCommandException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            split[split.length - 1] \u003d split[split.length - 1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            split[split.length - 1] \u003d split[split.length - 1].replaceFirst(\"at \", \"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            Task hold \u003d new Events(split);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new AddCommand(hold);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String[] temp \u003d input.split(\"deadline \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String [] split \u003d testRegex(temp[temp.length - 1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!temp[0].equals(\"\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                throw new DukeCommandException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            split[split.length - 1] \u003d split[split.length - 1].trim();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            split[split.length - 1] \u003d split[split.length - 1].replaceFirst(\"by \", \"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            Task hold \u003d new Deadline(split);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new AddCommand(hold);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return checkValidDoneIndex(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return deleteTask(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else if (input.equals(\"find \")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "namiwa"
        },
        "content": "           return parseFind(input);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            throw new DukeCommandException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 100
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private Path path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private boolean fileExits;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    Storage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        path \u003d Paths.get(\"data/dukeData.text\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        fileExits \u003d Files.isRegularFile(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    boolean getFileExits() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return fileExits;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    void writeData(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        List\u003cString\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        for (Task temp : taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            store.add(temp.writingFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (!fileExits) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                Files.createDirectories(path.getParent());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                Files.createFile(path);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            Files.write(path, store, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public List\u003cTask\u003e readData() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namiwa"
        },
        "content": "     List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namiwa"
        },
        "content": "     List\u003cString\u003e lines \u003d Collections.emptyList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namiwa"
        },
        "content": "     try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namiwa"
        },
        "content": "         lines \u003d Files.readAllLines(path, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "namiwa"
        },
        "content": "     } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namiwa"
        },
        "content": "         e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namiwa"
        },
        "content": "     }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        for (String line:lines) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            String[] hold \u003d line.split(Pattern.quote(\"|\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            switch (hold[0]) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    Events t_events \u003d new Events(hold[1], hold[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    if (hold[2].equals(\"1\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        t_events.setTaskDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    list.add(t_events);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    Deadline t_deadline \u003d new Deadline(hold[1], hold[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    if (hold[2].equals(\"1\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        t_deadline.setTaskDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    list.add(t_deadline);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    Todo t_todo \u003d new Todo(hold[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    if (hold[2].equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        t_todo.setTaskDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    list.add(t_todo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 79
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    private Boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    Task(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    void setTaskDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String writingFile() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return task + \"|\" + (getDone() ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String completed \u003d (done) ? \"[✓] \" : \"[✗] \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return completed + task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " }"
      }
    ],
    "authorContributionMap": {
      "namiwa": 16,
      "-": 16
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        if (store.getFileExits()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            tasks \u003d store.readData();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public List\u003cTask\u003e find(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        for (Task hold : tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            if (hold.getTask().contains(input)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                temp.add(hold);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public Task getLastTask() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 45
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    Todo(String... input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        super(input[0]);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String writingFile() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"T\" + \"|\" + super.writingFile();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "namiwa"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "namiwa"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    private static String LINE \u003d \"_______________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void closeScan() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void helloMsg() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                LINE +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.print(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void tryAgainCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Please input the right command!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void tryAgainCommandEmpty() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Adding command cannot be empty!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void tryAgainNumber() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Please input a number!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void tryAgainIndex() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Please check your index\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void tryAgainListSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Please check your list size!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void addedTaskMsg() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void currentTaskListSizeMsg(int size) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                \"Now you have \" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        size +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "namiwa"
        },
        "content": "                        \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void doneTaskMsg(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void printTaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        for (Task temp : taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            System.out.println(temp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void printTask(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void findMsg(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        for (Task temp : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            System.out.println(count + \". \" + temp);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "namiwa"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void goodbyeMsg() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        closeScan();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    public void deleteMsg(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "namiwa"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "namiwa"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "namiwa"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "namiwa"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "namiwa": 94
    }
  }
]

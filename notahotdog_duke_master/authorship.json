[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public Deadline(String description, actionType type, String dueDate){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return \"[D]\"+ super.toString() + \" (by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.nio.channels.ScatteringByteChannel;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "//Commit"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        System.out.println(\"What can i do for you? \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        Boolean state \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        List\u003cTask\u003e actionList \u003d new ArrayList\u003c\u003e(); //List of actions to be taken"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        //Level 7"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        //Reading in the input from a previous session"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        FileReader fileReader \u003d new FileReader(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        String str1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        while ((str1 \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String delims \u003d \"[|]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String[] tokens \u003d str1.split(delims);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            //tokens"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            if (tokens[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                //Create Tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                ToDo action \u003d new ToDo(tokens[2], actionType.T);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (tokens[1].equals(\"true\")) { //replaced from true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    action.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                actionList.add(action);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            //Deadlines"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            else if (tokens[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                Deadline action \u003d new Deadline(tokens[2], actionType.D, tokens[3]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (tokens[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    action.isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                actionList.add(action);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            //Events"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            else if (tokens[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                Event action \u003d new Event(tokens[2], actionType.E, tokens[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (tokens[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    action.isDone \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                actionList.add(action);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        while (state) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            //FileWriter/PrintWriter"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"src/data/duke.txt\", true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String firstWord \u003d null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String restWord \u003d null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            int noWords \u003d countWordsUsingStringTokenizer(str);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            //check the first word if it is todo/deadline/event than add"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            if (noWords !\u003d 1) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                String inpSentence[] \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                firstWord \u003d inpSentence[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                restWord \u003d inpSentence[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                firstWord \u003d str;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (firstWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    state \u003d false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }else if(firstWord.equals(\"find\")){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Level 9-Find"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                     Iterator\u003cTask\u003e itr \u003d actionList.iterator();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                     List\u003cTask\u003e printList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                     while(itr.hasNext()){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                         Task element \u003d itr.next();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                         String elementDscr \u003d element.description;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                         if(elementDscr.contains(restWord)){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                             printList.add(element);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                         }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                     }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                     printTaskList(printList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Level 6- Delete"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:  \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String arrStr[] \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    int num \u003d Integer.parseInt(arrStr[1]) - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    actionList.remove(num);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Now you have \" + actionList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Delete from Memory"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    int lineNo \u003d Integer.parseInt(arrStr[1]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    deleteLine(lineNo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                //DONE"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String arrStr[] \u003d str.split(\" \", 2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //this will change the icon to true"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    int num \u003d Integer.parseInt(arrStr[1]) - 1;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    actionList.get(num).isDone \u003d true;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Updates the state of the line"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    int lineNo \u003d Integer.parseInt(arrStr[1]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    updateStateDone(lineNo);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String action \u003d actionList.get(num).getDescription();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String check \u003d actionList.get(num).getStatusIcon();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"  [\" + check + \"]\" + action);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else if (firstWord.equals(\"list\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Implementation using the task class"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    Iterator\u003cTask\u003e actionItr \u003d actionList.iterator();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    int ctr \u003d 1;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    while (actionItr.hasNext()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        Task element \u003d actionItr.next();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        String action \u003d element.getDescription();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        String check \u003d element.getStatusIcon();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        String actionType \u003d element.getActiontype();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        String dueDate \u003d element.getDueDate();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        if (element instanceof ToDo) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                            System.out.println(ctr + \". [\" + actionType + \"]\" + \"[\" + check + \"]\" + action);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        } else if (element instanceof Deadline) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                            System.out.println(ctr + \". [\" + actionType + \"]\" + \"[\" + check + \"]\" + action + \"(by:\" + dueDate + \")\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        } else if (element instanceof Event) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                            System.out.println(ctr + \". [\" + actionType + \"]\" + \"[\" + check + \"]\" + action + \"(at:\" + dueDate + \")\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        ctr++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    if (restWord \u003d\u003d null) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        //Handle Errors"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        System.out.println(\"      ☹   OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    ToDo action \u003d new ToDo((restWord), actionType.T);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    actionList.add(action);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"\\t\" + action);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Now you have \" + actionList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        printWriter.println(\"T|\" + action.isDone + \"|\" + action.description);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        System.out.println(\"exception caught\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //separate the word"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String command[] \u003d restWord.split(\"/by\", 2);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String action \u003d command[0]; //action to be undertaken"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String dueDate \u003d command[1]; //date to be completed"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //conversion from string to date format"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String temp \u003d convertToDateFormat(dueDate);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    dueDate \u003d temp;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    Deadline addtoList \u003d new Deadline(action, actionType.D, dueDate);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    actionList.add(addtoList);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"\\t\" + addtoList);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Now you have \" + actionList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        printWriter.println(\"D|\" + addtoList.isDone + \"|\" + addtoList.description + \"|\" + addtoList.dueDate);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Separate the word"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String command[] \u003d restWord.split(\"/at\", 2);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String action \u003d command[0]; //action to be undertaken"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String dueDate \u003d command[1]; // date to be completed"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //conversion from string to date format"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    String temp \u003d convertToDateFormat(dueDate);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    dueDate \u003d temp;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //enum"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    Event addtoList \u003d new Event(action, actionType.E, dueDate);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    actionList.add(addtoList);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"\\t\" + addtoList);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(\"Now you have \" + actionList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        printWriter.println(\"E|\" + addtoList.isDone + \"|\" + addtoList.description + \"|\" + addtoList.dueDate);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    //Exception Handling level 5"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    DukeException error \u003d new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            printWriter.close();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static int countWordsUsingStringTokenizer(String sentence) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        if (sentence \u003d\u003d null || sentence.isEmpty()) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        StringTokenizer tokens \u003d new StringTokenizer(sentence);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return tokens.countTokens();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static boolean isInteger(String str) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static void printTaskList(List\u003cTask\u003e arrayList){"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        for(Task element: arrayList){"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            System.out.println(element);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    //Level 8 - Date Formatting"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static String convertToDateFormat(String dueDate) throws ParseException {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        SimpleDateFormat formatter_st \u003d new SimpleDateFormat(\"dd \u0027st\u0027 \u0027of\u0027 MMMMMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        SimpleDateFormat formatter_nd \u003d new SimpleDateFormat(\"dd \u0027nd\u0027 \u0027of\u0027 MMMMMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        SimpleDateFormat formatter_rd \u003d new SimpleDateFormat(\"dd \u0027rd\u0027 \u0027of\u0027 MMMMMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        SimpleDateFormat formatter_th \u003d new SimpleDateFormat(\"dd \u0027th\u0027 \u0027of\u0027 MMMMMMMMMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        if (dueDate.contains(\"/\") \u0026\u0026 Character.isDigit(dueDate.charAt(1))) {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            Date date \u003d formatter.parse(dueDate);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            String tempFormat \u003d \"\";"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            if (dueDate.charAt(2) \u003d\u003d \u00271\u0027 || (dueDate.charAt(1) \u003d\u003d \u00271\u0027 \u0026\u0026 dueDate.charAt(2) \u003d\u003d \u0027/\u0027)) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (dueDate.charAt(0) \u003d\u003d \u00271\u0027 \u0026\u0026 dueDate.charAt(1) \u003d\u003d \u00271\u0027) {"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_th.format(date);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_st.format(date);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            } else if (dueDate.charAt(2) \u003d\u003d \u00272\u0027 || (dueDate.charAt(1) \u003d\u003d \u00272\u0027 \u0026\u0026 dueDate.charAt(2) \u003d\u003d \u0027/\u0027)) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (dueDate.charAt(1) \u003d\u003d \u00271\u0027 \u0026\u0026 dueDate.charAt(2) \u003d\u003d \u00272\u0027) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_th.format(date);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_nd.format(date);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            } else if (dueDate.charAt(2) \u003d\u003d \u00273\u0027 || (dueDate.charAt(1) \u003d\u003d \u00273\u0027 \u0026\u0026 dueDate.charAt(2) \u003d\u003d \u0027/\u0027)) {"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                if (dueDate.charAt(1) \u003d\u003d \u00271\u0027 \u0026\u0026 dueDate.charAt(2) \u003d\u003d \u00273\u0027) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_th.format(date);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    tempFormat \u003d formatter_rd.format(date);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                tempFormat \u003d formatter_th.format(date);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            return tempFormat;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static void updateStateDone (int lineNo) throws IOException {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        //System.out.println(\"UPDATING state\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        FileReader fileReaderUpdate \u003d new FileReader(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        BufferedReader bufferedReaderUpdate \u003d new BufferedReader(fileReaderUpdate);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        StringBuilder inputBuffer \u003d new StringBuilder();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        String tmpStr;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        int ctr \u003d 0;"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        while ((tmpStr \u003d bufferedReaderUpdate.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            StringBuilder line1 \u003d new StringBuilder();"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            ctr++;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            if (lineNo \u003d\u003d ctr) { //change the values in a line"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                String delims \u003d \"[|]\";"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                String[] tokens1 \u003d tmpStr.split(delims);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                tokens1[1] \u003d \"true\";"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                for (int i \u003d 0; i \u003c tokens1.length; i++) {"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    line1.append(tokens1[i]);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    if (i !\u003d tokens1.length - 1) {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                        line1.append(\"|\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                }"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "                line1.append(tmpStr);"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            }"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            inputBuffer.append(line1);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileReaderUpdate.close();"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        FileOutputStream fileOut \u003d new FileOutputStream(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileOut.write(inputBuffer.toString().getBytes());"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileOut.close();"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public static void deleteLine(int lineNo) throws IOException {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        //System.out.println(\"UPDATING Delete\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        FileReader fileReaderDelete \u003d new FileReader(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        BufferedReader bufferedReaderDelete \u003d new BufferedReader(fileReaderDelete);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        StringBuilder inputBuffer \u003d new StringBuilder();"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        String tmpStr;"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        int ctr \u003d 0;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        while ((tmpStr \u003d bufferedReaderDelete.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            ctr++;"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            if(lineNo \u003d\u003d ctr) continue; // ignores the line"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "          //  System.out.println(\"Line No: \" + lineNo + \" Ctr val:\" + ctr);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "           // System.out.println(\"DELETE DEBUG: \" + tmpStr);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            inputBuffer.append(tmpStr);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileReaderDelete.close();"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        FileOutputStream fileOut \u003d new FileOutputStream(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileOut.write(inputBuffer.toString().getBytes());"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        fileOut.close();"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "notahotdog": 415,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        public DukeException (String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public class Event  extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public Event(String description, actionType type, String dueDate){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        super(description,type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return \"[E]\"+ super.toString() + \" (at: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String dueDate \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public actionType type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    //Include the tags for TODO\u0027s Deadlines and Events"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public Task(String description, actionType type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String getActiontype(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return type.name(); // converts enum to string"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return  \"[\" + getStatusIcon() + \"]\" + description ;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 38
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public class ToDo  extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public ToDo(String description, actionType type){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        super(description,type);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "notahotdog"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 11
    }
  },
  {
    "path": "src/main/java/actionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "public enum actionType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    T,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    D,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "    E"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "notahotdog"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "notahotdog": 5
    }
  }
]

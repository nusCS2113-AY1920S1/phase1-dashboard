[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "talesrune": 23
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String[] suf \u003d { \"st\", \"nd\", \"rd\", \"th\" };"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected SimpleDateFormat datetimeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateTime \u003d datetimeFormat.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            this.by \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(\"Error reading date/time, please use this format \\\"d/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(by));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(by));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(by);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(by);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String datetimeStr \u003d datetimeFormat.format(by);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"D|\" + super.toFile() + \"|\" + datetimeStr;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 58
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "//import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.ArrayList; //to use arraylist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "//import java.util.*;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/ //1. indentation 2. must have full-stop 3. special commenting"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String tick \u003d \"[✓]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String cross \u003d \"[✗]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String word;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        //Reading file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        File file \u003d new File(\"C:\\\\repos\\\\duke_new2\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String st;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String taskDesc \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String dateDesc \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            String[] commandList \u003d st.split(\"\\\\|\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                for (int i \u003d 0; i \u003c commandList.length; i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (i \u003d\u003d 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        taskDesc \u003d commandList[i];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else if (i \u003d\u003d 3) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        dateDesc \u003d commandList[i];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Boolean checked \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (commandList.length \u003e 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (!(commandList[1].equals(\"1\") || commandList[1].equals(\"0\"))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading 1 or 0, skipping to next line\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    checked \u003d commandList[1].equals(\"1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (commandList[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    items.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (commandList[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t \u003d new Deadline(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (!taskDesc.isEmpty() \u0026\u0026 !dateDesc.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        items.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading description or date/time, skipping to next line\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (commandList[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t \u003d new Event(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    items.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (!commandList[0].isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    throw new DukeException(\"Error reading whether if its T, D, or E, skipping to next line\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                System.out.println(\"     Error when reading current line, please fix the text file:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                System.out.println(\"     Duke will continue reading the rest of file\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            word \u003d input.nextLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            String[] arr \u003d word.split(\" \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            Task taskObj;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            taskDesc \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateDesc \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            boolean getDate \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (word.equals(\"list\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"     \" + (i + 1) + \".\" + items.get(i).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (arr.length \u003e 0 \u0026\u0026 (arr[0].equals(\"done\") || arr[0].equals(\"delete\"))) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        int tasknum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        if (tasknum \u003c 0 || tasknum \u003e\u003d items.size()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            throw new DukeException(\"     ☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            if (arr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                items.get(tasknum).setStatusIcon(true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"       \" + items.get(tasknum).toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            } else { //delete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"       \" + items.get(tasknum).toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                items.remove(tasknum);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"     Now you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (arr.length \u003e 0 \u0026\u0026 arr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        if (arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            throw new DukeException(\"     ☹ OOPS!!! The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            int numFound \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                if (items.get(i).getDescription().contains(arr[1])) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                    System.out.println(\"     \" + (i + 1) + \".\" + items.get(i).toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                    numFound++;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            if (numFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                System.out.println(\"     No matching tasks found.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (arr.length \u003e 0 \u0026\u0026 arr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        taskDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    taskDesc \u003d taskDesc.trim();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (taskDesc.isEmpty()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        taskObj \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        items.add(taskObj);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"       \" + items.get(items.size() - 1).toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"     Now you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (arr.length \u003e 0 \u0026\u0026 (arr[0].equals(\"deadline\") || arr[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        if ((arr[i].trim().isEmpty() || !arr[i].substring(0, 1).equals(\"/\")) \u0026\u0026 !getDate) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            taskDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            if (!getDate) { //detect \"/\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                getDate \u003d true;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                dateDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    taskDesc \u003d taskDesc.trim();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    dateDesc \u003d dateDesc.trim();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (taskDesc.isEmpty()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! The description of a \" + arr[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else if (dateDesc.isEmpty()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"     ☹ OOPS!!! The description of date/time for \""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                                + arr[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        if (arr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            taskObj \u003d new Deadline(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            items.add(taskObj);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            taskObj \u003d new Event(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                            items.add(taskObj);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"       \" + items.get(items.size() - 1).toString());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        System.out.println(\"     Now you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    //Writing it to file"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    String fileContent \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        fileContent +\u003d items.get(i).toFile() + \"\\n\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"C:/repos/duke_new2/data/duke.txt\"));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    writer.write(fileContent);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    writer.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                System.out.println(\"     New error, please fix:\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                System.out.println(\"     Duke will continue as per normal.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "talesrune": 203
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String[] suf \u003d { \"st\", \"nd\", \"rd\", \"th\" };"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected SimpleDateFormat datetimeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateTime \u003d datetimeFormat.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            this.at \u003d dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(\"Error reading date/time, please use this format \\\"d/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(at));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(at));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(at);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String datetimeStr \u003d datetimeFormat.format(at);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"E|\" + super.toFile() + \"|\" + datetimeStr;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 60
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    //public void setDescription(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    //}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void setStatusIcon(boolean setDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        isDone \u003d setDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String numStr \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            numStr \u003d \"1|\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            numStr \u003d \"0|\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return  numStr + description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"T|\" + super.toFile();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 16
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    void testMethod() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(\"Test from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 14
    }
  }
]

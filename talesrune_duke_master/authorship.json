[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    //mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "talesrune": 29
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     * Hi."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "//import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "//import java.util.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/ //1. indentation 2. must have full-stop 3. special commenting"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private TaskList items;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            items \u003d new TaskList(storage.read());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            items \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Command getCommand(String sentence) throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Command cmd \u003d Parser.parse(sentence, ui,items);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void saveState(Command cmd) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        cmd.executeStorage(items,ui,storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeCommand(Command cmd) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d cmd.executeGui(items, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String sentence;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sentence \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Command cmd \u003d Parser.parse(sentence, ui,items);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (cmd instanceof ExitCommand) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    cmd.executeStorage(items,ui,storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    cmd.execute(items,ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showErrorMsg(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showErrorMsg(\"     New error, please fix:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showErrorMsg(\"     Duke will continue as per normal.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "talesrune": 76
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     * Setting up Duke GUI."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcomeGui(), dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    TimerTask exitDuke \u003d new TimerTask() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        public void run() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    };"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                DialogBox.getUserDialog(input, userImage)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            Command cmd \u003d duke.getCommand(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (cmd instanceof ExitCommand) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                duke.saveState(cmd);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                response \u003d Ui.showLineGui() + Ui.showByeGui() + Ui.showLineGui();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                timer.schedule(exitDuke, new Date(System.currentTimeMillis() + 500));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                response \u003d Ui.showLineGui() + duke.executeCommand(cmd) + Ui.showLineGui();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            response \u003d Ui.showLineGui() + Ui.showErrorMsgGui(e.getMessage()) + Ui.showLineGui();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            );"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            response \u003d Ui.showLineGui() + Ui.showErrorMsgGui(\"     New error, please read console:\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    +  Ui.showErrorMsgGui(\"     Duke will continue as per normal.\") + Ui.showLineGui();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            );"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 100
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showAdd(items);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d ui.showAddGui(items);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 32
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public abstract void execute(TaskList items, Ui ui);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public abstract String executeGui(TaskList items, Ui ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public abstract void executeStorage(TaskList items, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "talesrune": 17
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String deletedStr \u003d \"       \" + items.get(index).toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.remove(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showDelete(items, deletedStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String deletedStr \u003d \"       \" + items.get(index).toStringGui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d ui.showDeleteGui(items, deletedStr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 34
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected final int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.get(index).setStatusIcon(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showDone(items, index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.get(index).setStatusIcon(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d ui.showDoneGui(items, index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 31
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public  void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public  String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        storage.write(items);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 25
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showFind(items, keyword);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d ui.showFindGui(items, keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 29
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void execute(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ui.showTaskList(items);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String executeGui(TaskList items, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d ui.showTaskListGui(items);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void executeStorage(TaskList items, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 23
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static Command parse(String sentence, Ui ui, TaskList items) throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String[] arr \u003d sentence.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String taskDesc \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String dateDesc \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        boolean getDate \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (sentence.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (arr.length \u003e 0 \u0026\u0026 (arr[0].equals(\"done\") || arr[0].equals(\"delete\"))) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The task number cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                int tasknum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (tasknum \u003c 0 || tasknum \u003e\u003d items.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    throw new DukeException(\"     (\u003e_\u003c) OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (arr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        return new DoneCommand(tasknum);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else { //delete"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        return new DeleteCommand(tasknum);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (arr.length \u003e 0 \u0026\u0026 arr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (arr[1].trim().isEmpty()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    return new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (arr.length \u003e 0 \u0026\u0026 arr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                taskDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            taskDesc \u003d taskDesc.trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (taskDesc.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Task taskObj \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                return new AddCommand(taskObj);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (arr.length \u003e 0 \u0026\u0026 (arr[0].equals(\"deadline\") || arr[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            for (int i \u003d 1; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if ((arr[i].trim().isEmpty() || !arr[i].substring(0, 1).equals(\"/\")) \u0026\u0026 !getDate) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    taskDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (!getDate) { //detect \"/\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        getDate \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        dateDesc +\u003d arr[i] + \" \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            taskDesc \u003d taskDesc.trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateDesc \u003d dateDesc.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (taskDesc.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The description of a \" + arr[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else if (dateDesc.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                throw new DukeException(\"     (\u003e_\u003c) OOPS!!! The description of date/time for \""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        + arr[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Task taskObj;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (arr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    taskObj \u003d new Deadline(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    taskObj \u003d new Event(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                return new AddCommand(taskObj);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (sentence.equals(\"bye\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            throw new DukeException(\"     (\u003e_\u003c) OoPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 98
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String filePath \u003d \"C:/repos/duke_new2/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.filePath +\u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public ArrayList\u003cTask\u003e read() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String st;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String taskDesc;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String dateDesc;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            String[] commandList \u003d st.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                //clear previous dates/desc"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                taskDesc \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                dateDesc \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                for (int i \u003d 0; i \u003c commandList.length; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (i \u003d\u003d 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        taskDesc \u003d commandList[i];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else if (i \u003d\u003d 3) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        dateDesc \u003d commandList[i];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Boolean checked \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (commandList.length \u003e 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (!(commandList[1].equals(\"1\") || commandList[1].equals(\"0\"))) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading 1 or 0, skipping to next line\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    checked \u003d commandList[1].equals(\"1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                if (commandList[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (taskDesc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading description, skipping to next line\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t \u003d new Todo(taskDesc);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        items.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (commandList[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (taskDesc.trim().isEmpty() || dateDesc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading description or date/time, skipping to next line\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t \u003d new Deadline(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        items.add(t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (commandList[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    if (taskDesc.isEmpty() || dateDesc.isEmpty()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        throw new DukeException(\"Error reading description or date/time, skipping to next line\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t \u003d new Event(taskDesc, dateDesc);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        t.setStatusIcon(checked);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                        items.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                } else if (!commandList[0].isEmpty()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                    throw new DukeException(\"Error reading whether if its T, D, or E, skipping to next line\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showErrorMsg(\"     Error when reading current line, please fix the text file:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                ui.showErrorMsg(\"     Duke will continue reading the rest of file\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return items;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void write(TaskList items) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String fileContent \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            fileContent +\u003d items.get(i).toFile() + \"\\n\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        writer.write(fileContent);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 107
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String[] suf \u003d { \"st\", \"nd\", \"rd\", \"th\" };"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected SimpleDateFormat datetimeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateTime \u003d datetimeFormat.parse(by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            this.by \u003d dateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(\"Error reading date/time, please use this format \\\"d/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(by));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(by));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(by);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(by);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toStringGui() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(by));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(by));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(by);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(by);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[D]\" + super.toStringGui() + \" (by: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String datetimeStr \u003d datetimeFormat.format(by);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"D|\" + super.toFile() + \"|\" + datetimeStr;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 91
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String[] suf \u003d { \"st\", \"nd\", \"rd\", \"th\" };"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected SimpleDateFormat datetimeFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        Date dateTime \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            dateTime \u003d datetimeFormat.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            this.at \u003d dateTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            System.out.println(\"Error reading date/time, please use this format \\\"d/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(at));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(at));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(at);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(at);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toStringGui() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat2 \u003d new SimpleDateFormat(\"MMMMM yyyy, h:mm a\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        SimpleDateFormat datetimeFormat3 \u003d new SimpleDateFormat(\"MMMMM yyyy, ha\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String displayDT \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int day \u003d Integer.parseInt(new SimpleDateFormat(\"d\").format(at));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(at));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat2.format(at);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            displayDT \u003d datetimeFormat3.format(at);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int sufIndex \u003d -1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 2 || day \u003d\u003d 22) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003d\u003d 3 || day \u003d\u003d 23) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 2;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else if (day \u003e 3 \u0026\u0026 day \u003c 31) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            sufIndex \u003d 3;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String suffixStr \u003d day + suf[sufIndex];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        displayDT \u003d suffixStr + \" of \" + displayDT;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[E]\" + super.toStringGui() + \" (at: \" + displayDT + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String datetimeStr \u003d datetimeFormat.format(at);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"E|\" + super.toFile() + \"|\" + datetimeStr;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 93
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\"); //return [✓] : [✗] symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getStatusIconGui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return [✓]\" : \"[✗] symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void setStatusIcon(boolean setDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        isDone \u003d setDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toStringGui() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return getStatusIconGui() + \" \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String numStr \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            numStr \u003d \"1|\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            numStr \u003d \"0|\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return  numStr + description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 47
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected ArrayList\u003cTask\u003e items;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e items) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void add(Task taskObj) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.add(taskObj);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        items.remove(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return items.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return items.get(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String listStr \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            listStr +\u003d \"     \" + (i + 1) + \".\" + items.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return listStr;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String getListGui() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String listStr \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            listStr +\u003d \"     \" + (i + 1) + \".\" + items.get(i).toStringGui() + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return listStr;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 49
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toStringGui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"[T]\" + super.toStringGui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return \"T|\" + super.toFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 25
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected static final String line \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected final Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    protected final PrintStream out;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showLineGui() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return line + \"\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showTaskList(TaskList items) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.print(items.getList());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showTaskListGui(TaskList items) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Here are the tasks in your list:\\n\" + items.getListGui();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showDone(TaskList items, int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"       \" + items.get(index).toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showDoneGui(TaskList items, int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Nice! I\u0027ve marked this task as done:\\n       \" + items.get(index).toStringGui() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showDelete(TaskList items, String deletedTask) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(deletedTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Now you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showDeleteGui(TaskList items, String deletedTask) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Noted. I\u0027ve removed this task:\\n\" + deletedTask"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"\\n     Now you have \" + items.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showAdd(TaskList items) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"       \" + items.get(items.size() - 1).toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Now you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showAddGui(TaskList items) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Got it. I\u0027ve added this task:\\n       \""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + items.get(items.size() - 1).toString() + \"\\n     Now you have \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + items.size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Gui.*/"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showWelcomeGui() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d line + \"\\n     Hello! I\u0027m Duke\\n     What can I do for you?\\n\" + line;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showByeGui() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showFind(TaskList items, String keyword) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int numFound \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (items.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                out.println(\"     \" + (i + 1) + \".\" + items.get(i).toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                numFound++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (numFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            out.println(\"     No matching tasks found.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    /**Hi.*/"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showFindGui(TaskList items, String keyword) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        int numFound \u003d 0;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            if (items.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                str +\u003d \"     \" + (i + 1) + \".\" + items.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                numFound++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        if (numFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            str +\u003d \"     No matching tasks found.\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(\"File not found, creating an empty list\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showLoadingErrorGui() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String str \u003d \"File not found, creating an empty list\\n\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public void showErrorMsg(String message) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    public static String showErrorMsgGui(String message) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        return message + \"\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 154
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "talesrune": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"440.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"364.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"364.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "talesrune"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            \u003cFont name\u003d\"System Bold Italic\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "talesrune"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"440.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "talesrune"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "talesrune"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"428.0\" spacing\u003d\"10.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "talesrune"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "talesrune"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "talesrune"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "talesrune"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "talesrune"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "talesrune"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "talesrune": 27
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "talesrune"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "talesrune"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    void testMethod() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "talesrune"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "talesrune"
        },
        "content": "        System.out.println(\"Test from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "talesrune"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "talesrune"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "talesrune"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "talesrune": 14
    }
  }
]

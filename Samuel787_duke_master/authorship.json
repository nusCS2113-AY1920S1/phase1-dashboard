[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "//group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Samuel787": 30,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DateTimeParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public static String parseDeadlineInfo(String by, String duke_indent) throws DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //expected input format: dd/mm/year time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] data \u003d by.split(\" \", 2); //split by whitespace"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(data.length !\u003d 2){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Wrong input format for creating new Deadline. Follow this eg: deadline return book /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //trim the data"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        data[0] \u003d data[0].trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        data[1] \u003d data[1].trim();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] dates \u003d data[0].split(\"/\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(dates.length !\u003d 3) throw new DukeException(\"     ☹ OOPS!!! Wrong input format for date when creating new Deadline. Follow this eg: /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        int day, month, year, time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            day \u003d Integer.parseInt(dates[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            month \u003d Integer.parseInt(dates[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            year \u003d Integer.parseInt(dates[2]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            time \u003d Integer.parseInt(data[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Wrong input format for date or time when creating new Deadline. Follow this eg: /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //work with the data"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(time \u003c 0 || time \u003e 2400){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Deadline time is not a valid input. Follow this eg: /by 2/12/2019 1800\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(isDateVaid(day, month, year)){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return parseDate(day, month, year) + \", \" + parseTime(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! You have entered an invalid date\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public static String parseEventInfo(String at, String duke_indent) throws DukeException{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //expected input format dd/mm/year time-time"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] data \u003d at.split(\" \", 2); //split by whitespace"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(data.length !\u003d 2){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Wrong input format for creating new Event. Follow this eg: event team meeting /at 2/12/2019 1600-2000\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //trim the data"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        data[0] \u003d data[0].trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        data[1] \u003d data[1].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //extract out the dates"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] dates \u003d data[0].split(\"/\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(dates.length !\u003d 3) throw new DukeException(\"     ☹ OOPS!!! Wrong input format for date when creating new Event. Follow this eg: /at 2/12/2019 1600-2000\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        int day, month, year, time1, time2;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            day \u003d Integer.parseInt(dates[0]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            month \u003d Integer.parseInt(dates[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            year \u003d Integer.parseInt(dates[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            String[] times \u003d data[1].split(\"-\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            time1 \u003d Integer.parseInt(times[0]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            time2 \u003d Integer.parseInt(times[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Wrong input format for date or time when creating new Event. Follow this eg: /at 2/12/2019 1600-2000\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Wrong input format for date or time when creating new Event. Follow this eg: /at 2/12/2019 1600-2000\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //work with the data"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(time1 \u003c 0 || time1 \u003e 2400 || time2 \u003c 0 || time2 \u003e 2400){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Event timing is not a valid input. Follow this eg: /at 2/12/2019 1600-2000\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(time1 \u003e time2){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The event\u0027s start time cannot be after the event\u0027s end time!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(isDateVaid(day, month, year)){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return parseDate(day, month, year) + \", \" + parseTime(time1)+\"-\"+parseTime(time2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! You have entered an invalid date\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "     *  checking if the user input date is a valid one"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static boolean isDateVaid(int d, int m, int y){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(d \u003c 1 || d \u003e 31 || m \u003c 1 || m \u003e 12 || y \u003c 0){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(m \u003d\u003d 2){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(isLeapYear(y)){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                if(d \u003e 29){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                if(d \u003e 28){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(m\u003d\u003d4 || m\u003d\u003d6 || m\u003d\u003d9 || m\u003d\u003d11){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(d \u003e 30){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static boolean isLeapYear(int y){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if((y%4 \u003d\u003d 0 \u0026\u0026 y%100 !\u003d 0) || y %400\u003d\u003d0){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static String parseDate(int day, int month, int year){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //appending day"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(day \u003d\u003d 1 || day \u003d\u003d 21 || day \u003d\u003d 31){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d day +\"st of \";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(day \u003d\u003d 2 || day \u003d\u003d 22){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d day + \"nd of \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(day \u003d\u003d 3 || day \u003d\u003d 23){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d day + \"rd of \";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d day + \"th of \";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //appending month and year"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(month \u003d\u003d 1){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"January \";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 2){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"February \";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 3){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"March \";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 4){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"April \";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 5){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"May \";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 6){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"June \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 7){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"July \";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 8){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"August \";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 9){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"September \";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 10){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"October \";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 11){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"November \";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(month \u003d\u003d 12){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            date +\u003d \"December\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        date +\u003d year;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static String parseTime(int time) throws DukeException{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String t;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        int hr, mins;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(time \u003d\u003d 2400) time \u003d 0000;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        hr \u003d time/100;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        mins \u003d time %100;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(hr \u003e\u003d 12){"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            hr -\u003d 12;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            t \u003d \"pm\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            t \u003d \"am\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(hr \u003d\u003d 0){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            hr \u003d 12;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(mins \u003d\u003d 0){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return hr+\"\"+t;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(mins \u003c10){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return hr+\":0\"+mins+t;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else if(mins \u003c 60){"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            return hr+\":\"+mins+t;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Invalid time entered!\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 194
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return \"[D]\" + super.toString() +\" (by: \" +by+\")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        final String duke_line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        final String duke_indent \u003d \"     \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        duke_start(duke_line, duke_indent);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            dukeInit(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (DukeException d){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            dukeHandleException(new DukeException(\"     ☹ OOPS!!! Could not load tasks from hard disk :-(\"), duke_line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            String user_input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(user_input.equals(\"bye\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                duke_bye(duke_line, duke_indent);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(user_input.equals(\"list\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                duke_list(duke_line, duke_indent, tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(user_input.length() \u003e\u003d 4 \u0026\u0026 user_input.substring(0,4).equals(\"done\")){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    duke_done(duke_line, duke_indent, tasks, user_input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } catch(DukeException d){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(user_input.length() \u003e\u003d 4 \u0026\u0026 user_input.substring(0,4).equals(\"todo\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    duke_toDo(duke_line, duke_indent, tasks, user_input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } catch(DukeException d){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(user_input.length() \u003e\u003d 5 \u0026\u0026 user_input.substring(0,5).equals(\"event\")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    duke_event(duke_line, duke_indent, tasks, user_input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } catch (DukeException d){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(user_input.length() \u003e\u003d 9 \u0026\u0026 user_input.substring(0,9).equals(\"deadline \")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    duke_deadline(duke_line, duke_indent, tasks, user_input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } catch(DukeException d){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                dukeHandleException(new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"), duke_line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_start(String duke_line, String duke_indent){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"Hello! I\u0027m Duke\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_bye(String duke_line, String duke_indent){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_toDo(String duke_line, String duke_indent, ArrayList\u003cTask\u003e tasks, String user_input) throws DukeException{"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        user_input \u003d user_input.substring(4).trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if (user_input.equals(\"\")){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //user did not add any task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        Task currTask \u003d new ToDo(user_input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            dukeAddTask(currTask, tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (DukeException d){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //tasks.add(currTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"  \" +currTask);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"Now you have \"+tasks.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_event(String duke_line, String duke_indent, ArrayList\u003cTask\u003e tasks, String user_input) throws DukeException{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        user_input \u003d user_input.substring(5);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] data \u003d user_input.split(\"/at\", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(data.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            data[0] \u003d data[0].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            data[1] \u003d data[1].trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(data[0].equals(\"\")){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! You need to have some event description!\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(data[1].equals(\"\")){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! You need to include some timing for the event!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //Data is okay"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                Task currTask \u003d new Event(data[0], DateTimeParser.parseEventInfo(data[1], duke_indent));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                dukeAddTask(currTask, tasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"  \" +currTask);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"Now you have \"+tasks.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } catch (DukeException d){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //user input format wrong"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! You must separate the event description and timing with /at \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_deadline(String duke_line, String duke_indent, ArrayList\u003cTask\u003e tasks, String user_input) throws DukeException{"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        user_input \u003d user_input.substring(9);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        String[] data \u003d user_input.split(\"/by\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(data.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            data[0] \u003d data[0].trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            data[1] \u003d data[1].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(data[0].equals(\"\")){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! You need to have some task description!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(data[1].equals(\"\")){"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! You need to include some task deadline after /by\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                Task currTask \u003d new Deadline(data[0], DateTimeParser.parseDeadlineInfo(data[1], duke_indent));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                dukeAddTask(currTask, tasks);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"  \" + currTask);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_indent + \"Now you have \"+tasks.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                System.out.println(duke_line);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } catch (DukeException d){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                dukeHandleException(d, duke_line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //user input format wrong"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! You must separate the task and deadline with /by \");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_list(String duke_line, String duke_indent, ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        for(int i\u003d1; i\u003c\u003d tasks.size(); i++){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            System.out.println(duke_indent + i+\". \"+tasks.get(i-1));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void duke_done(String duke_line, String duke_indent, ArrayList\u003cTask\u003e tasks, String user_input) throws DukeException{"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        int task_num;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            task_num \u003d Integer.parseInt(user_input.substring(5)) - 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Invalid done command entered. \"+user_input.substring(5)+\" is not an integer. Follow this format:done \u003ctask number\u003e\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        if(task_num \u003e\u003d 0){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(task_num \u003e\u003d tasks.size()){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                task_num++;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! Invalid done command entered. \"+ task_num + \" exceeds the number of tasks in the list.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //update hard disk"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                BufferedReader file \u003d new BufferedReader(new FileReader(\"src/data/duke.txt\"));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                int x \u003d 0;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                while((line \u003d file.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    if(x \u003d\u003d task_num){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        String[] contents \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        contents[1] \u003d \"1\"; //mark as done;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        line \u003d \"\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        for(int i\u003d0; i\u003ccontents.length; i++){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                            line +\u003d contents[i];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                            if(i !\u003d contents.length-1){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                                line +\u003d\"|\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    inputBuffer.append(line);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    x++;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                file.close();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                FileOutputStream fileOut \u003d new FileOutputStream(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                fileOut.write(inputBuffer.toString().getBytes());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                fileOut.close();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } catch (IOException e){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! Could not update task in hard disk right now :-(\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            tasks.get(task_num).setDone(true);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            System.out.println(duke_line);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            System.out.println(duke_indent+\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            System.out.println(duke_indent+tasks.get(task_num));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            System.out.println(duke_line);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            task_num++;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Invalid done command entered. \"+ task_num + \" is less than 1.\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void dukeHandleException(DukeException d, String duke_line){"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(d.getMessage());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        System.out.println(duke_line);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void dukeInit(ArrayList\u003cTask\u003e tasks) throws DukeException{"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        //load tasks from the file"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            FileReader fr \u003d new FileReader(\"src/data/duke.txt\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            String str;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            while((str \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                String[] data \u003d str.split(\"\\\\|\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                if(data[0].equals(\"T\")){"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    ToDo toDo \u003d new ToDo(data[2]);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    if(data[1].equals(\"1\")){"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        toDo.setDone(true);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    tasks.add(toDo);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } else if(data[0].equals(\"D\")){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    Deadline deadline \u003d new Deadline(data[2], data[3]);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    if(data[1].equals(\"1\")){"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        deadline.setDone(true);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                } else if(data[0].equals(\"E\")){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    Event event \u003d new Event(data[2], data[3]);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    if(data[1].equals(\"1\")){"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                        event.setDone(true);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private static void dukeAddTask(Task task, ArrayList\u003cTask\u003e tasks) throws DukeException{"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //write task to the file"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"src/data/duke.txt\", true);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(fw);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            if(task instanceof ToDo){"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                ToDo toDo \u003d (ToDo)task;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                int isDone \u003d (toDo.getIsDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                pw.println(\"T|\" + isDone + \"|\"+ toDo.getDescription());"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(task instanceof Event){"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                Event event \u003d (Event)task;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                int isDone \u003d (event.getIsDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                pw.println(\"E|\" + isDone + \"|\"+event.getDescription()+\"|\"+event.getAt());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            } else if(task instanceof Deadline){"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                Deadline deadline \u003d (Deadline)task;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                int isDone \u003d (deadline.getIsDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "                pw.println(\"D|\"+isDone+\"|\"+deadline.getDescription()+\"|\"+deadline.getBy());"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            //error handling here"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! Due to some file writing error, this task isn\u0027t added :-(\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 287,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \"+this.at+\")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 18
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public abstract class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public void setDone(boolean x){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        this.isDone \u003d x;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return \"[\"+getStatusIcon()+\"] \"+this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 31
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "enum TaskType{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    todo, event, deadline, obsolete"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 3
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Samuel787"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "        return \"[T]\"+super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 10
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Samuel787"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Samuel787": 2
    }
  }
]

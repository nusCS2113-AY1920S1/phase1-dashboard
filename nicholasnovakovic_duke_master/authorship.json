[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.5\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 15,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Abstract class Command which dictates two necessary methods in all Command subclasses"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * method execute which will execute whatever the user input requests"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * method isExit which checks whether the user input will result in the program shutting down"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, ParseException, DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * ExitCommand class which will save all the Task data into the JSON file and initiate the exit procedure"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic ExitCommand() {}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tstorage.save(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * ListCommand class which executes the command of displaying the TaskList to the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic ListCommand() {}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tui.showEntry(i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * DeleteCommand which executes the procedure for deleting Task objects from the TaskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic DeleteCommand(String index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tthrow new DukeException(\"There is no such task.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tui.showLine(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tTask t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tui.showLine(\"  \" + t);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttasks.remove(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * FindCommand which executes the procedure for searching for Task objects in the TaskList which match the"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * keyword given by the user and shows the user a list of matching Tasks or else informs the user that no"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * matching Task objects were found"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate String keyword;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic FindCommand(String keyword) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.keyword \u003d keyword;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"You have no tasks in your list! :-)\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\ttasks.find(keyword, ui);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * AddCommand that deals with the adding of new Task objects to the TaskList"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tString description;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tString taskType;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic AddCommand(String description, String taskType) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.taskType \u003d taskType;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws ParseException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tswitch (taskType) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttasks.add(new ToDo(description));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] dInfo \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSimpleDateFormat dFormat \u003d new SimpleDateFormat(\"ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tDate by \u003d dFormat.parse(dInfo[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttasks.add(new Deadline(dInfo[0], by));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] eInfo \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSimpleDateFormat eFormat \u003d new SimpleDateFormat(\"ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tDate at \u003d eFormat.parse(eInfo[1]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttasks.add(new Event(eInfo[0], at));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * DoneCommand that deals with marking Tasks in the TaskList as done"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate int index;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic DoneCommand(String index) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.index \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (index + 1 \u003e tasks.size()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tthrow new DukeException(\"There is no such task.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tTask t \u003d tasks.get(index);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tt.markAsDone();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttasks.set(index, t);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn false;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 179
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Subclass of Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Describes an event which is classified as a deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Date datetime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor of deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Creates an instance of a deadline object by taking in its description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * and the date which it should be done by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param description the description of the deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param by the date and time which the deadline should be done by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.datetime \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.type \u003d \"[D]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn super.toString() + \" (by: \" + datetime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Main class which is responsible for the running of the task manager"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * function that starts the program"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * maintains the program while the exit command is not given"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     * exits program once exit command is given"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                ui.showParsingError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        new Duke(\"data/duke.json\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 46,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Represents all exceptions unique to the execution of the Task Manager program - Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Subclass of Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Describes specific type of task which can be classified as an event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Date datetime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor for Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Takes in a String description like superclass Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Takes in another parameter Date to store when the Event should be held at"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Allows reminding of user for when the Event is going to be"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param description the description of the event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param at the date and time at which the event will be held"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Event(String description, Date at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.datetime \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.type \u003d \"[E]\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn super.toString() + \" (at: \" + datetime + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 28
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Parser class that deals with making sense of user commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Returns a Command object which will be specific to the keywords given in the user command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Segregates the different categories of user commands"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Allows them to be dealt with specifically like how the should be with less confusion"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param fullCommand the entire user command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return Command the class Command will execute the user command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @throws DukeException in case of user input errors which Parser cannot recognise, the parser will return"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * specific error messages depending on the reason of the error"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tString[] fcArray \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tString keyword \u003d fcArray[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tswitch (keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new ExitCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (fcArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of delete cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new DeleteCommand(fcArray[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"find\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (fcArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of find cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new FindCommand(fcArray[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (fcArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of done cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new DoneCommand(fcArray[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (fcArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeException(\"☹ OOPS!!! The description of \" + keyword + \" cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\treturn new AddCommand(fcArray[1], keyword);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tthrow new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 48
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import com.google.gson.reflect.TypeToken;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import com.google.gson.stream.JsonReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Class that deals with the saving and loading of all Task data the user has saved"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Uses JSON file as the file type which the TaskList is saved"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Loads the data stored in the JSON file into an ArrayList of Tasks that"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * can be used to construct a new instance of TaskList which has all the saved Task data"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tString filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor of the storage class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Takes in the file path of where the JSON file with the saved data is stored on the computer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param filePath the location in the directory where the JSON file is"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Reads all the data saved in the JSON file specified in the filePath attribute"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Converts the data into an ArrayList of Tasks with all saved Task data"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Returns this ArrayList for user to update progress or new tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return ArrayList of Task the ArrayList with all the saved Task data"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @throws FileNotFoundException in case of the file not beign found, a new instance will be created and all"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * previous data will be lost"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tGson gson \u003d new Gson();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tJsonReader reader \u003d new JsonReader(new FileReader(\"data/duke.json\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tType type \u003d new TypeToken\u003cArrayList\u003cTask\u003e\u003e() {}.getType();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tArrayList\u003cTask\u003e tasks \u003d gson.fromJson(reader, type);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Transfers all current Task data saved in the TaskList into an ArrayList of Tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Writes all data in this ArrayList onto the JSON file specified in the filePath attribute"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param tasks the TaskList with all the saved Task data"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @throws IOException in case of IOException then the error in failure of saving should be shown to user"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tFileWriter writer \u003d new FileWriter(\"data/duke.json\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tArrayList\u003cTask\u003e list\u003d tasks.getList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tGson gson \u003d new GsonBuilder().create();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tgson.toJson(list, writer);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\twriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 60
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Superclass for all Tasks that will be added to the Task Manager"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor function for Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Creates a new instance of Task by taking in a String description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Automatically flags the boolean isDone as False"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Default Tasks have no type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param description the description of the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.type \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Returns a String object to show if a Task has been marked done or not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return tick if done or X symbol if not done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Flags the boolean attribute isDone as true in a task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Prints out the confirmation that the task is marked done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tisDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Returns a String which describes the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return the description of the task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn type + \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Represents the data structure containing all tasks added to the task manager"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Uses java.util.ArrayList as the main container"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor for TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * this is to initialise an EMPTY TaskList so it takes no inputs"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor for TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * this is to initialise a TaskList with an ArrayList of Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * this facilitates the loading of saved Task data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param tasks an ArrayList of Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * returns the ArrayList of Tasks which TaskList maintains"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return ArrayList the ArrayList of Tasks maintained by the TaskList class"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * returns the number of tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return size the number of tasks in the TaskList now"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * returns the Task at index i"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param i the index of the Task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return Task the Task object at index i"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Task get(int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn taskList.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * sets a Task at index i"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * if there is already a Task there then it will be overwritten"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param i the index of the Task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param task the new Task to be set at index i"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void set(int i, Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.set(i, task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * adds a Task to the back of the TaskList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param task the Task to be added"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void add(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.add(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\" );"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tint taskCount \u003d taskList.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (taskCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" task in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Searches for any Task objects that contain the keyword entered"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * if there are at least one Task objects fulfilling the criteria"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * will print out a list of these Task objects for the user to see"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * otherwise will notify the user that no Task objects have the keyword inside"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param keyword the keyword which the user is searching for Tasks with"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param ui the user interface class which deals with user interactions"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void find(String keyword, Ui ui) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tArrayList\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tfor (Task t : taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tif (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttemp.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (temp.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"There are no matching tasks in your list :-(\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tui.showLine(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tui.showLine((i + 1) + \".\" + temp.get(i));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * removes the Task at index i"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param i the index at which the Task should be removed"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void remove(int i) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.remove(i);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 111
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Subclass of Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * For any task that is not urgent enough to warrant a deadline or any events that are upcoming"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor of ToDo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Works similarly as superclass Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param description the description of the ToDo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic ToDo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.type \u003d \"[T]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * Class Ui that deals with user interactions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Scanner scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Constructor of class Ui"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * creates a new instance of Ui by initialising a new instance of a Scanner object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * enables the reading of user input and hence the actions that can be taken as responses to the user input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tscanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Greets the user upon initialisation of the task manager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showWelcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * Reads the user input and returns it in a String form to be parsed by the Parser class"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @return String the use input"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn scanner.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user an error message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showError(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user the loading error when there is a FileNotFoundException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showLoadingError() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"No saved data was found. Generating new task list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user a parsing error when the wrong input format for datetime is entered"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user how the format should be written"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showParsingError() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Please enter the date in the format: ddMMyyyy HHmm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user a message"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param message the message which should be shown to the user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showLine(String message) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * shows the user each Task object entry in the TaskList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param i the index of the Task object"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * @param task the Task Object"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void showEntry(int i, Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(i + \".\" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t * bids the user farewell and shuts the program down"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void exit() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Bye! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.exit(0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 81
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " * JUnit test class for Duke class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate final Duke dukeTest \u003d new Duke(\"data/duketest.json\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic void dummyTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tassertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 15
    }
  }
]

[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Date by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tDeadline(String description, Date by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tTaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tString filename \u003d \"tasks.ser\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tFileInputStream fis \u003d new FileInputStream(filename);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\ttaskList \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tois.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Stored tasks not found. All is lost. Start anew.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        while (input.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            line \u003d input.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            String[] words \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "            \thandleInput(words, taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t} catch (IllegalArgumentException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t} catch (DukeArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate static void handleInput(String[] words, TaskList taskList)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tthrows IllegalArgumentException, DukeArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "    \tString keyword \u003d words[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tswitch (keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"done\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tint index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttaskList.doTask(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (DukeArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"☹ OOPS!!! I\u0027m sorry, but that task doesn\u0027t exist :-(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tint index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttaskList.deleteTask(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (DukeArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"☹ OOPS!!! I\u0027m sorry, but that task doesn\u0027t exist :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (taskList.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"There are no tasks in your list!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} else if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! A keyword is needed for find to work!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] keywords \u003d words[1].split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (keywords.length \u003e 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! There should only be one keyword.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttaskList.find(keywords[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"bye\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tFileOutputStream fos \u003d new FileOutputStream(\"tasks.ser\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\toos.writeObject(taskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\toos.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.exit(0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"list\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (taskList.taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"You haven\u0027t added any tasks to your list yet :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tfor (int i \u003d 0; i \u003c taskList.taskCount; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.print(i + 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\".\" + taskList.getTask(i));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] deadlineDetails \u003d words[1].split(\" /\", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (deadlineDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] deadlineDate \u003d deadlineDetails[1].split(\" \", 2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSimpleDateFormat deadlineDateString \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tDate by \u003d deadlineDateString.parse(deadlineDate[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tDeadline newDeadline \u003d new Deadline(deadlineDetails[0], by);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttaskList.addTask(newDeadline);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Wrong date-time format. Deadline not added.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Please try again and enter the date-time in the format: [dd/MM/yyyy HH:mm]\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"event\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] eventDetails \u003d words[1].split(\" /\", 2);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (eventDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tString[] eventDate \u003d eventDetails[1].split(\" \", 2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSimpleDateFormat eventDateString \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttry {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tDate at \u003d eventDateString.parse(eventDate[1]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tEvent newEvent \u003d new Event(eventDetails[0], at);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttaskList.addTask(newEvent);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t} catch (ParseException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Wrong date-time format. Event not added.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tSystem.out.println(\"Please try again and enter the date-time in the format: [dd/MM/yyyy HH:mm]\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tcase \"todo\":"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tthrow new DukeArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tToDo newTodo \u003d new ToDo(words[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\ttaskList.addTask(newTodo);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tthrow new IllegalArgumentException();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 151,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class DukeArrayIndexOutOfBoundsException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tDukeArrayIndexOutOfBoundsException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tDukeArrayIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate Date at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tEvent(String description, Date at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tTask(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tString getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tvoid markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tisDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"  [\" + this.getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 30
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "class TaskList implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tint taskCount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tTaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskCount \u003d 0;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tint getTaskCount() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn taskCount;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tTask getTask(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn taskList.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tvoid doTask(int i) throws DukeArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (i \u003e taskCount) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tthrow new DukeArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tTask t \u003d taskList.get(i-1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tt.markAsDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.set(i-1, t);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tvoid addTask(Task newTask) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.add(newTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskCount++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\" );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"  \" + newTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (taskCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" task in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else if (taskCount \u003e 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tvoid deleteTask(int i) throws DukeArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (i \u003e taskCount) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tthrow new DukeArrayIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tTask t \u003d taskList.get(i-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskList.remove(i-1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\ttaskCount--;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:\" );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tSystem.out.println(\"  \" + t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (taskCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" task in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else if (taskCount \u003e 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + taskCount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tvoid find(String keyword) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tfor (Task task : taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tString[] words \u003d task.getDescription().split(\" \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tfor (String word : words) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tif (word.equals(keyword)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\ttempList.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t\tbreak;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\t}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tif (tempList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"No items match your search. :-(\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tSystem.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\tfor (int i \u003d 0; i \u003c tempList.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.out.print(i + 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t\tSystem.out.println(\".\" + tempList.get(i));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 79
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t\treturn \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasnovakovic"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasnovakovic": 12
    }
  }
]

[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 13,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Constants.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public static final String FILENAME \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Deadline(String i, String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String toWrite \u003d \"D | \" + boolToInt + \" | \" + this.description + \" | \" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static boolean added;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        fileToList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            addTask(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public static void SaveTask(Task t) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            t.saveInFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(\"Please make file \" + Constants.FILENAME);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void list() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (list.isEmpty()) throw new DukeException(\"☹ OOPS!!! There are no tasks in your list\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                System.out.print(i + 1 + \". \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                System.out.println(list.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void markDone(String[] splitStr) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (splitStr.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Please add the index of the task you have completed\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            n \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (n \u003c 1 || n \u003e list.size()) throw new DukeException(\"☹ OOPS!!! That task is not in your list\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            list.get(n - 1).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            File fileToRead \u003d new File(Constants.FILENAME);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            Scanner scan_file \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String line, toWrite \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            while (scan_file.hasNextLine()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                line \u003d scan_file.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                if (line.contains(list.get(n - 1).description)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    String[] lineSplit \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    lineSplit[1] \u003d \"1\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    line \u003d lineSplit[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    for (int i \u003d 1; i \u003c lineSplit.length; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        line +\u003d \" | \" + lineSplit[i];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                line +\u003d \"\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                toWrite +\u003d line;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            FileOutputStream fileOutputStream \u003d new FileOutputStream(Constants.FILENAME);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Input is not an integer\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void setDeadline(String input, String[] splitStr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String tempD \u003d input.substring(9);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (!tempD.contains(\" /by \")) throw new DukeException(\"☹ OOPS!!! Please add a deadline for the task.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String[] splitD \u003d tempD.split(\" /by \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            Deadline deadline \u003d new Deadline(splitD[0], splitD[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            list.add(deadline);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void setToDo(String input, String[] splitStr) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String tempT \u003d input.substring(5);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            Todo todo \u003d new Todo(tempT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            list.add(todo);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void setEvent(String input, String[] splitStr) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String tempE \u003d input.substring(6);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (!tempE.contains(\" /at \")) throw new DukeException(\"☹ OOPS!!! Please add a timing for this event.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            String[] splitE \u003d tempE.split(\" /at \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            Event event \u003d new Event(splitE[0], splitE[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            list.add(event);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void addTask(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        added \u003d false;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            list();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } else if (splitStr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            markDone(splitStr);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            switch (splitStr[0]) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    setDeadline(input, splitStr);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    setToDo(input, splitStr);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    setEvent(input, splitStr);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            if (added) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                SaveTask(list.get(list.size() -1));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        + list.get(list.size() - 1).toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                System.out.printf(\"Now you have %d task(s) in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    private static void fileToList () {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            File fileToRead \u003d new File(Constants.FILENAME);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            Scanner scan_file \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            while (scan_file.hasNextLine()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                String line \u003d scan_file.nextLine();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                String[] splitStr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                switch (splitStr[0]) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    case \"T\" :"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        list.add(new Todo(splitStr[1], splitStr[2]));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    case \"E\" :"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        list.add(new Event(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    case \"D\" :"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        list.add(new Deadline(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                        list.add(new Task(splitStr[1]));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "            dir.mkdir();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 176,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public DukeException (String message, Throwable throwable) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(message, throwable);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Event (String i, String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String toWrite \u003d \"E | \" + boolToInt + \" | \" + this.description + \" | \" + this.at + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public void saveInFile() throws IOException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String toWrite \u003d this.isDone + \" | \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public Todo(String i, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        int boolToInt \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        String toWrite \u003d \"T | \" + boolToInt + \" | \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amos Chan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amos Chan": 28
    }
  }
]

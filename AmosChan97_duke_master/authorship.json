[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "run {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.base\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "AmosChan97": 18
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 10
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {};"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected static boolean isValidDateTime(String dateTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        SimpleDateFormat dateTimeFormat \u003d  new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            dateTimeFormat.parse(dateTime);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 21
    }
  },
  {
    "path": "src/main/java/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static final String FILENAME \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            this.dateTime \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(\"Please enter date time format correctly: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Deadline(String i, String description, String by) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            this.dateTime \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(\"Please enter date time format correctly: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.dateTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"D | \" + boolToInt + \" | \" + this.description + \" | \" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String toWrite \u003d \"D | \" + boolToInt + \" | \" + this.description + \" | \" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 59
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    String[] splitD;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DeadlineCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String tempD \u003d input.substring(9);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!tempD.contains(\" /by \")) throw new DukeException(\"☹ OOPS!!! Please add a deadline for the task.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.splitD \u003d tempD.split(\" /by \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!isValidDateTime(splitD[1])) throw  new DukeException(\"Please enter correct date time format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Deadline deadline \u003d new Deadline(splitD[0], splitD[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showString(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                deadline.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 22
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int n;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DeleteCommand(String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please add the index of the task you want to remove\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.n \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (this.n \u003c 1 || this.n \u003e tasks.size()) throw new DukeException(\"☹ OOPS!!! That task is not in your list\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showString(\"Got it. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                tasks.get(this.n - 1).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        tasks.remove(this.n -1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showString(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 20
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private int n;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DoneCommand(String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please add the index of the task you have completed\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        n \u003d Integer.parseInt(splitStr[1]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (n \u003c 1 || n \u003e tasks.size()) throw new DukeException(\"☹ OOPS!!! That task is not in your list\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        tasks.get(n - 1).markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        new Duke(Constants.FILENAME).run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 33,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public DukeException (String message, Throwable throwable) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(message, throwable);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected Date dateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            this.dateTime \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(\"Please enter date time format correctly: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Event (String i, String description, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            this.dateTime \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            System.out.println(\"Please enter date time format correctly: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"E | \" + boolToInt + \" | \" + this.description + \" | \" + this.at + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String toWrite \u003d \"E | \" + boolToInt + \" | \" + this.description + \" | \" + this.at + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 54
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class EventCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    String[] splitD;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public EventCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String tempD \u003d input.substring(6);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!tempD.contains(\" /at \")) throw new DukeException(\"☹ OOPS!!! Please add a event for the task.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.splitD \u003d tempD.split(\" /at \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!isValidDateTime(splitD[1])) throw  new DukeException(\"Please enter correct date time format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Event event \u003d new Event(splitD[0], splitD[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showString(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                event.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 22
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String textToFind;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public FindCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! Please input a string to search\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.textToFind \u003d input.substring(5);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (tasks.get(i).contains(textToFind)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                System.out.println(i + 1 + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (!found) ui.showString(\"No items match your search!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 21
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            if (tasks.isEmpty()) throw new DukeException(\"☹ OOPS!!! There are no tasks in your list\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                ui.showString(i + 1 + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Parser{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String[] splitStr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        switch (splitStr[0]) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new DoneCommand(splitStr);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new DeadlineCommand(input, splitStr);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new TodoCommand(input, splitStr);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new EventCommand(input, splitStr);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new DeleteCommand(splitStr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                return new FindCommand(input, splitStr);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 25
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private File fileToRead;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        fileToRead \u003d new File(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Scanner scan_file \u003d new Scanner(fileToRead);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ArrayList\u003cString\u003e textLoaded \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        while (scan_file.hasNextLine()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            String line \u003d scan_file.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            textLoaded.add(line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return textLoaded;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void saveToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        FileOutputStream fileOutputStream \u003d new FileOutputStream(fileToRead);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (Task i : tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            toWrite +\u003d i.toWriteFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        fileOutputStream.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        fileOutputStream.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 34
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public boolean contains(String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return this.description.contains(s);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void saveInFile() throws IOException{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String toWrite \u003d this.isDone + \" | \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e loader) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        for (String line : loader) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            switch (splitStr[0]) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    this.add(new Todo(splitStr[1], splitStr[2]));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    this.add(new Event(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    this.add(new Deadline(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                    throw new DukeException(\"File format incorrect\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 25
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Todo(String i, String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return \"T | \" + boolToInt + \" | \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void saveInFile() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        int boolToInt \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String toWrite \u003d \"T | \" + boolToInt + \" | \" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        FileOutputStream f \u003d new FileOutputStream(Constants.FILENAME, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.write(toWrite.getBytes());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        f.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 34
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private String string;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public TodoCommand(String input, String[] splitStr) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        if (splitStr.length \u003d\u003d 1) throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        this.string \u003d input.substring(5).replaceAll(\"\\n\", \"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        Todo todo \u003d new Todo(this.string);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        storage.saveToFile(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        ui.showString(\"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                todo.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    void showLoadingError() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(\":( OOPS!!! File path not found. Creating directory /data/data.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showString(String string) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmosChan97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmosChan97": 45
    }
  }
]

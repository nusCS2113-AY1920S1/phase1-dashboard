[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 22,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/DatesTimes.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class DatesTimes {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private int min;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public DatesTimes (String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String[] initialSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        List\u003cString\u003e splitDateTime \u003d Arrays.asList(initialSplit);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            String date \u003d splitDateTime.get(0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            String time \u003d splitDateTime.get(1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            String[] dateSplit \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            List\u003cString\u003e dateSection \u003d Arrays.asList(dateSplit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            this.day \u003d Integer.parseInt(dateSection.get(0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            this.month \u003d Integer.parseInt(dateSection.get(1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            this.year \u003d Integer.parseInt(dateSection.get(2));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            String[] timeSplit \u003d time.split(\":\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            List\u003cString\u003e timeSection \u003d Arrays.asList(timeSplit);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            this.hour \u003d Integer.parseInt(timeSection.get(0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            this.min \u003d Integer.parseInt(timeSection.get(1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            if (this.day \u003c 0 || this.day \u003e 31 || this.month \u003c 0 || this.month \u003e 12"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    || this.year \u003c 0 || this.hour \u003c 0 || this.hour \u003e 24 || this.min \u003c 0 || this.min \u003e 59) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The datetime values are invalid. Please insert valid datetime values.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The datetime format is invalid. Valid Deadline datetime format is: dd/mm/yy hh:mm and Event datetime format is: dd/mm/yy hh:mm - dd/mm/yy hh:mm.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return String.format(\"%02d/%02d/%04d %02d:%02d\", this.day, this.month, this.year, this.hour, this.min);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 44
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    protected DatesTimes by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public Deadline(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        by \u003d new DatesTimes(dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"D|\" + super.fileFormat() + \"|\" + this.by.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by.toString() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private static Storage database \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String line \u003d \"\\t____________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public static void printAddedMessage(Task t) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t   \" + t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(String.format(\"\\t Now you have %d tasks in your list.\", list.size()));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public static void printRemovedMessage(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        Task removedTask \u003d list.remove(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t   \" + removedTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(String.format(\"\\t Now you have %d tasks in your list.\", list.size()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public static void printMatchingTasks(String userTask) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        ArrayList\u003cTask\u003e overallList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            if (task.description.contains(userTask)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                overallList.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        if (overallList.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(\"\\t OOPS!!! There are no matching tasks.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            for (int i \u003d 0; i \u003c overallList.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                System.out.println(\"\\t \" + (i + 1) + \".\" + overallList.get(i));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "     * Main class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "     * @param args empty"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        list \u003d database.loadFile();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String logo \u003d \" \\t____        _        \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\tHello from\\n\" + logo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you? \" + \"\\uD83D\\uDE0A\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String input \u003d scanner.next();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String[] tokenizer;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String userTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        // Error messages for empty task description"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String taskEmpty1 \u003d \"\\t \" + sadFace + \"  OOPS!!! The description of a \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String taskEmpty2 \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        // Error messages for no deadline/event input"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String deadlineEmpty1 \u003d \"\\t \" + sadFace + \"  OOPS!!! The \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String deadlineEmpty2 \u003d \" time details must be provided.\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                switch (input) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        String doneIndex \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (doneIndex.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! Please input a task number to be marked done.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        int addIndex \u003d Integer.parseInt(doneIndex);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        //int addIndex \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        list.get(addIndex - 1).setStatus();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The task list is currently empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            System.out.print(\"\\t \" + i + \".\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            System.out.println(list.get(i - 1).toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        userTask \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (userTask.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(taskEmpty1 + input + taskEmpty2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printAddedMessage(new Todo(userTask));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        userTask \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (userTask.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(taskEmpty1 + input + taskEmpty2);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        tokenizer \u003d userTask.split(\" /by \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (tokenizer.length \u003c 2) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(deadlineEmpty1 + input + deadlineEmpty2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printAddedMessage(new Deadline(tokenizer[0], tokenizer[1]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        userTask \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (userTask.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(taskEmpty1 + input + taskEmpty2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        tokenizer \u003d userTask.split(\" /at \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (tokenizer.length \u003c 2) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(deadlineEmpty1 + input + deadlineEmpty2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printAddedMessage(new Event(tokenizer[0], tokenizer[1]));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        String deleteIndex \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (deleteIndex.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! Please input a task number to be deleted.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        int removedIndex \u003d Integer.parseInt(deleteIndex) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printRemovedMessage(removedIndex);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (removedIndex \u003e list.size()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The task is non-existent, please input a valid task number.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        userTask \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        if (userTask.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                            throw new DukeException(taskEmpty1 + input + taskEmpty2);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        printMatchingTasks(userTask);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                System.out.println(\"\\t \" + sadFace + \"  OOPS!!! The task is non-existent, please input a valid task number.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                System.out.println(\"\\t \" + sadFace + \"  OOPS!!! Number Format Exception: Please provide an integer value for the task number.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                printLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            database.editFile(list);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            input \u003d scanner.next();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon! \" + \"\\uD83D\\uDC4B\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 166,
      "Jeffry Lum": 2,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    protected DatesTimes startTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    protected DatesTimes endTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public Event(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String[] date \u003d dateTime.split(\" - \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        List\u003cString\u003e dates \u003d Arrays.asList(date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.startTime \u003d new DatesTimes(dates.get(0));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.endTime \u003d new DatesTimes(dates.get(1));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"E|\" + super.fileFormat() + \"|\" + this.startTime + \" - \" + this.endTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.startTime + \" - \" + this.endTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 27
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            File fileLocation \u003d new File(System.getProperty(\"user.dir\") + \"/data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            File dataFile \u003d new File(fileLocation, this.filename);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            if (!fileLocation.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                fileLocation.mkdir();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                throw new DukeException(\"Database Directory not found. Creating Directory...\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            BufferedReader scanData \u003d new BufferedReader(new FileReader(dataFile));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            String userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            ArrayList\u003cTask\u003e overallList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            while ((userInput \u003d scanData.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                String[] details \u003d userInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                switch (details[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        overallList.add(new Todo(details[2].trim()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        overallList.add(new Deadline(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        overallList.add(new Event(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                    overallList.get(overallList.size() - 1).setDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            return overallList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(\"\\t \" + sadFace + \"  OOPS! IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(\"\\t \" + sadFace + \"  OOPS! IndexOutOfBoundsException: \" + e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public void editFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            File fileLocation \u003d new File(System.getProperty(\"user.dir\") + \"/data\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            File dataFile \u003d new File(fileLocation, this.filename);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            BufferedWriter editData \u003d new BufferedWriter(new FileWriter(dataFile));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            for (Task scanning : list) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                editData.write(scanning.fileFormat());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "                editData.newLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            editData.flush();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            editData.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public void printStatus() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        System.out.println(\"\\t [\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public void setStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        printStatus();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String status \u003d \"0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            status \u003d \"1\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return status + \"|\" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        String status \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "            status \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"[\" + status + \"] \" + this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 45
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"T|\" + super.fileFormat();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Andrew Lau"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Andrew Lau": 15
    }
  }
]

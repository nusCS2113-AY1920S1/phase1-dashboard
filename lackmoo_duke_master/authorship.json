[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DatesTimes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Class to make sense of the date and time details specified by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class DatesTimes {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The day, month and year details as specified by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private int month;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The hour and minute details as specified by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private int hour;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private int min;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor. To split the overall datetime information into the respective date and time information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param dateTime The String that consists of both the date and time details of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @throws DukeException if the datetime values are invalid or the datetime format is invalid."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public DatesTimes (String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] initialSplit \u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        List\u003cString\u003e splitDateTime \u003d Arrays.asList(initialSplit);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            String date \u003d splitDateTime.get(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            String time \u003d splitDateTime.get(1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            String[] dateSplit \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            List\u003cString\u003e dateSection \u003d Arrays.asList(dateSplit);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            this.day \u003d Integer.parseInt(dateSection.get(0));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            this.month \u003d Integer.parseInt(dateSection.get(1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            this.year \u003d Integer.parseInt(dateSection.get(2));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            String[] timeSplit \u003d time.split(\":\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            List\u003cString\u003e timeSection \u003d Arrays.asList(timeSplit);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            this.hour \u003d Integer.parseInt(timeSection.get(0));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            this.min \u003d Integer.parseInt(timeSection.get(1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            if (this.day \u003c 0 || this.day \u003e 31 || this.month \u003c 0 || this.month \u003e 12"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    || this.year \u003c 0 || this.hour \u003c 0 || this.hour \u003e 24 || this.min \u003c 0 || this.min \u003e 59) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The datetime values are invalid. Please insert valid datetime values.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The datetime format is invalid. Valid Deadline datetime format is: dd/mm/yy hh:mm and Event datetime format is: dd/mm/yy hh:mm - dd/mm/yy hh:mm.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output of the date and time information to be printed on the command line when Duke is run."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the date and time information of the deadline/event in the required format for the output on the command line."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return String.format(\"%02d/%02d/%04d %02d:%02d\", this.day, this.month, this.year, this.hour, this.min);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 64
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Represents a deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Represents the date and time information of the deadline."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected DatesTimes by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param description the description of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param dateTime the date and time details of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @throws DukeException if the datetime format and values are invalid."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Deadline(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        by \u003d new DatesTimes(dateTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output for the data to be stored in the datafile."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the deadline in the required format for the datafile."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"D|\" + super.fileFormat() + \"|\" + this.by.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output to be printed on the command line when Duke is run."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the deadline in the required format for the output on the command line."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by.toString() + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * The main class of the Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Main class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param args empty"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Ui.initialize();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] userCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] tokenizer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        // Error messages for empty task description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String taskEmpty1 \u003d \"\\t \" + sadFace + \"  OOPS!!! The description of a \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String taskEmpty2 \u003d \" cannot be empty.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        // Error messages for no deadline/event input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String deadlineEmpty1 \u003d \"\\t \" + sadFace + \"  OOPS!!! The \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String deadlineEmpty2 \u003d \" time details must be provided.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            userCommand \u003d parser.readInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            if (!userCommand[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    switch (userCommand[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            int doneIndex \u003d Integer.parseInt(userCommand[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.done(doneIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printStatus(list.userList, doneIndex);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"list\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            if (list.userList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                                throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The task list is currently empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printList(list.userList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Todo todoTask \u003d new Todo(userCommand[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.add(todoTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            tokenizer \u003d userCommand[1].split(\" /by \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            if (tokenizer.length \u003c 2) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                                throw new DukeException(deadlineEmpty1 + \"deadline\" + deadlineEmpty2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.add(new Deadline(tokenizer[0], tokenizer[1]));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            tokenizer \u003d userCommand[1].split(\" /at \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            if (tokenizer.length \u003c 2) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                                throw new DukeException(deadlineEmpty1 + \"event\" + deadlineEmpty2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.add(new Event(tokenizer[0], tokenizer[1]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            int removedIndex \u003d Integer.parseInt(userCommand[1]) - 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printRemovedMessage(list.userList, removedIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.delete(removedIndex);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            ArrayList\u003cTask\u003e foundList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            list.find(foundList, userCommand[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            Ui.printMatchingTasks(foundList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printDukeException(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printNonExistentTask(userCommand[0]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printIntegerError();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                Ui.printLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                Ui.printBye();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 90,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * The customised exception class that extends from the Exception class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param errorMessage The error message that is specified that is to be printed as output to notify the user of the error."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Represents an event."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Represents the start time of an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected DatesTimes startTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Represents the end time of an event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected DatesTimes endTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param description the description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param dateTime the start and end date and time information of the event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @throws DukeException if the datetime format and values are invalid."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Event(String description, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] date \u003d dateTime.split(\" - \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        List\u003cString\u003e dates \u003d Arrays.asList(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.startTime \u003d new DatesTimes(dates.get(0));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.endTime \u003d new DatesTimes(dates.get(1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output for the data to be stored in the datafile."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the event in the required format for the datafile."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"E|\" + super.fileFormat() + \"|\" + this.startTime + \" - \" + this.endTime;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output to be printed on the command line when Duke is run."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the event in the required format for the output on the command line."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.startTime + \" - \" + this.endTime + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 51
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Process the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Scanner to scan for the user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Stores the scanned user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Reads the user input and make sense of it."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the split user input with the delimiter \" \"."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String[] readInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String input \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return input.split(\" \", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 29
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Stores and loads the datebase file containing the user input from previous iterations of the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The name of the file to be loaded."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param filename The name of the file to be loaded."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Storage(String filename) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * To load the file containing the list of tasks in the database."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return The file stored in the database to allow the user to continue editing the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            File fileLocation \u003d new File(System.getProperty(\"user.dir\") + \"/data\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            File dataFile \u003d new File(fileLocation, this.filename);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            if (!fileLocation.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                fileLocation.mkdir();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                //throw new DukeException(\"Database Directory not found. Creating Directory...\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            BufferedReader scanData \u003d new BufferedReader(new FileReader(dataFile));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            String userInput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            ArrayList\u003cTask\u003e overallList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            while ((userInput \u003d scanData.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                String[] details \u003d userInput.split(\"\\\\|\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                switch (details[0]) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        overallList.add(new Todo(details[2].trim()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        overallList.add(new Deadline(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        overallList.add(new Event(details[2].trim(), details[3].trim()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                if (details[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                    overallList.get(overallList.size() - 1).setStatus();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            return overallList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(\"\\t \" + sadFace + \"  OOPS! IOException: \" + e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(\"\\t \" + sadFace + \"  OOPS! IndexOutOfBoundsException: \" + e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Appends to the overall list with new tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param list The overall list in the database containing the user\u0027s previous tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void editFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            File fileLocation \u003d new File(System.getProperty(\"user.dir\") + \"/data\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            File dataFile \u003d new File(fileLocation, this.filename);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            BufferedWriter editData \u003d new BufferedWriter(new FileWriter(dataFile));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            for (Task scanning : list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                editData.write(scanning.fileFormat());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                editData.newLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            editData.flush();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            editData.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Boolean to specify if the task has been accomplished or not."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param description The description fo the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Set the status of a task to done by setting isDone to true."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void setStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output for the data to be stored in the datafile."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the task in the required format for the datafile."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String status \u003d \"0\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            status \u003d \"1\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return status + \"|\" + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output to be printed on the command line when Duke is run."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the task in the required format for the output on the command line."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String status \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            status \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"[\" + status + \"] \" + this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Represents a list of tasks/todos/events/deadlines in the overall list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The overall list of tasks to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    protected ArrayList\u003cTask\u003e userList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * The database file containing the last stored user input data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private static Storage database \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Representation of a sadface emoji in unicode."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private static String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Loads the database file containing the last stored user input data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        this.userList \u003d database.loadFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * To remove a task as specified by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param deleteIndex The index of the task to be removed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void delete(int deleteIndex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        userList.remove(deleteIndex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        database.editFile(userList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * To mark a task that is specified by the user as done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param doneIndex The index of the task to be marked as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @throws DukeException if the index of the task provided exceeds/is less than the total number of tasks available."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void done(int doneIndex) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        if (doneIndex \u003e userList.size()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The task is non-existent, please input a valid task number.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        userList.get(doneIndex - 1).setStatus();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        database.editFile(userList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Find the tasks that match the keyword as specified by the user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param foundList The list that contains the tasks that match the keyword as specified by the user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param findWord The word that the user wishes to find in the overall list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void find(ArrayList\u003cTask\u003e foundList, String findWord) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        for (Task task : userList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            if (task.description.contains(findWord)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                foundList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Adds a new task to the overall list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param addedTask The task to be added into the overall list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public void add(Task addedTask) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        userList.add(addedTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        database.editFile(userList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Ui.printAddedMessage(addedTask, userList.size());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 77
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Represents a to-do task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param description the description of the to-do task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output for the data to be stored in the datafile."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the to-do task in the required format for the datafile."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String fileFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"T|\" + super.fileFormat();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Formats the output to be printed on the command line when Duke is run."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @return the status and the description of the to-do task in the required format for the output on the command line."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 33
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " * Prints messages to the command line interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Representation of a sadface emoji in unicode."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    private static String sadFace \u003d \"\\u2639\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints a horizontal line."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String line \u003d \"\\t____________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Printed to the main screen a welcome message when the user first opens the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void initialize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String logo \u003d \" \\t____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\tHello from\\n\" + logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you? \" + \"\\uD83D\\uDE0A\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints a goodbye message on the screen when the user wishes to terminate the program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon! \" + \"\\uD83D\\uDC4B\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints a message to inform the user that a task has been registered and added to the database of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param addedTask The task to be added as specified by the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param userListSize The size of the current list containing all the tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printAddedMessage(Task addedTask, int userListSize) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t   \" + addedTask.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(String.format(\"\\t Now you have %d tasks in your list.\", userListSize));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints a message to inform the user that a task has been removed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param overallList The overall list containing all the tasks in the database."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param removedIndex The index of the task that the user wishes to remove."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @throws DukeException if the task number that the user enters is non-existent."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printRemovedMessage(ArrayList\u003cTask\u003e overallList, int removedIndex) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        if (removedIndex \u003e\u003d overallList.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            throw new DukeException(\"\\t \" + sadFace + \"  OOPS!!! The task is non-existent, please input a valid task number.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t   \" + overallList.get(removedIndex).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(String.format(\"\\t Now you have %d tasks in your list.\", overallList.size() - 1));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * prints the tasks that match the keyword that the user specifies."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param overallList The overall list containing all the tasks in the database."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printMatchingTasks(ArrayList\u003cTask\u003e overallList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        if (overallList.isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(\"\\t \" + sadFace + \"  OOPS!!! There are no matching tasks.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            for (int i \u003d 0; i \u003c overallList.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "                System.out.println(\"\\t \" + (i + 1) + \".\" + overallList.get(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints the current overall list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param overallList the overall list containing all the tasks in the database."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e overallList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d overallList.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.print(\"\\t \" + i + \".\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "            System.out.println(overallList.get(i - 1).toString());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints the message to inform the user that the specified task has been marked as done."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param overallList the overall list containing all the tasks in the database."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param doneIndex the index of the task which the user wishes to specify as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printStatus(ArrayList\u003cTask\u003e overallList, int doneIndex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t \" + overallList.get(doneIndex - 1).toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints the error message that the description of a task cannot be empty."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param userCommand The type of task that the user specified."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printNonExistentTask(String userCommand) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(String.format(\"\\t \" + sadFace + \"  OOPS!!! The description of %s cannot be empty.\", userCommand));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints the error message that the task number provided must be an integer."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printIntegerError() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(\"\\t \" + sadFace + \"  OOPS!!! Please provide an integer value for the task number.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * Prints the error message captured by the exception."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     * @param e the exception captured."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    public static void printDukeException(Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 142
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void fileFormat() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Deadline(\"return book\", \"04/10/2019 17:00\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"D|0|return book|04/10/2019 17:00\", t.fileFormat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"D|1|return book|04/10/2019 17:00\", t.fileFormat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testToString() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Deadline(\"return book\", \"04/10/2019 17:00\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: 04/10/2019 17:00)\", t.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[D][✓] return book (by: 04/10/2019 17:00)\", t.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 22
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void fileFormat() throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Event(\"project meeting\", \"04/10/2019 17:00 - 04/10/2019 19:00\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"E|0|project meeting|04/10/2019 17:00 - 04/10/2019 19:00\", t.fileFormat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"E|1|project meeting|04/10/2019 17:00 - 04/10/2019 19:00\", t.fileFormat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testToString() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Event(\"project meeting\", \"04/10/2019 17:00 - 04/10/2019 19:00\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[E][✘] project meeting (at: 04/10/2019 17:00 - 04/10/2019 19:00)\", t.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[E][✓] project meeting (at: 04/10/2019 17:00 - 04/10/2019 19:00)\", t.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 22
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testReadInputTodo() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        parser.in \u003d new Scanner(\"todo return book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] userCommand \u003d parser.readInput();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertTrue(userCommand[0].equals(\"todo\") \u0026\u0026 userCommand[1].equals(\"return book\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testReadInputDeadline() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        parser.in \u003d new Scanner(\"deadline submit assignment 05/09/2019 23:59\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] userCommand \u003d parser.readInput();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertTrue(userCommand[0].equals(\"deadline\") \u0026\u0026 userCommand[1].equals(\"submit assignment 05/09/2019 23:59\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testReadInputEvent() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        parser.in \u003d new Scanner(\"event attend birthday party 04/10/2019 19:00 - 04/10/2019 22:00\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        String[] userCommand \u003d parser.readInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertTrue(userCommand[0].equals(\"event\") \u0026\u0026 userCommand[1].equals(\"attend birthday party 04/10/2019 19:00 - 04/10/2019 22:00\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 32
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Task(\"finish assignment\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[✘] finish assignment\", t.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[✓] finish assignment\", t.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void fileFormat() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Task(\"go shopping\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"0|go shopping\", t.fileFormat());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"1|go shopping\", t.fileFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void fileFormat() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Todo(\"attend lecture\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"T|0|attend lecture\", t.fileFormat());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"T|1|attend lecture\", t.fileFormat());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lackmoo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        Task t \u003d new Todo(\"attend lecture\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[T][✘] attend lecture\", t.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        t.setStatus();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "        assertEquals(\"[T][✓] attend lecture\", t.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lackmoo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lackmoo": 23
    }
  }
]

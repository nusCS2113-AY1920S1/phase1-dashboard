[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    protected Date dateNow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            dateNow \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"Task does not have dd/MM/yyyy HHmm date-time format!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[D]\" + this.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return dateNow.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 20,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import static java.nio.CharBuffer.wrap;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    //protected static List\u003cString\u003e dataList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static List\u003cTask\u003e data \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    protected static List\u003cString\u003e savedData \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String logo \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "              \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    private static String input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "     * Program starts here."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(wrap(\"What can I do for you?\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        readState();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        handleCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void handleCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        //level_1(sc);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        //level_2(sc);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        processReq(sc);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void level_1(Scanner sc) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border + \"\\n\" + wrap(\"Bye. Hope to see you again soon!\") + \"\\n\" + border + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border + \"\\n\" + wrap(input) + \"\\n\" + border + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void level_2(Scanner sc) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border + \"\\n\" + wrap(\"Bye. Hope to see you again soon!\") + \"\\n\" + border + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                int idx \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                if (dataList.size() \u003e 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (String task : dataList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.print(idx++ + \". \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.print(task + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Empty List!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                dataList.add(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border + \"\\nadded: \" + input + \"\\n\" + border);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void processReq(Scanner sc) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(border);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                boolean isInsideData;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(wrap(\"\\nBye. Hope to see you again soon!\\n\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    int idx \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (data.size() \u003e 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                        for (Task task : data) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            System.out.print(\"    \" + idx++ + \".\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                            String before \u003d task.toString().substring(0, 3);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                            String after \u003d task.toString().substring(3);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.print(before);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.print(\"[\" + task.getStatusIcon() + \"] \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                            System.out.print(after + \"\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Empty List!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    input \u003d input.substring(5);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (data.size() \u003e 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        for (int i \u003d 0; i \u003c data.size(); ++i) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            if (data.get(i).toString().contains(input)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                int temp \u003d i + 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.print(temp + \".\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.print(data.get(i).toString().substring(0,3));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.print(\"[\" + data.get(i).getStatusIcon() + \"] \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.println(data.get(i).toString().substring(3));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        System.out.println(\"Empty List! Nothing to find.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    input \u003d input.substring(5);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                        int num \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                        --num;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        isInsideData \u003d false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                        for (int i \u003d 0; i \u003c data.size(); ++i) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                            if (i \u003d\u003d num) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                                if (data.get(i).isDone) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                    System.out.println(data.get(i).toString().substring(3) + \" is already done!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                                    isInsideData \u003d true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                                    continue;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                                data.get(i).markAsDone();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                savedData.set(i, savedData.get(i).replace(\"✗\", \"✓\"));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                saveState();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                                System.out.println(\"    [✓] \" + data.get(i).toString().substring(3));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                                isInsideData \u003d true;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (!isInsideData) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            System.out.println(\"Task number is out of bounds! [Done]\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        throw new DukeException(\"Not a valid Task Number!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        //System.out.println(\"Error: Not a valid Task Number!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                } else if (input.length() \u003e 6 \u0026\u0026 input.substring(0,6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    input \u003d input.substring(7);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        int num \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        --num;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        for (int i \u003d 0; i \u003c data.size(); ++i) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            if (i \u003d\u003d num) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.print(\"  \" + data.get(i).toString().substring(0, 3));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.print(\"[\" + data.get(i).getStatusIcon() + \"] \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.println(data.get(i).toString().substring(3));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                data.remove(i);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                savedData.remove(i);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                saveState();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                System.out.println(\"Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        throw new DukeException(\"Task number is out of bounds or invalid! [Delete]\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (commandType(input) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        runTodo(input, 0);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else if (commandType(input) \u003d\u003d 2) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        runDeadline(input, 0);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (commandType(input) \u003d\u003d 3) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        runEvent(input, 0);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(border);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void runTodo(String input, int state) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new ToDo(input);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        writeData(tempTask, null);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"    [T][\" + tempTask.getStatusIcon() + \"] \" + input);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void runDeadline(String input, int state) throws DukeException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(9);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        int startOfBy \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt1 \u003d input.substring(0, startOfBy - 1);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tt1);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt2 \u003d input.substring(startOfBy + 4);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tt2);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new Deadline(tt1, tt2);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tempTask.getDateTime());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        writeData(tempTask, tt2);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"    [D][\" + tempTask.getStatusIcon() + \"] \" + tt1 + \" (by: \" + tt2 + \")\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void runEvent(String input, int state) throws DukeException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        input \u003d input.substring(6);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //StringTokenizer st1 \u003d new StringTokenizer(input, \"/at \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        int startOfAt \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt1 \u003d input.substring(0, startOfAt - 1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tt1);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt2 \u003d input.substring(startOfAt + 4);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tt2);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new Event(tt1, tt2);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        //System.out.println(tempTask.getDateTime());"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        writeData(tempTask, tt2);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"    [E][\" + tempTask.getStatusIcon() + \"] \" + tt1 + \" (at: \" + tt2 + \")\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"Now you have \" + data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static int commandType(String str) throws DukeException{"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (str.length() \u003e\u003d 4 \u0026\u0026 str.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (str.length() \u003d\u003d 4)"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (str.length() \u003e\u003d5 \u0026\u0026 str.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (str.length() \u003d\u003d 5)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            return 3;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (str.length() \u003e\u003d 8 \u0026\u0026 str.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (str.length() \u003d\u003d 8)"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return 2;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( || Unknown COMMAND TYPE\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void writeData(Task task, String extra) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String st1, st2, st3, st4 \u003d null;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        st1 \u003d task.toString().substring(1, 2);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (st1.equals(\"D\") || st1.equals(\"E\")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            st4 \u003d extra;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        st2 \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        st3 \u003d task.toString().substring(3);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (extra !\u003d null \u0026\u0026 st3.contains(extra)) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            st3 \u003d st3.replace(extra, \"\");"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            st3 \u003d st3.substring(0, st3.length() - 7);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String finalStr \u003d st1 + \"|\" + st2 + \"|\" + st3;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (st4 !\u003d null) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            finalStr +\u003d \"|\" + st4;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        savedData.add(finalStr);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        saveState();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void saveState() {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            PrintWriter out \u003d new PrintWriter(\"./data/saved_data.txt\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (String str : savedData) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                out.println(str);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static void readState() throws DukeException {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(\"./data/saved_data.txt\"));"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            String line \u003d \"\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                StringTokenizer stringTokenizer \u003d new StringTokenizer(line, \"|\");"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String finalOutput \u003d \"\";"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String currStr;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                Boolean isChecked \u003d false;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                int cmdState \u003d 0;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                while (stringTokenizer.hasMoreTokens()) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    currStr \u003d stringTokenizer.nextToken();"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        switch (currStr) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"T\":"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d \"todo \";"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 1;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"D\":"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d \"deadline \";"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 2;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"E\":"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d \"event \";"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 3;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 2) {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (currStr.equals(\"✓\")) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            isChecked \u003d true;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 3) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        finalOutput +\u003d currStr;"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 4) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        switch (cmdState) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case 2:"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput +\u003d \" /by \" + currStr;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case 3:"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput +\u003d \" /at \" + currStr;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                switch (cmdState) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 1:"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runTodo(finalOutput, 1);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runTodo(finalOutput, 2);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 2:"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runDeadline(finalOutput, 1);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runDeadline(finalOutput, 2);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 3:"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runEvent(finalOutput, 1);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            runEvent(finalOutput, 2);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"No saved files detected.\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            System.out.println(\"BALLS\");"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 250,
      "-": 120
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    protected Date dateNow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            dateNow \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"Task does not have dd/MM/yyyy HHmm date-time format!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"[E]\" + this.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return dateNow.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 19,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    //\"\\u2713\" : \"\\u2718\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 4,
      "-": 18
    }
  }
]

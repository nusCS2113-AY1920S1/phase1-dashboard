[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    mainClassName \u003d \"Duke.Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public AddCommand(CmdType cmdType, String str) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d str;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (cmdType \u003d\u003d CmdType.TODO) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (input.length() \u003d\u003d 4)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            type \u003d cmdType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (cmdType \u003d\u003d CmdType.EVENT) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (input.length() \u003d\u003d 5)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            type \u003d cmdType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (cmdType \u003d\u003d CmdType.DEADLINE) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (input.length() \u003d\u003d 8)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            type \u003d cmdType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showMessage(Parser.runTodo(tasks.data, input, 0));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                storage.write(tasks.data);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showMessage(Parser.runDeadline(tasks.data, input, 0));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                storage.write(tasks.data);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showMessage(Parser.runEvent(tasks.data, input, 0));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                storage.write(tasks.data);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"     [Unknown COMMAND TYPE]\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 47
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public CmdType type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public enum CmdType {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        EXIT, LIST, FIND, DONE, DELETE, TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return this.type \u003d\u003d CmdType.EXIT;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 21
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public DeleteCommand (String str) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        type \u003d CmdType.DELETE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d str;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(7);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            int num \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            --num;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            boolean isWithinData \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.data.size(); ++i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (i \u003d\u003d num) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    String stringBuilder \u003d \"Noted. I\u0027ve removed this task: \" + \"\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            \"  \" + tasks.data.get(i).toString().substring(0, 3) +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            \"[\" + tasks.data.get(i).getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            tasks.data.get(i).toString().substring(3);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    tasks.data.remove(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    storage.write(tasks.data);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    ui.showMessage(stringBuilder);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    ui.showMessage(\"Now you have \" + tasks.data.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    isWithinData \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (!isWithinData) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                throw new DukeException(\"Task number is out of bounds [Delete]\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"Task number is invalid! [Delete]\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 42
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public DoneCommand(String str) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        type \u003d CmdType.DONE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d str;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            int num \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            --num;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            boolean isInsideData \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.data.size(); ++i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (i \u003d\u003d num) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (tasks.data.get(i).isDone()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        ui.showMessage(tasks.data.get(i).toString().substring(3) + \" is already done!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        isInsideData \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    tasks.data.get(i).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    storage.write(tasks.data);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    ui.showMessage(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    ui.showMessage(\"    [✓] \" + tasks.data.get(i).toString().substring(3));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    isInsideData \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (!isInsideData) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showError(\"Task number is out of bounds! [Done]\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"Not a valid Task Number!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 43
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        type \u003d CmdType.EXIT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        ui.showMessage(\"\\nBye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 16
    }
  },
  {
    "path": "src/main/java/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public FindCommand (String str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        type \u003d CmdType.FIND;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d str;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (tasks.data.size() \u003e 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            boolean isInside \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            boolean isStarting \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.data.size(); ++i) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (tasks.data.get(i).toString().contains(input)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (isStarting) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        isStarting \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        ui.showMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    int temp \u003d i + 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    String stringBuilder \u003d temp + \".\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            tasks.data.get(i).toString().substring(0, 3) +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            \"[\" + tasks.data.get(i).getStatusIcon() + \"] \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            tasks.data.get(i).toString().substring(3);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    ui.showMessage(stringBuilder);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    isInside \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            if (!isInside) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showError(\"Keyword not in List\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            ui.showError(\"Empty List!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 41
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        type \u003d CmdType.LIST;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (tasks.data.size() \u003e 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            ui.showMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (Task task : tasks.data) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                stringBuilder.append(\"    \").append(idx++).append(\".\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String before \u003d task.toString().substring(0, 3);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String after \u003d task.toString().substring(3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                stringBuilder.append(before);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                stringBuilder.append(\"[\").append(task.getStatusIcon()).append(\"] \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                stringBuilder.append(after);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showMessage(stringBuilder.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            ui.showError(\"Empty List!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 32
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "     * Program starts here."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        new Duke(\"./data/saved_data.txt\").run();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 44,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 7
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class Parser{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e 6 \u0026\u0026 input.substring(0,6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new AddCommand(Command.CmdType.TODO, input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new AddCommand(Command.CmdType.EVENT, input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            return new AddCommand(Command.CmdType.DEADLINE, input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( [Unknown COMMAND TYPE]\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static String runTodo(ArrayList\u003cTask\u003e data, String input, int state) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new ToDo(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Got it. I\u0027ve added this task: \").append(\"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"    [T][\").append(tempTask.getStatusIcon()).append(\"] \").append(input).append(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Now you have \").append(data.size()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static String runDeadline(ArrayList\u003cTask\u003e data, String input, int state) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(9);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        int startOfBy \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt1 \u003d input.substring(0, startOfBy - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt2 \u003d input.substring(startOfBy + 4);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new Deadline(tt1, tt2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Got it. I\u0027ve added this task: \").append(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"    [D][\").append(tempTask.getStatusIcon()).append(\"] \").append(tt1).append(\" (by: \").append(tt2).append(\")\").append(\"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Now you have \").append(data.size()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static String runEvent(ArrayList\u003cTask\u003e data, String input, int state) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        input \u003d input.substring(6);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        int startOfAt \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt1 \u003d input.substring(0, startOfAt - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String tt2 \u003d input.substring(startOfAt + 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Task tempTask \u003d new Event(tt1, tt2);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 2)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            tempTask.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data.add(tempTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        if (state \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Got it. I\u0027ve added this task: \").append(\"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"    [E][\").append(tempTask.getStatusIcon()).append(\"] \").append(tt1).append(\" (at: \").append(tt2).append(\")\").append(\"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            stringBuilder.append(\"Now you have \").append(data.size()).append(\" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 82
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Storage (String filepath) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                StringTokenizer stringTokenizer \u003d new StringTokenizer(line, \"|\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                StringBuilder finalOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String currStr;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                boolean isChecked \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                int cmdState \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                while (stringTokenizer.hasMoreTokens()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    currStr \u003d stringTokenizer.nextToken();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        switch (currStr) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d new StringBuilder(\"todo \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"D\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d new StringBuilder(\"deadline \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case \"E\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput \u003d new StringBuilder(\"event \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                cmdState \u003d 3;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (currStr.equals(\"✓\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            isChecked \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 3) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        finalOutput.append(currStr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    } else if (count \u003d\u003d 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        switch (cmdState) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case 2:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput.append(\" /by \").append(currStr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            case 3:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                finalOutput.append(\" /at \").append(currStr);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                switch (cmdState) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 1:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runTodo(data, finalOutput.toString(), 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runTodo(data, finalOutput.toString(), 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 2:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runDeadline(data, finalOutput.toString(), 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runDeadline(data, finalOutput.toString(), 2);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    case 3:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        if (!isChecked)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runEvent(data, finalOutput.toString(), 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        else"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                            Parser.runEvent(data, finalOutput.toString(), 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"File not found!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"Failed to close reader\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void write(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            PrintWriter out \u003d new PrintWriter(\"./data/saved_data.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                String st1, st2, st3, st4 \u003d null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                st1 \u003d task.toString().substring(1, 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (st1.equals(\"D\") || st1.equals(\"E\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    st4 \u003d task.getExtra();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                st2 \u003d task.getStatusIcon();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                st3 \u003d task.toString().substring(3);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (st4 !\u003d null \u0026\u0026 st3.contains(st4)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    st3 \u003d st3.replace(st4, \"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    st3 \u003d st3.substring(0, st3.length() - 7);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                str.append(st1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                str.append(\"|\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                str.append(st2);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                str.append(\"|\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                str.append(st3);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                if (st4 !\u003d null) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    str.append(\"|\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                    str.append(st4);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                out.println(str.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            throw new DukeException(\"No file found\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 125
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import Duke.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public ArrayList\u003cTask\u003e data;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        data \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 19
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private Date dateNow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            dateNow \u003d sdf.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            //throw new DukeException(\"Tasks.Task does not have dd/MM/yyyy HHmm date-time format!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return \"[D]\" + this.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return dateNow.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 39
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private Date dateNow;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        sdf.setLenient(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            dateNow \u003d sdf.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "            //throw new DukeException(\"Tasks.Task does not have dd/MM/yyyy HHmm date-time format!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return \"[E]\" + this.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return dateNow.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 38
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    //\"\\u2713\" : \"\\u2718\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String getExtra() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 33
    }
  },
  {
    "path": "src/main/java/Duke/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return \"[T]\" + this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 13
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    private static String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(\"No saved files detected.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public void showMessage(String m) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(m);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 45
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "        System.out.println(\"Hello World!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RusdiHaizim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RusdiHaizim": 5
    }
  }
]

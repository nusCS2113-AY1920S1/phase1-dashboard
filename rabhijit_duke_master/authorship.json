[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 28,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.date \u003d stringToDate(by);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.date \u003d stringToDate(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return super.toString() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Scanner fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            String[] line \u003d fileScanner.nextLine().split(\"`\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            boolean isDone \u003d (Integer.parseInt(line[2]) \u003d\u003d 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            if (line[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Todo newTodo \u003d new Todo(line[1], isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                items.add(newTodo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (line[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(line[1], line[3], isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                items.add(newDeadline);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            else if (line[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                Event newEvent \u003d new Event(line[1], line[3], isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                items.add(newEvent);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String input \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (input.equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Task thisTask \u003d items.get(i);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        String line \u003d thisTask.getType() + \"`\" + thisTask.getDescription() + \"`\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        line +\u003d (thisTask.getDoneStatus() \u003d\u003d true ? 1 : 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        if (thisTask.getType() \u003d\u003d \u0027D\u0027 || thisTask.getType() \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            line +\u003d \"`\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            line +\u003d thisTask.getDateToSave();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        fileWriter.write(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        fileWriter.newLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    fileWriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (input.equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Task thisTask \u003d items.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t\" + (i+1) + \". \" + thisTask.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"done\") \u0026\u0026 words.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the task number you want to mark as done.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words[1].matches(\"^\\\\d*$\"))) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"That\u0027s an invalid task number!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (taskNumber + 1 \u003e items.size()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"We don\u0027t have that many tasks!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Task thisTask \u003d items.get(taskNumber);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    thisTask.markAsDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + thisTask.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"delete\") \u0026\u0026 words.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the task number you want to delete.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words[1].matches(\"^\\\\d*$\"))) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"That\u0027s an invalid task number!\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (taskNumber + 1 \u003e items.size()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"We don\u0027t have that many tasks!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Task thisTask \u003d items.get(taskNumber);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + thisTask.toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    items.remove(taskNumber);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Come on, man, give me something to find.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String query \u003d \"\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int i \u003d 1; i \u003c words.length; i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        query +\u003d words[i];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        if (i !\u003d words.length - 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            query +\u003d \" \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    query \u003d query.toLowerCase();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int j \u003d 0; j \u003c items.size(); j++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Task thisTask \u003d items.get(j);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        if (thisTask.getDescription().toLowerCase().contains(query)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                            System.out.println(\"\\t\" + (j+1) + \". \" + thisTask.toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"todo \", \"\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Todo newTodo \u003d new Todo(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    items.add(newTodo);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + newTodo.toString());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int splitIndex \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (splitIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the deadline date/time using the \u0027/by\u0027 command.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    else if (splitIndex \u003d\u003d 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String description \u003d input.substring(0, splitIndex - 1);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (description.isEmpty()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String by \u003d input.substring(splitIndex + 1);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    by \u003d by.replaceFirst(\"by \", \"\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (by.equals(\"by\")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        items.add(newDeadline);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t  \" + newDeadline.toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    catch (ParseException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please enter your deadline date in the format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int splitIndex \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (splitIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the event date using the \u0027/at\u0027 command.\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    else if (splitIndex \u003d\u003d 0) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String description \u003d input.substring(0, splitIndex - 1);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (description.isEmpty()) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String at \u003d input.substring(splitIndex + 1);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    at \u003d at.replaceFirst(\"at \", \"\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (at.equals(\"at\")) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The event date cannot be empty.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        items.add(newEvent);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t  \" + newEvent.toString());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    catch (ParseException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please enter your event date in the format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            catch(DukeException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                e.showError();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 218,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String oops \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String errorMsg;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t\" + oops + errorMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.date \u003d stringToDate(at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.date \u003d stringToDate(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return super.toString() + \" (at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected boolean changed;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat dayFormat \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        int day \u003d Integer.parseInt(dayFormat.format(date));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String suffix \u003d day \u003d\u003d 1 ? \"st\" : (day \u003d\u003d 2 ? \"nd\" : (day \u003d\u003d 3 ? \"rd\" : \"th\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d (new SimpleDateFormat(\"EEEEE, \")).format(date) + (dayFormat.format(date)) + suffix + \" of \" + (new SimpleDateFormat(\"MMMMM yyyy, hh:mm aaa\")).format(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDateToSave() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        String stringDate \u003d format.format(date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return stringDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"[\" + getType() + \"][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Date stringToDate(String stringDate) throws ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Date dateValue \u003d formatter.parse(stringDate);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return dateValue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 67
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 11
    }
  }
]

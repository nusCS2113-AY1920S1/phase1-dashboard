[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 28,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                if (input.equals(\"bye\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (input.equals(\"list\") \u0026\u0026 words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        Task thisTask \u003d items.get(i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        System.out.println(\"\\t\" + (i+1) + \". \" + thisTask.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"done\") \u0026\u0026 words.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (words.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the task number you want to mark as done.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words[1].matches(\"^\\\\d*$\"))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"That\u0027s an invalid task number!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(words[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (taskNumber + 1 \u003e items.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"We don\u0027t have that many tasks!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Task thisTask \u003d items.get(taskNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    thisTask.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + thisTask.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"todo \", \"\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Todo newTodo \u003d new Todo(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    items.add(newTodo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + newTodo.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int splitIndex \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (splitIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the deadline date/time using the \u0027/by\u0027 command.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String description \u003d input.substring(0, splitIndex);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (description.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String by \u003d input.substring(splitIndex + 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    by \u003d by.replaceFirst(\"by \", \"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (by.equals(\"by\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    items.add(newDeadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + newDeadline.toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else if (words[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (!(words.length \u003e 1)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    input \u003d input.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    int splitIndex \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (splitIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"Please specify the event date using the \u0027/at\u0027 command.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String description \u003d input.substring(0, splitIndex);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (description.isEmpty()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    String at \u003d input.substring(splitIndex + 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    at \u003d at.replaceFirst(\"at \", \"\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    if (at.equals(\"at\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                        throw new DukeException(\"The event date cannot be empty.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    items.add(newEvent);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t  \" + newEvent.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\tNow you have \" + items.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            catch(DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "                e.showError();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 121,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String oops \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String errorMsg;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.errorMsg \u003d errorMsg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void showError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t\" + oops + errorMsg);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rabhijit"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        return \"[\" + getType() + \"][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rabhijit"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rabhijit": 6
    }
  }
]

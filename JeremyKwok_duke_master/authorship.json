[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "test {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "JeremyKwok": 28
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String[] c;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public AddCommand (String[] c) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.c \u003d c;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        switch(c[0]) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                list.addTask(new ToDo(c[1]));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                list.addTask(new Event(c[1], new DukeDate(c[2], c[3], c[4], c[5])));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                list.addTask(new Deadline(c[1], new DukeDate(c[2], c[3], c[4], c[5])));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ui.printLast(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        storage.saveData(list);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 31
    }
  },
  {
    "path": "src/main/java/Command.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    abstract public void execute (TaskList list, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    abstract public boolean isExit();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 6
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected DukeDate by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Deadline(String description, DukeDate by) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.outputDate() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 14
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String[] c;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DeleteCommand(String[] c) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.c \u003d c;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            int num \u003d Integer.parseInt(c[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.printMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            num -\u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (num \u003c 0 || num \u003e\u003d list.getSize()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeException(\"The specified index is not avaliable.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.printMessage(\"  \" + list.at(num).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            list.deleteTask(num);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.showTaskListSize(list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            storage.saveData(list);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The number specified is not in the right format.\", e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 45
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String[] c;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DoneCommand (String[] c) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.c \u003d c;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            int num \u003d Integer.parseInt(c[1]);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.printMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            num -\u003d 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (num \u003c 0 || num \u003e\u003d list.getSize()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeException(\"The specified index is not avaliable.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            list.at(num).markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.printMessage(\"  \" + list.at(num).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.showTaskListSize(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            storage.saveData(list);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The number specified is not in the right format.\", e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 32
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.regex.PatternSyntaxException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.stage.Stage;*/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Duke {//extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String prefix \u003d \"     \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    /*private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            list \u003d storage.loadData();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            list \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                Command myCmd \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                myCmd.execute(list, ui, storage);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                isExit \u003d myCmd.isExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        new Duke(\"../../../data\").run();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 65,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeDate.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DukeDate implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String month;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String year;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String outputDate () {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeDate (String day, String month, String year, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.day \u003d day;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.month \u003d month;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.year \u003d year;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static DukeDate formatDate (String myDate) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] dParts \u003d {};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time\u003d\"\", dt\u003d\"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (myDate.indexOf(\" \") \u003e -1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d myDate.split(\" \")[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dt \u003d myDate.split(\" \")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dt.indexOf(\"/\") \u003e -1){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dParts \u003d dt.split(\"/\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (validateDate(dParts, time)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dParts[0] \u003d convertDay(dParts[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dParts[1] \u003d convertMonth(dParts[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d getTime(time);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return new DukeDate(dParts[0], dParts[1], dParts[2], time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static boolean validateDate(String[] dParts, String time) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue, time2Value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (time.indexOf(\"-\") \u003e -1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "           time2 \u003d time.split(\"-\",2)[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "           time \u003d time.split(\"-\", 2) [0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "           timeValue \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "           time2Value \u003d Integer.parseInt(time2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue % 100 \u003e 60 || timeValue \u003c 0 || timeValue \u003e 2360) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (time2Value % 100 \u003e 60 || time2Value \u003c 0 || time2Value \u003e 2360) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            timeValue \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue % 100 \u003e 60 || timeValue \u003c 0 || timeValue \u003e 2360) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dParts.length !\u003d 3) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (String s: dParts) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (!isNumeric(s)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int dayValue \u003d Integer.parseInt(dParts[0]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int monthValue \u003d Integer.parseInt(dParts[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dayValue \u003c 1 || dayValue \u003e 31) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (monthValue \u003c 1 || monthValue \u003e 12) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dParts[2].length() \u003e 4) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String getTime (String time) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time2 \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue, time2Value;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (time.indexOf(\"-\") \u003e -1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2 \u003d time.split(\"-\",2)[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d time.split(\"-\", 2) [0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d convertTime(time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2 \u003d convertTime(time2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return time + \" - \" + time2;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        time \u003d convertTime(time);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertTime(String s) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (timeValue \u003c 1200) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            //am case"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"am\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (timeValue \u003c 1260) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"pm\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        else if (timeValue \u003c 2360) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // pm case"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            timeValue -\u003d 1200;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"pm\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertMonth(String s) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "       int monthValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] months \u003d new String[]{\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "       return months[monthValue-1];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertDay(String s) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int dayValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dayValue \u003d\u003d 1 || dayValue % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"st\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dayValue \u003d\u003d 2 || dayValue % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"nd\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dayValue \u003d\u003d 3 || dayValue % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"rd\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"th\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static boolean isNumeric(String s) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s !\u003d null \u0026\u0026 s.matches(\"[0-9]+\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 159
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public DukeException(String errorMessage, Throwable err) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(errorMessage, err);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 9
    }
  },
  {
    "path": "src/main/java/DukePrint.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class DukePrint {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printLinebreak() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String linebreak \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(linebreak);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            System.out.println(\"     \" + (i+1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printLast(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int n \u003d list.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\" \" + list.get(n-1).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Now you have \" + Integer.toString(n) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printMessage(String str) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"     \" + str);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String getInput(Scanner in) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printLinebreak();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printLinebreak();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void saveData(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        new File(\"../../../data\").mkdirs();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(\"../../../data/duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The file could not be generated to save data\", e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"There was an IOException\", e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadData() throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        new File(\"../../../data\").mkdirs();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(\"../../../data/duke.txt\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The file could not be generated to save data\", e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"There was an IOException\", e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The supporting Duke Classes could not be found\", e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 73
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected DukeDate at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Event(String description, DukeDate at) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.outputDate() + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 14
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ui.printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 13
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String[] c;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public FindCommand(String[] c) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.c \u003d c;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        TaskList filteredList \u003d list.find(c[1]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ui.printList(filteredList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 16
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        ui.printList(list);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] c \u003d new String[6];"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        fullCommand \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (fullCommand.indexOf(\" \") \u003e -1) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[0] \u003d fullCommand.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[1] \u003d fullCommand.split(\" \", 2)[1].strip();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (fullCommand.equals(\"todo\") || fullCommand.equals(\"event\") || fullCommand.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + fullCommand + \" cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    + \"Please enter a command and description :-(\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (c[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (isNumeric(c[1])) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return new DoneCommand(c);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the task must be specified with a number.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (c[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (isNumeric(c[1])) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return new DeleteCommand(c);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but the task must be specified with a number.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (c[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new FindCommand(c);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (!c[0].equals(\"todo\") \u0026\u0026 !c[0].equals(\"deadline\") \u0026\u0026 !c[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    + \"Please enter a command and description :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (c[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return new AddCommand(c);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (c[0].equals(\"deadline\") \u0026\u0026 c[1].indexOf(\" /by \") \u003e -1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[2] \u003d c[1].split(\" /by \", 2)[1].strip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[1] \u003d c[1].split(\" /by \", 2)[0].strip();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (c[0].equals(\"event\") \u0026\u0026 c[1].indexOf(\" /at \") \u003e -1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[2] \u003d c[1].split(\" /at \", 2)[1].strip();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[1] \u003d c[1].split(\" /at \", 2)[0].strip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                    + \"Please enter a command and description :-(\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (c[1].equals(\"\") || c[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a \" + c[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] dParts \u003d {};"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time \u003d \"\", dt \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (c[2].indexOf(\" \") \u003e -1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d c[2].split(\" \", 2)[1].strip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dt \u003d c[2].split(\" \", 2)[0].strip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dt.indexOf(\"/\") \u003e -1){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            dParts \u003d dt.split(\"/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (validateDate(dParts, time)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[2] \u003d convertDay(dParts[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[3] \u003d convertMonth(dParts[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[4] \u003d dParts[2];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            c[5] \u003d getTime(time);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is in an invalid format\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return new AddCommand(c);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static boolean validateDate(String[] dParts, String time) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time2;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue, time2Value;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (time.indexOf(\"-\") \u003e -1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2 \u003d time.split(\"-\",2)[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d time.split(\"-\", 2) [0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            timeValue \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2Value \u003d Integer.parseInt(time2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue % 100 \u003e 60 || timeValue \u003c 0 || timeValue \u003e 2360) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else if (time2Value % 100 \u003e 60 || time2Value \u003c 0 || time2Value \u003e 2360) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            timeValue \u003d Integer.parseInt(time);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue % 100 \u003e 60 || timeValue \u003c 0 || timeValue \u003e 2360) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dParts.length !\u003d 3) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (String s: dParts) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (!isNumeric(s)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int dayValue \u003d Integer.parseInt(dParts[0]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int monthValue \u003d Integer.parseInt(dParts[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dayValue \u003c 1 || dayValue \u003e 31) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (monthValue \u003c 1 || monthValue \u003e 12) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dParts[2].length() \u003e 4) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String getTime (String time) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String time2 \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue, time2Value;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (time.indexOf(\"-\") \u003e -1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2 \u003d time.split(\"-\",2)[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d time.split(\"-\", 2) [0];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time \u003d convertTime(time);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            time2 \u003d convertTime(time2);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return time + \" - \" + time2;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        time \u003d convertTime(time);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertTime(String s) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int timeValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (timeValue \u003c 1200) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            //am case"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"am\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (timeValue \u003c 1260) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"pm\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        else if (timeValue \u003c 2360) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            // pm case"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            timeValue -\u003d 1200;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (timeValue / 100 !\u003d 0) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100) + \u0027.\u0027 + s.substring(2,4);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                s \u003d Integer.toString(timeValue / 100);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"pm\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertMonth(String s) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int monthValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String[] months \u003d new String[]{\"January\", \"Febuary\", \"March\", \"April\", \"May\", \"June\","
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return months[monthValue-1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static String convertDay(String s) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int dayValue \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (dayValue \u003d\u003d 1 || dayValue % 10 \u003d\u003d 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"st\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dayValue \u003d\u003d 2 || dayValue % 10 \u003d\u003d 2) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"nd\";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else if (dayValue \u003d\u003d 3 || dayValue % 10 \u003d\u003d 3) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"rd\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            s +\u003d \"th\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static boolean isNumeric(String s) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return s !\u003d null \u0026\u0026 s.matches(\"[0-9]+\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 186
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Storage (String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void saveData(TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        new File(filePath).mkdirs();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(filePath + \"/duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            oos.writeObject(list);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The file could not be generated to save data\", e);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"There was an IOException\", e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public TaskList loadData() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        new File(filePath).mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            FileInputStream fis \u003d new FileInputStream(filePath + \"/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            TaskList list \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            ois.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The file could not be generated to save data\", e);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"There was an IOException\", e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The supporting Duke Classes could not be found\", e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 44
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return (isDone ? \"+\" : \"-\"); //\"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 24
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public boolean addTask(Task t) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        if (list.add(t)) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            throw new DukeException(\"The task could not be added\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void doneTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        list.get(index).markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Task at(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public TaskList find(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        TaskList filteredList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            if (list.get(i).description.contains(keyword)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                filteredList.addTask(list.get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 47
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    Scanner in;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void showTaskListSize(TaskList list) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Now you have \" + Integer.toString(list.getSize()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"There was an error loading the old tasks. Creating a new Tasklist.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printLinebreak() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String linebreak \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(linebreak);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void printList(TaskList list) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "            System.out.println(\"     \" + (i+1) + \".\" + list.at(i).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printLast(TaskList list) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        int n \u003d list.getSize();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\" \" + list.at(n-1).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Now you have \" + Integer.toString(n) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public static void printMessage(String str) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"     \" + str);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printLinebreak();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printLinebreak();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "        printLinebreak();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JeremyKwok"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JeremyKwok": 63
    }
  }
]

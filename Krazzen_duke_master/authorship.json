[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Krazzen": 17,
      "-": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        return \"[D][\" + getStatusIcon()+ \"]\" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Krazzen": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "import java.net.URI;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    static StringBuffer stringBufferOfData \u003d new StringBuffer();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    static String filename \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public static void level1() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.print(\"Hello, I\u0027m Duke. \\n What can i do for you? \\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        String inputString;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        while (true){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            scanner \u003d new Scanner(System. in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            inputString \u003d scanner. nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            if(inputString.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.println(inputString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public static void level2() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.print(\"Hello, I\u0027m Duke. \\n What can i do for you? \\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        String inputString \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        ArrayList\u003cString\u003e list\u003dnew ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        while (true){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            scanner \u003d new Scanner(System. in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            inputString \u003d scanner. nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            if(inputString.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            list.add(inputString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        int j \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size();i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.print(j);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.print(\". \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.println(list.get(j - 1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            j++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public static void level3() throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            String[] wordsplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            if (wordsplit[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                int index \u003d Integer.parseInt(wordsplit[1]) - 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                list.get(index).markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                System.out.print(\" [\" + list.get(index).getStatusIcon() + \"] \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                System.out.println(list.get(index).description);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            } else if (wordsplit[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                int j \u003d 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.print(j);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.print(\".[\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.print(list.get(j - 1).getStatusIcon());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.print(\"] \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.println(list.get(j - 1).description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    j++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            } else if (wordsplit[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                System.out.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "              try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                  Task t \u003d new Task(wordsplit[0] + \" \" + wordsplit[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                  list.add(t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "              }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "              catch (DukeException e){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                  System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "              }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public static void level4() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                String[] splitt \u003d input.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                if (splitt[0].equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    int j \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    for (int k \u003d 0; k \u003c list.size(); k++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        System.out.print(j);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        System.out.print(\". \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        System.out.println(list.get(j - 1).toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        j++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                } else if (splitt[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    int index \u003d Integer.parseInt(splitt[1]) - 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    list.get(index).markAsDone();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.println(list.get(index).toString());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                } else if (splitt[0].equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    System.out.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    String[] wordsplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    String cmd \u003d wordsplit[0];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    String det \u003d wordsplit[1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    for (int i \u003d 2; i \u003c wordsplit.length; i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        det +\u003d \" \" + wordsplit[i];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    if (cmd.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                       try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           Todo td \u003d new Todo(det);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           list.add(td);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           System.out.println(\"[T][\" + td.getStatusIcon() + \"] \" + det);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           System.out.println(\"Now you have \" + list.size() + \" tasks in the lists.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                       }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                       catch (DukeException e){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                           System.out.println(e);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                       }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    } else if (cmd.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            String[] secsplit \u003d det.split(\"/\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            secsplit[1] \u003d secsplit[1].substring(3);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            Event ev \u003d new Event(secsplit[0], secsplit[1]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            list.add(ev);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"[E][\" + ev.getStatusIcon() + \"] \" + secsplit[0] + \" (at:\" + secsplit[1] + \")\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the lists.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        catch(DukeException e){"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    } else if (cmd.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            String[] secsplit \u003d det.split(\"/\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            secsplit[1] \u003d secsplit[1].substring(3);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            Deadline dl \u003d new Deadline(secsplit[0], secsplit[1]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            list.add(dl);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"[D][\" + dl.getStatusIcon() + \"] \" + secsplit[0] + \" (by:\" + secsplit[1] + \")\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(\"Now you have \" + list.size() + \" tasks in the lists.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        catch (DukeException e){"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "   /* public void save(String fileName) throws FileNotFoundException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(new FileOutputStream(fileName));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        for ( Task task : list)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            pw.println(task.getStatusIcon());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    private static boolean readFile() {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.println(\"Please enter your files name and path i.e C:\\\\test.txt: \");//prompt for file name"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        filename \u003d sc.nextLine();//read in the file name"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        Scanner fileToRead \u003d null;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            fileToRead \u003d new Scanner(new File(filename)); //point the scanner method to a file"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            //check if there is a next line and it is not null and then read it in"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            for (String line; fileToRead.hasNextLine() \u0026\u0026 (line \u003d fileToRead.nextLine()) !\u003d null; ) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                System.out.println(line);//print each line as its read"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                stringBufferOfData.append(line).append(\"\\r\\n\");//this small line here is to appened all text read in from the file to a string buffer which will be used to edit the contents of the file"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            fileToRead.close();//this is used to release the scanner from file"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        } catch (FileNotFoundException ex) {//if the file cannot be found an exception will be thrown"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.println(\"The file \" + filename + \" could not be found! \" + ex.getMessage());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        } finally {//if an error occurs now we close the file to exit gracefully"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            fileToRead.close();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    private static void writeToFile() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            BufferedWriter bufwriter \u003d new BufferedWriter(new FileWriter(filename));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            bufwriter.write(stringBufferOfData.toString());//writes the edited string buffer to the new file"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            bufwriter.close();//closes the file"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        } catch (Exception e) {//if an exception occurs"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            System.out.println(\"Error occured while attempting to write to file: \" + e.getMessage());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    private static void replacement() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.println(\"Please enter the contents of a line you would like to edit: \");//prompt for a line in file to edit"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        String lineToEdit \u003d sc.nextLine();//read the line to edit"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.println(\"Please enter the the replacement text: \");//prompt for a line in file to replace"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        String replacementText \u003d sc.nextLine();//read the line to replace"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        int startIndex \u003d stringBufferOfData.indexOf(lineToEdit);//now we get the starting point of the text we want to edit"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        int endIndex \u003d startIndex + lineToEdit.length();//now we add the staring index of the text with text length to get the end index"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        stringBufferOfData.replace(startIndex, endIndex, replacementText);//this is where the actual replacement of the text happens"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.out.println(\"Here is the new edited text:\\n\" + stringBufferOfData); //used to debug and check the string was replaced"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public static void level7(){"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        boolean fileRead \u003d readFile();//call the method to read the file with the files name"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        if (fileRead) {//if the read file was successfull"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            replacement();//call method to get text to replace, replacement text and output replaced String buffer"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            writeToFile();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        System.exit(0);//exit once app is done"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        //level1();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        //level2();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        //level3();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        level4();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        level7();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Krazzen": 250,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Krazzen": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        return \"[E][\" + getStatusIcon()+ \"]\" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Krazzen": 18
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            if(description.equals(null)){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                throw new DukeException(\"Cannot be empty\" );"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }else if (description.equals(\"todo\")){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                throw new DukeException(\"fail\" );"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "                this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        public boolean markAsDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "            return isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Krazzen": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "        return  \"[T][\" + getStatusIcon()+ \"]\" + description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Krazzen"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Krazzen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Krazzen": 15
    }
  }
]

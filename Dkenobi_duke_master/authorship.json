[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "Dkenobi": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import exception.DukeBaseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import ui.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import ui.CommandInterfaceView;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.ConstantHelper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.ReadWriteFileHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void run (){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        CommandInterfaceView cli \u003d new CommandInterfaceView();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        new ReadWriteFileHelper().loadFile(ConstantHelper.dukeFilePath,taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        cli.printWelcomeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        cli.printLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String fullCommand \u003d cli.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                cli.printLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                c.execute(taskList,cli);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                cli.printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                new  ReadWriteFileHelper().saveFile(ConstantHelper.dukeFilePath,cli.saveTaskList(taskList.getTaskList()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            catch (DukeBaseException e){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "       new Duke().run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "Dkenobi": 38
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import exception.DukeBaseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.DateTimeHelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The Parser class help to determine the action along with the the additional argument to"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * determine the command to execute."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method determine the command to be execute base on the input given"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param fullCommand the user input at runtime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the action to be executed base on the input given."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @throws DukeBaseException throws and error when a wrong command is entered."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeBaseException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String[] splitString \u003d fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        switch (splitString[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new DoneCommand(Integer.parseInt(splitString[1]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(splitString[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new FindCommand(splitString[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return addTaskToList(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Similar to the above function however, this function only handle the various task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * to be executed."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param message the input after the command"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the action to be executed base on the input given."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @throws DukeBaseException throws and error if missing information is entered."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private static Command addTaskToList(String message) throws DukeBaseException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String[] splitString \u003d message.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e descriptionArgs \u003d new ArrayList\u003c\u003e(Arrays.asList(splitString));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        descriptionArgs.remove(0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String description \u003d String.join(\" \", descriptionArgs);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        switch (splitString[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.ToDoExceptionDuke();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new ToDoCommand(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.DeadlineException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitByBy \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new DeadlineCommand(splitByBy[0], new DateTimeHelper().getFormattedDate(splitByBy[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.EventException();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitByAt \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return new EventCommand(splitByAt[0], new DateTimeHelper().getFormattedDate(splitByAt[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                throw new DukeException.WrongCommandException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 72
    }
  },
  {
    "path": "src/main/java/exception/DukeBaseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeBaseException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public DukeBaseException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.message \u003d msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 14
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class ToDoExceptionDuke extends DukeBaseException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public ToDoExceptionDuke() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class DeadlineException extends DukeBaseException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public DeadlineException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class EventException extends DukeBaseException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public EventException() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class WrongCommandException extends DukeBaseException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public WrongCommandException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 28
    }
  },
  {
    "path": "src/main/java/model/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The Deadlines class that keeps the information about the added Deadlines task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * Which implement the method of the Task Interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Deadlines implements Task{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Constructor of the Deadlines Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Deadlines(String taskType, String description, String date ){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Another Constructor that take in a extra argument."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a boolean that describe the current state of the Task to be created."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Deadlines(String taskType, String description, String date,boolean isDone ){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the information about the current state of the Deadlines Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the String format of the Deadlines Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + getStatusIcon() + \"] \"+  description +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    * This method set the completion of the Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    * @param isDone a value that the Task is completed/not completed."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the status of the task in unicode format."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the description of the Deadlines task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return a String format to save in the text file of the ToDo task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (isDone ? \"1\" : \"0\") +\" | \" +  description + \" | \" + date;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 86
    }
  },
  {
    "path": "src/main/java/model/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The Event class that keeps the information about the added Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * Which implement the method of the Task Interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Event implements Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Constructor of the Event Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Event(String taskType, String description, String date ){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Another Constructor that take in a extra argument."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a boolean that describe the current state of the Task to be created."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Event(String taskType, String description, String date, boolean isDone ){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the information about the current state of the Event Task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the String format of the Event Task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + getStatusIcon() + \"] \"+  description +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method set the completion of the Task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a value that the Task is completed/not completed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the status of the task in unicode format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the description of the Event task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    * {@inheritDoc}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    * @return a String format to save in the text file of the Event task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (isDone ? \"1\" : \"0\") +\" | \" +  description + \" | \" + date;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 87
    }
  },
  {
    "path": "src/main/java/model/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The user of this interface have control on how each method are handled."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * This interface give the user a guideline of the required method to be implemented in the sub-class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public interface Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method is used to set the Task status of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a value that the Task is completed/not completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setIsDone(boolean isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * The method retrieve the status of the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the Icon in string format of the status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getStatusIcon();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method will retrieve the description of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the description that describe the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method will be used to convert the relevant Task description into a"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * formatted text to save in a text file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the format for the text file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 36
    }
  },
  {
    "path": "src/main/java/model/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The TaskList class keep a state of all the added task in the @param tasksList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Constructor of the TaskList that initialize the taskList at once instantiate."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the size of the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param task a new task to be added into the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the index of the task that was added in the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public int addTaskToList(Task task){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the task list in ArrayList type."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return this.tasksList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method set a particular task to done given the id of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param index the id of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList.get(index - 1).setIsDone(true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * The method deletes the task given the id of the task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param index the id of the task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void deleteTask(int index){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList.remove(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * The method return the size of the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the taskList size in int."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public int getTasksListSize(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * The method returns the instance of the task given the id."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Task getTask(int id){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.get(id - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method returns the list of task found given the search query."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param findString the string of the query."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the list of task in string."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String listFoundTask(String findString) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        StringBuilder listString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        listString \u003d new StringBuilder(\"Here are the tasks in your list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for(Task task: tasksList)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            if(task.toString().contains(findString))"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                listString.append(\"\\n\").append(index++).append(\".\").append(task.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return listString.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 88
    }
  },
  {
    "path": "src/main/java/model/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The ToDo class that keeps the information about the added ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * Which implement the method of the Task Interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ToDo implements Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Constructor of the ToDO Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ToDo(String taskType, String description){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Another Constructor that take in a extra argument."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskType a initial that describe the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param description a String that describe the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a boolean that describe the current state of the Task to be created."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ToDo(String taskType, String description, boolean isDone){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the information about the current state of the ToDo Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the String format of the ToDo Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + getStatusIcon() + \"] \"+  description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method set the completion of the Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param isDone a value that the Task is completed/not completed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setIsDone(boolean isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the status of the task in unicode format."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the description of the ToDo task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return a String format to save in the text file of the ToDo task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (isDone ? \"1\" : \"0\") +\" | \" +  description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 82
    }
  },
  {
    "path": "src/main/java/ui/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ByeCommand (){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 14
    }
  },
  {
    "path": "src/main/java/ui/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The user of this abstract class have to implement the abstract method ."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @author Dillen"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * @since 2019-08-13"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method return the boolean exit value of the command to determine to quit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return the boolean value of isExit."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Accept the reference value of TaskLists and CommandInterfaceView and allow the"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * implementer to execute the correct method for each different commands."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskList the runtime Task List."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param ui the runtime of the ui elements."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    abstract public void execute(TaskList taskList,CommandInterfaceView ui);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 33
    }
  },
  {
    "path": "src/main/java/ui/CommandInterfaceView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class CommandInterfaceView {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public CommandInterfaceView () {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * Method to call when Duke is started."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printWelcomeMessage()  {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printTaskList(ArrayList\u003cTask\u003e tasksList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        StringBuilder listString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        listString \u003d new StringBuilder(\"Here are the tasks in your list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for (var task: tasksList){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            listString.append(\"\\n\").append(index++).append(\".\").append(task.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(listString);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void  printCompleteTask(TaskList taskList, int taskId){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.completeTask(taskId);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println( \"Nice I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"[\" + taskList.getTask(taskId).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + taskList.getTask(taskId).getDescription());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printDeleteTask(TaskList taskList, int taskId){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String removedTask \u003d taskList.getTask(taskId).toString();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        taskList.deleteTask(taskId);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println( \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + removedTask"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + taskList.getTasksListSize()"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                +\" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ArrayList\u003cString\u003e saveTaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e tasksSaveAsList \u003d new ArrayList\u003c\u003e();;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        //Find out if can cover ArrayList\u003cTask\u003e to ArrayList\u003cString\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for(Task a: taskList)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            tasksSaveAsList.add(a.saveToFile());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksSaveAsList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printFoundList(String foundListString){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + foundListString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void printToDo(String task, int sizeOfTaskList){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + task + \"\\nNow you have \" + sizeOfTaskList + \" tasks in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 90
    }
  },
  {
    "path": "src/main/java/ui/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DeadlineCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public DeadlineCommand(String taskDescription, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int id \u003d taskList.addTaskToList(new Deadlines(\"D\",taskDescription,date));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printToDo(taskList.getTask(id).toString(),taskList.getTasksListSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 20
    }
  },
  {
    "path": "src/main/java/ui/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public DeleteCommand(int taskId){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printDeleteTask(taskList,taskId);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 15
    }
  },
  {
    "path": "src/main/java/ui/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private int taskId;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public DoneCommand(int taskId){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printCompleteTask(taskList,taskId);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 16
    }
  },
  {
    "path": "src/main/java/ui/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class EventCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public EventCommand(String taskDescription, String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int id \u003d taskList.addTaskToList(new Deadlines(\"E\",taskDescription,date));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printToDo(taskList.getTask(id).toString(),taskList.getTasksListSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 20
    }
  },
  {
    "path": "src/main/java/ui/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String findString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public FindCommand(String findString) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.findString \u003d findString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printFoundList(taskList.listFoundTask(findString));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 16
    }
  },
  {
    "path": "src/main/java/ui/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printTaskList(taskList.getTaskList());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 10
    }
  },
  {
    "path": "src/main/java/ui/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ToDoCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ToDoCommand(String taskDescription){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void execute(TaskList taskList, CommandInterfaceView ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int id \u003d taskList.addTaskToList(new ToDo(\"T\",taskDescription));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ui.printToDo(taskList.getTask(id).toString(),taskList.getTasksListSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 18
    }
  },
  {
    "path": "src/main/java/util/ConstantHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The ConstantHelper define the constant required in this application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ConstantHelper {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static final String dukeFilePath \u003d \"src/main/java/resource/duke.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 8
    }
  },
  {
    "path": "src/main/java/util/DateTimeHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The DateTimeHelper class helps to format the given date in dd/M/yyyy HHmm ei.  2/12/2019 1800 and parse the date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * to another format dnd of MMM YYYY, HMMaa ei. 2nd of December 2019, 6pm."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    // Convert 2/12/2019 1800 to 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method parse the given date in dd/M/yyyy HHmm and return in dnd of MMM YYYY, HMMaa"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param date take in a string of the date"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @return a string in MMM YYYY, HMMaa"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getFormattedDate(String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Date formattedDate \u003d new Date();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            formattedDate \u003d inputFormat.parse(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            int hour \u003d Integer.parseInt(new SimpleDateFormat(\"h\").format(formattedDate));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(formattedDate));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            String period \u003d (new SimpleDateFormat(\"a\").format(formattedDate)).toLowerCase();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            String timeFormat;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            if (min \u003e 0)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                timeFormat \u003d hour + \".\" + min + \" \" + period;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            else"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                timeFormat \u003d hour + \" \" + period;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Calendar cal\u003dCalendar.getInstance();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            cal.setTime(formattedDate);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            int day\u003dcal.get(Calendar.DATE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            if(!((day\u003e10) \u0026\u0026 (day\u003c19)))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                switch (day % 10) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case 1:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case 2:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case 3:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            //If function is unable to parse return the original format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(\"Unable to parse date original date format is used.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 59
    }
  },
  {
    "path": "src/main/java/util/ReadWriteFileHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * The ReadWriteFileHelper class helps to save the current state of the current Task ArrayList and"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " * load the text file into the Task ArrayList at runtime."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ReadWriteFileHelper {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method help to load the previously saved Task ArrayList and help to retain the state from the previous runtime."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param fullPath the directory of the save Task ArrayList text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskList the current runtime of the TaskList which the save state will be loaded into it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void loadFile(String fullPath, TaskList taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Scanner s \u003d new Scanner(new File(fullPath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitLine \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                switch(splitLine[0]){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new ToDo(splitLine[0],splitLine[2],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new Deadlines(splitLine[0],splitLine[2],splitLine[3],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new Event(splitLine[0],splitLine[2],splitLine[3],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(\"Lists successfully loaded.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * This method save the TaskList in a text file when executed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param fullPath the directory of the save Task ArrayList text file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     * @param taskList the String format of the current state of the taskList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void saveFile(String fullPath, ArrayList\u003cString\u003e taskList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Path file \u003d Paths.get(fullPath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Files.write(file, taskList, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 72
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//import model.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//import model.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    String dukeAddedString \u003d \"added: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    void testByeCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        assertEquals(\"Bye. Hope to see you again soon!\", Duke.enterCommand(new TaskList(),\"bye\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    void testInputCommand(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        assertEquals(dukeAddedString + \"Read book\", Duke.enterCommand(new TaskList(),\"Read book\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    void testListCommand(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        String duekeTestList \u003d \"Here are the tasks in your list.\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//                \"\\n1. [✘] read book\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//                \"\\n2. [✘] watch GOT\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        String dukeDoneList \u003d \"Nice I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//                \"[✓] watch GOT\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        Duke.enterCommand(taskList,\"read book\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        Duke.enterCommand(taskList,\"watch GOT\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        assertEquals(duekeTestList, Duke.enterCommand(taskList,\"list\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//        assertEquals(dukeDoneList, Duke.enterCommand(taskList,\"done 2\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "//}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 40
    }
  }
]

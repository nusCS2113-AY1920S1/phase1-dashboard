[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "Dkenobi": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import expection.DukeBaseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import expection.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.ConstantHelper;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.DateTimeHelper;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        new ReadWriteUtility().loadFile(ConstantHelper.dukeFilePath,taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        while(!(input \u003d reader.readLine()).isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                System.out.println(enterCommand(taskList, input));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            catch (DukeBaseException e){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static void printWelcomeMessage()  {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static String enterCommand(TaskList taskList, String input) throws DukeBaseException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String[] splitString \u003d input.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        switch(splitString[0])"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                System.out.print(bye());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"list\": return taskList.getTaskList();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"done\": return taskList.completeTask(Integer.parseInt(splitString[1]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return addTaskToList(taskList,input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static String bye() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private static String addTaskToList(TaskList taskList, String message) throws DukeBaseException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int id;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String[] splitString \u003d message.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        ArrayList\u003cString\u003e descriptionArgs \u003d new ArrayList\u003c\u003e(Arrays.asList(splitString));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        descriptionArgs.remove(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String description \u003d String.join(\" \",descriptionArgs);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String pattern \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        DateFormat df \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        switch(splitString[0])"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.ToDoExceptionDuke();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                id \u003d taskList.addTaskToList(new ToDo(\"T\",description));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + taskList.getTask(id).toString()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + \"\\nNow you have \" + taskList.getListSize() +\" tasks in the list.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.DeadlineException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitByBy \u003d description.split(\"/by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                id \u003d taskList.addTaskToList(new Deadlines(\"D\",splitByBy[0],new DateTimeHelper().getFormattedDate(splitByBy[1])));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + taskList.getTask(id).toString()"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + \"\\nNow you have \" + taskList.getListSize() +\" tasks in the list.\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                if (description.equals(\"\"))"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    throw new DukeException.EventException();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitByAt \u003d description.split(\"/at \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                id \u003d taskList.addTaskToList(new Event(\"E\", splitByAt[0],new DateTimeHelper().getFormattedDate(splitByAt[1])));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                return \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + taskList.getTask(id).toString()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        + \"\\nNow you have \" + taskList.getListSize() +\" tasks in the list.\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                throw new DukeException.WrongCommandException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "Dkenobi": 105
    }
  },
  {
    "path": "src/main/java/ReadWriteUtility.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Deadlines;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ReadWriteUtility {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void loadFile(String fullPath, TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Scanner s \u003d new Scanner(new File(fullPath));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                String[] splitLine \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                switch(splitLine[0]){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new ToDo(splitLine[0],splitLine[2],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new Deadlines(splitLine[0],splitLine[2],splitLine[3],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        taskList.addTaskToList(new Event(splitLine[0],splitLine[2],splitLine[3],splitLine[1].equals(\"1\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(\"Lists successfully loaded.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(\"File not found.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void saveFile(String fullPath, ArrayList\u003cString\u003e taskList) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Path file \u003d Paths.get(fullPath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            Files.write(file, taskList, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import util.ConstantHelper;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ArrayList\u003cTask\u003e tasksList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private ArrayList\u003cString\u003e tasksSaveAsList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksSaveAsList \u003d new ArrayList\u003c\u003e();;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public int addTaskToList(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksSaveAsList.add(task.saveToFile());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        new ReadWriteUtility().saveFile(ConstantHelper.dukeFilePath,tasksSaveAsList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.size() - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getTaskList(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        StringBuilder listString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        listString \u003d new StringBuilder(\"Here are the tasks in your list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        for (var task: tasksList){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            listString.append(\"\\n\").append(index++).append(\".\").append(task.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return listString.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String completeTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int zeroIndex \u003d index - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        tasksList.get(zeroIndex).setIsDone(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \"Nice I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + \"[\" + tasksList.get(zeroIndex).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                + tasksList.get(zeroIndex).getDescription();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public int getListSize(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Task getTask(int id){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksList.get(id);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ArrayList\u003cString\u003e asList(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return tasksSaveAsList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 53
    }
  },
  {
    "path": "src/main/java/expection/DukeBaseException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package expection;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeBaseException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public DukeBaseException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.message \u003d msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 14
    }
  },
  {
    "path": "src/main/java/expection/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package expection;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class ToDoExceptionDuke extends DukeBaseException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public ToDoExceptionDuke() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class DeadlineException extends DukeBaseException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public DeadlineException() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class EventException extends DukeBaseException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public EventException() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static class WrongCommandException extends DukeBaseException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        public WrongCommandException() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 28
    }
  },
  {
    "path": "src/main/java/model/Deadlines.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Deadlines extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Deadlines(String taskType, String description, String date ){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Deadlines(String taskType, String description, String date,boolean isDone ){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + super.getStatusIcon() + \"] \"+  description +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (super.isDone ? \"1\" : \"0\") +\" | \" +  description + \" | \" + date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 30
    }
  },
  {
    "path": "src/main/java/model/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Event extends  Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Event(String taskType, String description, String date ){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Event(String taskType, String description, String date, boolean isDone ){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + super.getStatusIcon() + \"] \"+  description +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (super.isDone ? \"1\" : \"0\") +\" | \" +  description + \" | \" + date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 30
    }
  },
  {
    "path": "src/main/java/model/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public void setIsDone(boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  \"N\"  + \" | \" + (isDone ? \"1\" : \"0\") +\" | \" +  description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 27
    }
  },
  {
    "path": "src/main/java/model/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package model;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ToDo(String taskType, String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public ToDo(String taskType, String description, boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return \" [\" + taskType + \"] [\" + super.getStatusIcon() + \"] \"+  description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String saveToFile(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return  taskType  + \" | \" + (super.isDone ? \"1\" : \"0\") +\" | \" +  description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 27
    }
  },
  {
    "path": "src/main/java/resource/duke.txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "D | 0 | return book  | 2nd of December 2019 6 pm"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 5
    }
  },
  {
    "path": "src/main/java/util/ConstantHelper.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class ConstantHelper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public static final String dukeFilePath \u003d \"./src/main/java/resource/duke.txt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 5
    }
  },
  {
    "path": "src/main/java/util/DateTimeHelper.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "package util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "public class DateTimeHelper {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    // Convert 2/12/2019 1800 to 2nd of December 2019, 6pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    public String getFormattedDate(String date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Date formattedDate \u003d new Date();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            formattedDate \u003d inputFormat.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int hour \u003d Integer.parseInt(new SimpleDateFormat(\"h\").format(formattedDate));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(formattedDate));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String period \u003d (new SimpleDateFormat(\"a\").format(formattedDate)).toLowerCase();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String timeFormat;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        if (min \u003e 0)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            timeFormat \u003d hour + \".\" + min + \" \" + period;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        else"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            timeFormat \u003d hour + \" \" + period;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Calendar cal\u003dCalendar.getInstance();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        cal.setTime(formattedDate);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        int day\u003dcal.get(Calendar.DATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        if(!((day\u003e10) \u0026\u0026 (day\u003c19)))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(formattedDate) + \" \" + timeFormat;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 47
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import model.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    String dukeAddedString \u003d \"added: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    void testByeCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(\"Bye. Hope to see you again soon!\", Duke.enterCommand(new TaskList(),\"bye\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    void testInputCommand(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(dukeAddedString + \"Read book\", Duke.enterCommand(new TaskList(),\"Read book\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    void testListCommand(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String duekeTestList \u003d \"Here are the tasks in your list.\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \"\\n1. [✘] read book\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \"\\n2. [✘] watch GOT\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        String dukeDoneList \u003d \"Nice I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "                \"[✓] watch GOT\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Duke.enterCommand(taskList,\"read book\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        Duke.enterCommand(taskList,\"watch GOT\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(duekeTestList, Duke.enterCommand(taskList,\"list\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "        assertEquals(dukeDoneList, Duke.enterCommand(taskList,\"done 2\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dkenobi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dkenobi": 36
    }
  }
]

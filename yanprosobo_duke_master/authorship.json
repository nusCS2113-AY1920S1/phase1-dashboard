[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 21,
      "-": 19
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private List \u003cString\u003e inputlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public AddCommand (List\u003cString\u003e inputlist) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.inputlist \u003d inputlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        switch(inputlist.get(0)){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Todo newTodo \u003d new Todo(inputlist.subList(1, inputlist.size()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                taskList.add(newTodo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showTaskAdded(taskList.getTaskList(), newTodo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                storage.save((TaskList) taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Deadline newDeadline \u003d new Deadline(inputlist.subList(1, inputlist.size()));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                taskList.add(newDeadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showTaskAdded(taskList.getTaskList(), newDeadline);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                storage.save((TaskList) taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Event newEvent \u003d new Event(inputlist.subList(1, inputlist.size()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                taskList.add(newEvent);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showTaskAdded(taskList.getTaskList(), newEvent);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                storage.save((TaskList) taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 32
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        ui.printGoodBye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 7
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    abstract public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 9
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "//to do error handling of dates."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DateTime implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private Calendar at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DateTime(List\u003cString\u003e tokens) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            String[] date \u003d tokens.get(0).split(\"/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.DATE, Integer.parseInt(date[0])); //day of the month"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.MONTH, Integer.parseInt(date[1]) - 1); // jan is 0, dec is 11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.YEAR, Integer.parseInt(date[2]));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(tokens.get(1))/100); // set with the first 2 elements - the hour"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.MINUTE, Integer.parseInt(tokens.get(1)) % 100); // set with the last 2 elements, the minutes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.at \u003d calendar;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Invalid datetime. Correct format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return (\"\"+ at.getTime());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 33
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Deadline(List\u003cString\u003e list1) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int start \u003d list1.indexOf(\"/by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (start \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException (\"Did you forget about deadline name? Please enter the valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else if (start \u003d\u003d -1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Did you forget about /by? Please enter the valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.description \u003d String.join(\" \", list1.subList(0, start));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.deadline \u003d new DateTime(list1.subList(start+ 1, list1.size()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[D]\" + super.toString() + this.description + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private List\u003cString\u003e inputlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DeleteCommand(List\u003cString\u003e inputlist) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.inputlist \u003d inputlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(inputlist.get(0)) ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            Task removedTask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            taskList.remove(taskIndex - 1 );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ui.showDeletedTask(taskList.getTaskList(), removedTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            storage.save((TaskList) taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please supply a number. Eg: done 2\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please supply a valid number.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 25
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private List\u003cString\u003e inputlist;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DoneCommand(List\u003cString\u003e inputlist) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.inputlist \u003d inputlist;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(inputlist.get(0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            Task donetask \u003d taskList.get(taskIndex - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            donetask.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ui.showDoneTask(donetask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            storage.save((TaskList) taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please supply a number. Eg: done 2\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please supply a valid number. Enter \u0027List\u0027 to show current lists of tasks.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 37,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime event_start, event_end;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Event(List\u003cString\u003e list1) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int start \u003d list1.indexOf(\"/at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (start \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException (\"Did you forget about event name? Please enter the valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else if (start \u003d\u003d -1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Did you forget about /at? Please enter the valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.description \u003d String.join(\" \", list1.subList(0, start));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.event_start \u003d new DateTime(list1.subList(start + 1, start + 3));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.event_end \u003d new DateTime(list1.subList(start + 4, start + 6));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: event \u003cevent name\u003e /at \u003cevent start time\u003e - \u003cevent end time\u003e\\n \\tEach event time should be in the format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[E]\" + super.toString() + this.description + \" (at: \" + this.event_start + \" - \" + this.event_end + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 37
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private List\u003cString\u003e inputlist;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public FindCommand(List\u003cString\u003e inputlist) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.inputlist \u003d inputlist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (inputlist.size() \u003e 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            String keyword \u003d String.join(\" \", inputlist.subList(0, inputlist.size()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            List\u003cTask\u003e filteredTasks \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    taskList.getTaskList().stream()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                            .filter(task -\u003e task.containsKeyword(keyword))"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                            .collect(Collectors.toList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (filteredTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                ui.showSearchResult(filteredTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                throw new DukeException(\"There are no matching tasks.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter at least a keyword to search.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 28
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    ListCommand() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        ui.showTaskList(taskList.getTaskList());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public static Command parse (String wholecommand) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        List\u003cString\u003e inputList \u003d Arrays.asList(wholecommand.split(\" \"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String action \u003d inputList.get(0);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        List\u003cString\u003e details \u003d inputList.subList(1, inputList.size());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new AddCommand(inputList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new FindCommand(details);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new DoneCommand(details);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new DeleteCommand(details);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                throw new DukeException(\"Please enter a valid command: list/todo/event/deadline/find/done/delete/bye\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 30
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    // Unchecked type coercion is necessary here."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    // And possible cast exceptions are handled"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public TaskList load() throws DukeException{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            FileInputStream fileStream \u003d new FileInputStream(this.fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ObjectInputStream objectStream \u003d new ObjectInputStream(fileStream);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            TaskList tasks \u003d (TaskList) objectStream.readObject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"File doesn\u0027t exist, not loading anything.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"An unexpected error occurred when reading the file, not loading anything. \" + e);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Invalid file contents, not loading anything.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Invalid file contents, not loading anything.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            FileOutputStream fileStream \u003d new FileOutputStream(this.fileName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ObjectOutputStream objectStream \u003d new ObjectOutputStream(fileStream);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.writeObject(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Unable to open \" + this.fileName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"An unexpected error occurred when writing to the file. \" + e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 45
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    abstract public boolean containsKeyword(String keyword);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return  \"[\" + this.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 29
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class TaskList implements Serializable{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private List\u003cTask\u003e task1;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.task1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public TaskList (List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.task1 \u003d task1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void add (Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        task1.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return task1.get(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void remove (int i) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        task1.remove(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public int size () {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return task1.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public List\u003cTask\u003e getTaskList () {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return task1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 36
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * Creates a todo task submitted by user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * @param input user input as prompted"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     * @throws DukeException error message if user input was invalid"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Todo(List\u003cString\u003e list1) throws DukeException{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: todo \u003ctaskname\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.description \u003d String.join(\" \", list1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[T]\" + super.toString() + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private void printIndentedMessage(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(message);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showTaskAdded(List\u003cTask\u003e task1, Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Got it . I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Now you have \" + task1.size() + ((task1.size() \u003d\u003d 1) ?  \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentMessage(\"Now you have \" + task1.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showTaskList(List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (task1.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentedMessage(\"You have no task in your list.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentedMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printList(task1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showSearchResult(List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printList(task1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showDeletedTask(List\u003cTask\u003e task1, Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Now you have \" + task1.size() + ((task1.size() \u003d\u003d 1) ?  \" tasks\" : \" task\") + \" in the list\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private void showNumTasks(List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedMessage(\"Now you have \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + task1.size()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + (task1.size() \u003e 1 ? \" tasks\" : \" task\")"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private void printList(List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        for (Task temp : task1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentedMessage(i+1 + \". \" + temp);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 94
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    void add_works() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String dummy \u003d \"read book\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        List\u003cString\u003e wordList \u003d Arrays.asList(dummy.split(\" \"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        Task task \u003d new Todo(wordList);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        assertEquals(task, taskList.get(0));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 20
    }
  }
]

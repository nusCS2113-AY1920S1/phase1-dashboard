[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 21,
      "-": 19
    }
  },
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "//to do error handling of dates."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DateTime implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private Calendar at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DateTime(List\u003cString\u003e tokens) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            String[] date \u003d tokens.get(0).split(\"/\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.DATE, Integer.parseInt(date[0])); //day of the month"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.MONTH, Integer.parseInt(date[1]) - 1); // jan is 0, dec is 11"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.YEAR, Integer.parseInt(date[2]));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.HOUR_OF_DAY, Integer.parseInt(tokens.get(1))/100); // set with the first 2 elements - the hour"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.MINUTE, Integer.parseInt(tokens.get(1)) % 100); // set with the last 2 elements, the minutes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            calendar.set(Calendar.SECOND, 0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.at \u003d calendar;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Invalid datetime. Correct format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return (\"\"+ at.getTime());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 33
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Deadline(List\u003cString\u003e list1) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int start \u003d list1.indexOf(\"/by\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (start \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException (\"Did you forget about deadline name? Please enter the valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else if (start \u003d\u003d -1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Did you forget about /by? Please enter the valid format: deadline \u003cdeadline name\u003e /at \u003cdeadline time\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.description \u003d String.join(\" \", list1.subList(0, start));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.deadline \u003d new DateTime(list1.subList(start+ 1, list1.size()));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[D]\" + super.toString() + this.description + \" (by: \" + this.deadline + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static List\u003cTask\u003e task1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static Storage storage \u003d new Storage(\"tasks.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printList (List\u003cTask\u003e task1) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        for (Task temp: task1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentMessage(i+1 + \". \" + temp);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printMessageAfterAddingTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        System.out.print(\"\\tNow you have \" + task1.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (task1.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.out.print(\" task\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.out.print(\" tasks\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        System.out.print(\" in the list.\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //printIndentMessage(\"Now you have \" + task1.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printIndentMessage (String message) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printIndentedHorizontalLine() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printWelcome() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void printReply(String reply) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentMessage(\"added: \" + reply);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private static void reply() throws DukeException{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String terminateCommand \u003d \"bye\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String listCommand \u003d \"list\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        String commands \u003d  input.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if(commands.equals(terminateCommand)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printGoodbye();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            java.lang.System.exit(0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else if (commands.equals(listCommand)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if (task1.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                printIndentMessage(\"You have no task in your list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                System.out.print(\"\\tHere are the\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                if (task1.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    System.out.print (\" task\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    System.out.print(\" tasks\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                System.out.print(\" in your list:\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printList(task1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            List\u003cString\u003e inputList \u003d Arrays.asList(commands.split(\" \"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            //String[] values \u003d commands.split(\" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            if(inputList.get(0).equals(\"done\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(inputList.get(1));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    task1.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentMessage(\"Nice!  I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentMessage(task1.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    throw new DukeException(\"Please provide a valid format. E.g. done 4\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    throw new DukeException(\"Please provide the task number. E.g. done 4\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else if (inputList.get(0).equals(\"delete\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(inputList.get(1));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    //task1.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    task1.remove(task1.get(taskIndex - 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentMessage(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentMessage(task1.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    throw new DukeException(\"Please provide a valid format. E.g. delete 4\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    throw new DukeException(\"Please provide the task number. E.g. delete 4\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else if (inputList.get(0).equals(\"find\")){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                if (inputList.size() \u003e 1) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    String searchTerm \u003d String.join(\" \", inputList.subList(1, inputList.size()));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    List\u003cTask\u003e filteredTasks \u003d"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                            task1.stream()"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                                    .filter(task -\u003e task.containsKeyword(searchTerm))"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    if (filteredTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                        printIndentMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                        printList(filteredTasks);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                        printIndentMessage(\"There are no matching task.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    printIndentedHorizontalLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                    throw new DukeException(\"Please enter at least a keyword to search.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else if (inputList.get(0).equals(\"todo\")){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Task temptask \u003d new Todo(inputList.subList(1, inputList.size()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                task1.add(temptask);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                printMessageAfterAddingTask(temptask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else if (inputList.get(0).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Task temptask \u003d new Deadline(inputList.subList(1, inputList.size()));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                task1.add(temptask);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                printMessageAfterAddingTask(temptask);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else if (inputList.get(0).equals(\"event\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                Task temptask \u003d new Event(inputList.subList(1, inputList.size()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                task1.add(temptask);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                printMessageAfterAddingTask(temptask);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                throw new DukeException(\"Please give a proper command: LIST BYE DONE TODO EVENT DEADLINE\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            storage.save(task1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        printWelcome();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        task1 \u003d storage.load();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                reply();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                printIndentMessage(e.getMessage());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 172,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        super(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                \"\\t\" + message + \"\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "                \"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private DateTime event_start, event_end;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Event(List\u003cString\u003e list1) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        int start \u003d list1.indexOf(\"/at\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (start \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException (\"Did you forget about event name? Please enter the valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        else if (start \u003d\u003d -1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Did you forget about /at? Please enter the valid format: event \u003cevent name\u003e /at \u003cevent time\u003e\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.description \u003d String.join(\" \", list1.subList(0, start));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.event_start \u003d new DateTime(list1.subList(start + 1, start + 3));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            this.event_end \u003d new DateTime(list1.subList(start + 4, start + 6));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: event \u003cevent name\u003e /at \u003cevent start time\u003e - \u003cevent end time\u003e\\n \\tEach event time should be in the format: dd/mm/yyyy hhmm\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[E]\" + super.toString() + this.description + \" (at: \" + this.event_start + \" - \" + this.event_end + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    // Unchecked type coercion is necessary here."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    // And possible cast exceptions are handled"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            FileInputStream fileStream \u003d new FileInputStream(this.fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ObjectInputStream objectStream \u003d new ObjectInputStream(fileStream);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            List\u003cTask\u003e tasks \u003d (List\u003cTask\u003e) objectStream.readObject();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"File doesn\u0027t exist, not loading anything.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"An unexpected error occurred when reading the file, not loading anything. \" + e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"Invalid file contents, not loading anything.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (ClassCastException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"Invalid file contents, not loading anything.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            FileOutputStream fileStream \u003d new FileOutputStream(this.fileName);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            ObjectOutputStream objectStream \u003d new ObjectOutputStream(fileStream);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.writeObject(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            objectStream.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"Unable to open \" + this.fileName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            System.err.println(\"An unexpected error occurred when writing to the file. \" + e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    abstract public boolean containsKeyword(String keyword);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return  \"[\" + this.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 29
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public Todo(List\u003cString\u003e list1) throws DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        if (list1.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "            throw new DukeException(\"Please enter valid format: todo \u003ctaskname\u003e\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        this.description \u003d String.join(\" \", list1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public boolean containsKeyword(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "        return \"[T]\" + super.toString() + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanprosobo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanprosobo": 23
    }
  }
]

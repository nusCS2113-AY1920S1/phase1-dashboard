[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 14,
      "-": 15
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    AddCommand(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            identifier \u003d message.substring(0, 4);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"other\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        switch (identifier) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                ToDo todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                if (message.length() \u003c 5 || !message.substring(4,5).equals(\" \")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    todo \u003d new ToDo(message.trim().substring(5));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    ui.formatAdd(taskList.getTaskList(), todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    storage.updateFile(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message, \"todo\"); //empty to-do"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            case \"dead\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                if (message.length() \u003c 9 || !message.substring(4,9).equals(\"line \")) { //exception if not fully spelt"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                Deadline deadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    String[] sections \u003d message.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    deadline \u003d new Deadline(sections[0], sections[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    ui.formatAdd(taskList.getTaskList(), deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    storage.updateFile(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message,\"deadline\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            case \"even\": {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                if (message.length() \u003c 6 || !message.substring(4,6).equals(\"t \")) { //exception if not fully spelt"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                Event event;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    String[] sections \u003d message.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    event \u003d new Event(sections[0], sections[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    ui.formatAdd(taskList.getTaskList(), event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    storage.updateFile(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(message, \"event\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                throw new DukeException(message);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 73
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    Types of Commands:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        addCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        deleteCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        listCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        doneCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        findCommand"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        byeCommand"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    protected LocalDateTime byLDT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String[] simpleDateTime \u003d by.trim().split(\" \",2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        The program assumes the following formats for date and time:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        dd/MM/yyyy hh:mm a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        dd/MM/yyyy          (time assumed as 2359)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                   HHmm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                   hh:mm a  (date assumed as today)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "         */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            this.byLDT \u003d convertToLocalDateTime(simpleDateTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            this.by \u003d this.byLDT.format(dateTimeFormatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            this.by \u003d by; // custom deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private LocalDateTime convertToLocalDateTime(String[] simpleDateTime){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String defaultDate \u003d now.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String defaultTime \u003d \"2359\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (simpleDateTime.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String s \u003d simpleDateTime[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            if (s.split(\" \").length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                // hh:mm a"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                return LocalDateTime.parse(defaultDate + \" \" + s, formatter);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } else if (s.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                // HHmm"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                return LocalDateTime.parse(defaultDate + \" \" + s, formatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                // dd/MM/yyyy"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                return LocalDateTime.parse(s + \" \" + defaultTime, formatter);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String date \u003d simpleDateTime[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String time \u003d simpleDateTime[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            DateTimeFormatter formatter;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            if (time.length() \u003e\u003d 7) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                // dd/MM/yyyy hh:mm a"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy hh:mm a\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                // dd/MM/yyyy HHmm"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return LocalDateTime.parse(date + \" \" + time, formatter);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 69
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    DeleteCommand(String message) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            index \u003d Integer.parseInt(message.substring(7));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"other\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"empty\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (index \u003e taskList.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"index\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            ui.formatDelete(taskList.getTaskList(), index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            taskList.remove(index - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                storage.updateFile(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 38
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    DoneCommand(String message) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            index \u003d Integer.parseInt(message.substring(5));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"other\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            System.out.println(\"List is empty! Please enter a valid command.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (index \u003e taskList.getSize() || index \u003c 1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            System.out.println(\"Invalid index! Please try again.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            taskList.getTaskList().get(index - 1).setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                storage.updateFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } catch (Exception e){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                System.out.println(\"OOPS!!! An IO exception has occurred.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            ui.formatDone(taskList.getTaskList(), index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * A chat bot cum task management application that can handle events, deadlines and normal to-do tasks,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * as well as basic exception handling."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private Duke(Path file) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        storage \u003d new Storage(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            storage.loadList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        new Duke(Paths.get(\"data\",\"todo_list.txt\")).run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 43,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * Custom exception class for all Duke-related exceptions."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private String type \u003d \"other\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    DukeException(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    DukeException(String input, String type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * code logic to determine the displayed message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String message \u003d \"An unknown exception has occurred.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String word \u003d input.trim().equals(\"event\") ? \"an \" : \"a \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (input.trim().equals(\"todo\") || input.trim().equals(\"event\") || input.trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            message \u003d \"OOPS!!! The description of \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    + word"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    + input.trim()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    + \" cannot be empty.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else if (!type.equals(\"other\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                        message \u003d \"OOPS!!! Event is missing a location.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                        message \u003d \"OOPS!!! Deadline is missing a deadline.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"io\": {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    message \u003d \"OOPS!!! An IO exception has occurred.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"empty\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    message \u003d \"List is empty! Please enter a valid command.\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"index\": {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    message \u003d \"Invalid index! Please try again.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return Ui.wrap(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 70
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 14
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private String query;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    FindCommand(String message) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            this.query \u003d message.substring(5);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"other\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d taskList.findTask(query);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ui.formatFind(res);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 25
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ui.formatList(taskList.getTaskList());"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    static Command parse(String message) throws DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (message.equals(\"bye\")){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else if (message.equals(\"list\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else if (message.length() \u003e\u003d 8 \u0026\u0026 message.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new DeleteCommand(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else if (message.length() \u003e\u003d 6 \u0026\u0026 message.substring(0,4).equals(\"find\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new FindCommand(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else if (message.length() \u003e\u003d 6 \u0026\u0026 message.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new DoneCommand(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            return new AddCommand(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 19
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private Path file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    Storage(Path file) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private ArrayList\u003cString\u003e formatFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            result.add(task.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private void writeFile(ArrayList\u003cString\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            Files.write(file, tasks, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private ArrayList\u003cString\u003e readFile() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        // reads file and returns an ArrayList of lines"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(file)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                result.add(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\", \"io\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void loadList(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        // loads data into list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ArrayList\u003cString\u003e data \u003d readFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        for (String line: data) convertString(taskList, line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private void convertString(TaskList taskList, String s) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        // converts a line (String) into a task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String type \u003d s.substring(1,2); // T, D or E"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            boolean isDone \u003d s.substring(4,5).equals(\"v\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            String addendum;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    description \u003d s.substring(7);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    if (isDone) todo.setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"E\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    String[] sections \u003d s.substring(7).split(\"at:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    description \u003d sections[0].substring(0, sections[0].length() - 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    addendum \u003d sections[1].substring(1, sections[1].length() - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    Event event \u003d new Event(description, addendum);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    if (isDone) event.setDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                case \"D\": {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    String[] sections \u003d s.substring(7).split(\"by:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    description \u003d sections[0].substring(0, sections[0].length() - 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    addendum \u003d sections[1].substring(1, sections[1].length() - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, addendum);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    if (isDone) deadline.setDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void updateFile(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        writeFile(formatFile(taskList.getTaskList()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 97
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * Task class used in Duke. Extended by Event, To-Do, and Deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return (isDone ? \"v\" : \"x\"); // returns ticks (v) and crosses (x)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * method used to return a String representation of the Task, as displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     * on the command line / in todo_list.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + this.getStatusIcon()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void remove(int index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void add(Task t) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    ArrayList\u003cTask\u003e findTask(String query){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        for (Task t: list){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            if (t.description.contains(query)) result.add(t);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    int getSize(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void showWelcomeMessage(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + wrap(\"What can I do for you?\\n\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void showByeMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void showError(DukeException e){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    static String wrap(String content) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        return (\"\\n__________________________________\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + content"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"\\n__________________________________\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void formatFind(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            result.append(\"No such results!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            result.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                result.append(i + 1)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                        .append(list.get(i).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                if (i !\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    result.append(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(result.toString()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void formatList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            result.append(i + 1)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    .append(\". \")"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                    .append(list.get(i).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            if (i !\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                result.append(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "            result.append(\"The list is empty!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(result.toString()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void formatDone(ArrayList\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String result \u003d \"Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + list.get(index - 1).toString()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(result));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void formatDelete(ArrayList\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String word \u003d (list.size() \u003d\u003d 2) ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String result \u003d \"Noted! I\u0027ve removed this task:\\n \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + list.get(index - 1).toString()"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"Now you have \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + (list.size() - 1)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + word"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \" in the list.\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(result));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    void formatAdd(ArrayList\u003cTask\u003e list, Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String word \u003d (list.size() \u003d\u003d 1) ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + list.size()"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + word"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "                + \" in the list.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "        System.out.println(wrap(result));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rohan-av"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rohan-av"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rohan-av": 102
    }
  }
]

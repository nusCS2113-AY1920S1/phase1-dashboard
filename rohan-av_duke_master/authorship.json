[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 15,
      "Rohan Arya Varma": 14
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rohan Arya Varma": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * A task management application that can handle events, deadlines and normal to-do tasks,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * as well as basic exception handling."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * main function to execute Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * @param args standard params"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * @throws DukeException a custom exception class for all Duke-related exceptions"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo + wrap(\"What can I do for you?\\n\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        handleCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void handleCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            loadList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            System.out.println(wrap(e.getMessage()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                //to terminate the program"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                System.out.println(wrap(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                //to print out the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                System.out.println(formatList(list));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            } else if (command.length() \u003e\u003d 6 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                //to mark tasks as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                int index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(\"List is empty! Please try again.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                if (index \u003e list.size() || index \u003c 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(\"Invalid index! Please try again.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.get(index - 1).setDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                        updateFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    } catch (Exception e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                        System.out.println(\"OOPS!!! An IO exception has occurred.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(formatDone(list, index));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                //to handle regular commands"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    addTask(command);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    updateFile();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                } catch (DukeException e){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(wrap(e.getMessage()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static String wrap(String content) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return (\"\\n__________________________________\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + content"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \"\\n__________________________________\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static String formatList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            result.append(i + 1)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    .append(\". \")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    .append(list.get(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            if (i !\u003d list.size() - 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                result.append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            result.append(\"The list is empty!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return wrap(result.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static String formatDone(ArrayList\u003cTask\u003e list, int index) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String result \u003d \"Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + list.get(index - 1).toString()"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return wrap(result);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static String formatAdd(Task task) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String word \u003d (list.size() \u003d\u003d 1) ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String result \u003d \"Got it. I\u0027ve added this task:\\n  \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \"\\nNow you have \""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + list.size()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + word"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \" in the list.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return wrap(result);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static ArrayList\u003cString\u003e formatFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            result.add(task.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void writeFile(ArrayList\u003cString\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        Path file \u003d Paths.get(\"data\",\"todo_list.txt\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            Files.write(file, tasks, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static ArrayList\u003cString\u003e readFile() throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        // reads file and returns an ArrayList of lines"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        try (BufferedReader br \u003d Files.newBufferedReader(Paths.get(\"data\", \"todo_list.txt\"))) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                result.add(line);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            throw new DukeException(\"\", \"io\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void loadList() throws DukeException {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        // loads data into list"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        ArrayList\u003cString\u003e data \u003d readFile();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        for (String line: data) convertString(line);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void convertString(String s) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        // converts a line (String) into a task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            String type \u003d s.substring(1,2); // T, D or E"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            boolean isDone \u003d s.substring(4,5).equals(\"v\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            String addendum;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    description \u003d s.substring(7);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    if (isDone) todo.setDone();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"E\": {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    String[] sections \u003d s.substring(7).split(\"at:\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    description \u003d sections[0].substring(0, sections[0].length() - 2);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    addendum \u003d sections[1].substring(1, sections[1].length() - 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    Event event \u003d new Event(description, addendum);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    if (isDone) event.setDone();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"D\": {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    String[] sections \u003d s.substring(7).split(\"by:\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    description \u003d sections[0].substring(0, sections[0].length() - 2);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    addendum \u003d sections[1].substring(1, sections[1].length() - 1);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, addendum);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    if (isDone) deadline.setDone();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            throw new DukeException(\"\",\"io\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void updateFile() throws DukeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        writeFile(formatFile(list));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private static void addTask(String command) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String identifier;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            identifier \u003d command.substring(0, 4);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            throw new DukeException(command); //length is less than 4"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        switch (identifier) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                ToDo todo;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                if (command.length() \u003c 5 || !command.substring(4,5).equals(\" \")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    todo \u003d new ToDo(command.trim().substring(5));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(todo);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(formatAdd(todo));"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command, \"todo\"); //empty to-do"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            case \"dead\": {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                if (command.length() \u003c 9 || !command.substring(4,9).equals(\"line \")) { //exception if not fully spelt"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                Deadline deadline;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    String[] sections \u003d command.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    deadline \u003d new Deadline(sections[0], sections[1]);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(deadline);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(formatAdd(deadline));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command,\"deadline\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            case \"even\": {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                if (command.length() \u003c 6 || !command.substring(4,6).equals(\"t \")) { //exception if not fully spelt"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                Event event;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    String[] sections \u003d command.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    event \u003d new Event(sections[0], sections[1]);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    list.add(event);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    System.out.println(formatAdd(event));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    throw new DukeException(command, \"event\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                throw new DukeException(command);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 8,
      "Rohan Arya Varma": 249
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * Custom exception class for all Duke-related exceptions."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    private String type \u003d \"other\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    DukeException(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    DukeException(String input, String type) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * code logic to determine the displayed message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String message \u003d \"An unknown exception has occurred.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        String word \u003d input.trim().equals(\"event\") ? \"an \" : \"a \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        if (input.trim().equals(\"todo\") || input.trim().equals(\"event\") || input.trim().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            message \u003d \"OOPS!!! The description of \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    + word"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    + input.trim()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    + \" cannot be empty.\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } else if (!type.equals(\"other\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                        message \u003d \"OOPS!!! Event is missing a location.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                        message \u003d \"OOPS!!! Deadline is missing a deadline.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                case \"io\": {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    message \u003d \"OOPS!!! An IO exception has occurred.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                    message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "            message \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rohan Arya Varma": 62
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rohan Arya Varma": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * Task class used in Duke. Extended by Event, To-Do, and Deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return (isDone ? \"v\" : \"x\"); // returns ticks (v) and crosses (x)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * method used to return a String representation of the Task, as displayed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     * on the command line / in todo_list.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return \"[\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + this.getStatusIcon()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rohan Arya Varma": 34
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Rohan Arya Varma"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Rohan Arya Varma": 11
    }
  }
]

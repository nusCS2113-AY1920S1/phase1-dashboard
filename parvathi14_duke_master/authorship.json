[
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Converts date and time inputted by user into ordinal date format and 24 hour time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Adapted from:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    https://stackoverflow.com/questions/6810336/is-there-a-way-in-java-to-convert-an-integer-to-its-ordinal"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    http://www.java2s.com/Code/Java/Data-Type/FulllengthofmonthnameSimpleDateFormatMMMM.htm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    https://www.mkyong.com/java/how-to-convert-string-to-date-java/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param inputDate date inputted by user, if any"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param time time inputted by user, if any"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param actual entire date-time string inputted by user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return date-time in ordinal date and 24-hour time format"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static String test(String inputDate, String time, String actual) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String dateInString \u003d inputDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String ans \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        //String time \u003d \"1800\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String _24HourTime \u003d time;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            SimpleDateFormat _24HourSDF \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            SimpleDateFormat _12HourSDF \u003d new SimpleDateFormat(\"hh:mm a\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Date _24HourDt \u003d _24HourSDF.parse(_24HourTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(_24HourDt);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(_12HourSDF.format(_24HourDt));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Date date \u003d formatter.parse(dateInString);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format monthFormatter \u003d new SimpleDateFormat(\"MMMM\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format yearFormatter \u003d new SimpleDateFormat(\"yyyy\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format dateFormatter \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String updatedDate \u003d dateFormatter.format(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            int updatedDate \u003d Integer.parseInt(dateFormatter.format(date));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String year \u003d yearFormatter.format(date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String month \u003d monthFormatter.format(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String ordinalDate \u003d ordinal(updatedDate);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(month);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            ans \u003d ordinalDate + \" of \" + month + \" \" + year + \", \" + _12HourSDF.format(_24HourDt);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            ans \u003d actual;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return ans;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param i day of the month"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return day of the month as an ordinal number"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static String ordinal(int i) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String[] suffixes \u003d new String[] { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\" };"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        switch (i % 100) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 13:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                return i + \"th\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                return i + suffixes[i % 10];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 78
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Creates a new Deadline in the Task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Starts up and runs Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private List\u003cTask\u003e myTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private String[] Args;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Prepares Duke for run: involves loading file from hard disk"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param filePath location of file on hard disk"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Duke (String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            myTasks \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Runs Duke: Calls classes that read and execute the commands inputted by the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        saveToFile trial \u003d new saveToFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String line \u003d new String();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                line \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (line.equals(\"no input\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                new executeCommand(line, myTasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                isExit \u003d executeCommand.result();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                //DukeException error \u003d new DukeException(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                //error.toPrint();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            trial.test(Args, myTasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        //System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        new Duke(\"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 62,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Sends exception message if an invalid input is keyed in by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public DukeException(String task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Prints the respective error message depending on the type of error"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void toPrint() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (!this.task.equals(\"list\") \u0026\u0026 !this.task.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (this.task.equals(\"todo\") || this.task.equals(\"deadline\") || this.task.equals(\"event\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"\\u2639\" + \" OOPS!!! The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Creates a new Event in the Task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 16
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Loads the existing list in the file saved on the hard disk every time Duke starts up."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private List existingList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private List\u003cTask\u003e myTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Reads file saved on hard disk"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param filePath location of file on hard disk"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        readFromFile read \u003d new readFromFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            this.existingList \u003d read.readByJava8(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"Oops! Something went wrong :(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Loads data from saved file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return list created from existing data on the file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public List\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (file.length() !\u003d 3) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            for (int n \u003d 0; n !\u003d existingList.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                //System.out.println((n + 1) + \". \" + existingList.get(n));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String newInput \u003d (String) existingList.get(n);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] existingTasks \u003d newInput.split(\"\\\\[\", 3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] existingDescription \u003d existingTasks[2].split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                Task t \u003d new existingFile(existingDescription[1], existingTasks[1].charAt(0));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.add(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (existingTasks[2].charAt(0) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    //myTasks.get(n).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            return myTasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        // return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return myTasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 57
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Custom datatype class consisting of a String which notes the description of the task and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * a boolean variable that keeps track of whether the task has been completed or not."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    // protected char typeOfTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Creates new task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @param description description of new task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        // this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Returns respective icon depending on the status of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return status icon"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Marks the respective task as \u0027Done\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Creates a new Todo task in the Task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Checks if there is any commands inputted by the user and reads it in."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private Scanner input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Prints out welcome message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        System.out.println(\"Hello!, I\u0027m Duke \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Checks if there is a line inputted by the user and reads the input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return the inputted line or \"no input\" if there is no input line"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (input.hasNextLine()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            line \u003d new String(input.nextLine());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            line \u003d \"no input\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 38
    }
  },
  {
    "path": "src/main/java/executeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Reads the input from user and executes the corresponding commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class executeCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private static boolean ans \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    DateTime dateAndTime \u003d new DateTime();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    //private boolean ans \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public executeCommand(String line, List\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            ans \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            for (int n \u003d 0; n !\u003d myTasks.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println((n + 1) + \". \" + myTasks.get(n).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            ans \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String[] arrOfStr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (arrOfStr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                int element \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.get(element).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + myTasks.get(element).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (arrOfStr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                int element \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + myTasks.get(element).toString()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        + \"\\n\" + \"Now you have \" + (myTasks.size()-1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.remove(element);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (arrOfStr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                int count \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                for (int n \u003d 0; n !\u003d myTasks.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String search \u003d myTasks.get(n).toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    if (search.contains(arrOfStr[1])) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        if (count \u003d\u003d 0) {System.out.println(\"Here are the matching tasks in your list:\");}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        count +\u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        System.out.println(count + \". \" + myTasks.get(n).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println(\"Sorry, no matches were found\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (arrOfStr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                Task t \u003d new Todo(arrOfStr[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.add(t);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (arrOfStr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] deadline \u003d arrOfStr[1].split(\"/\", 2); // could split by \u0027/by \u0027?"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] date \u003d deadline[1].split(\" \", 3);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String formattedDate \u003d dateAndTime.test(date[1], date[2], deadline[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                Task t \u003d new Deadline(deadline[0], formattedDate);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (arrOfStr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] event \u003d arrOfStr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] time \u003d event[1].split(\" \", 3);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String formattedDate \u003d dateAndTime.test(time[1], time[2], event[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                Task t \u003d new Event(event[0], formattedDate);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                        \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                DukeException error \u003d new DukeException(arrOfStr[0]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                error.toPrint();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            DukeException error \u003d new DukeException(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            error.toPrint();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * Returns boolean variable indicating whether Duke should continue running or not."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     * @return status of Duke run"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static boolean result() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return ans;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 89
    }
  },
  {
    "path": "src/main/java/existingFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Converts the Strings in the saved file on the hard disk into a list in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class existingFile extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected char taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public existingFile(String description, char taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 16
    }
  },
  {
    "path": "src/main/java/readFromFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Reads the list from the file saved on the hard disk."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author parvathi14-reused"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "// Reused from: https://www.mkyong.com/java/java-how-to-read-a-file-into-a-list/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class readFromFile {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /*public static void test(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String FILENAME \u003d \"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            List list \u003d readByJava8(FILENAME);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //return list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //list.forEach(System.out::println);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static List readByJava8(String FILENAME) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        List\u003cString\u003e result;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try (Stream\u003cString\u003e lines \u003d Files.lines(Paths.get(FILENAME))) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            result \u003d lines.collect(Collectors.toList());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 42,
      "-": 1
    }
  },
  {
    "path": "src/main/java/saveToFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " * Saves the list on Duke to a file on the hard disk."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "// @@author parvathi14-reused"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "// Reused from: https://www.mkyong.com/java/how-to-append-content-to-file-in-java/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class saveToFile {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private static final String FILENAME \u003d \"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static void test (String[] args, List\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        BufferedWriter bw \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String data \u003d \"This i new content\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            File file \u003d new File(FILENAME);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            fw \u003d new FileWriter(file.getAbsoluteFile()); //appends: adds to existing file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //bw.write(data);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            /*for(Task list: myTasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                bw.write(list + System.lineSeparator()); // no index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            for (int n \u003d 0; n !\u003d myTasks.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                bw.write((n+1) + \". \" + myTasks.get(n).toString() + \"\\n\"); // has index like list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(\"Done\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (bw !\u003d null)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    bw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (fw !\u003d null)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 54,
      "-": 1
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Task TodoTest \u003d new Todo(\"Todo test\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Task DeadlineTest \u003d new Deadline(\"Deadline test\", \"2/12/2019 1800\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Task EventTest \u003d new Event(\"Event test\", \"Monday 6pm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        assertEquals(TodoTest.toString(), \"[T][\\u2718] Todo test\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        assertEquals(DeadlineTest.toString(),\"[D][\\u2718] Deadline test (by: 2/12/2019 1800)\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        assertEquals(EventTest.toString(),\"[E][\\u2718] Event test (at: Monday 6pm)\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 18
    }
  }
]

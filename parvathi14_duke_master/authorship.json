[
  {
    "path": "src/main/java/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Reference taken from:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    https://stackoverflow.com/questions/6810336/is-there-a-way-in-java-to-convert-an-integer-to-its-ordinal"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    http://www.java2s.com/Code/Java/Data-Type/FulllengthofmonthnameSimpleDateFormatMMMM.htm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    https://www.mkyong.com/java/how-to-convert-string-to-date-java/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static String test(String inputDate, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String dateInString \u003d inputDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String ans \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        //String time \u003d \"1800\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String _24HourTime \u003d time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            SimpleDateFormat _24HourSDF \u003d new SimpleDateFormat(\"HHmm\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            SimpleDateFormat _12HourSDF \u003d new SimpleDateFormat(\"hh:mm a\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Date _24HourDt \u003d _24HourSDF.parse(_24HourTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(_24HourDt);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(_12HourSDF.format(_24HourDt));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Date date \u003d formatter.parse(dateInString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format monthFormatter \u003d new SimpleDateFormat(\"MMMM\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format yearFormatter \u003d new SimpleDateFormat(\"yyyy\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            Format dateFormatter \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String updatedDate \u003d dateFormatter.format(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            int updatedDate \u003d Integer.parseInt(dateFormatter.format(date));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String year \u003d yearFormatter.format(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String month \u003d monthFormatter.format(date);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String ordinalDate \u003d ordinal(updatedDate);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(month);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            ans \u003d ordinalDate + \" of \" + month + \" \" + year + \", \" + _12HourSDF.format(_24HourDt);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return ans;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static String ordinal(int i) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String[] suffixes \u003d new String[] { \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\" };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        switch (i % 100) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 11:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 12:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            case 13:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                return i + \"th\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                return i + suffixes[i % 10];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 62
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static void main (String[] args) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        List\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        saveToFile trial \u003d new saveToFile();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        File file \u003d new File(\"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        //System.out.println(file.length());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        readFromFile read \u003d new readFromFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        DateTime dateAndTime \u003d new DateTime();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        //dateAndTime.date(args,\"07/06/2019\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        List existingList \u003d read.readByJava8(\"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        /*System.out.println(existingList.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String str \u003d (String) existingList.get(0);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (str \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"ok\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (file.length() !\u003d 3) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            for (int n \u003d 0; n !\u003d existingList.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                //System.out.println((n + 1) + \". \" + existingList.get(n));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String newInput \u003d (String) existingList.get(n);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] existingTasks \u003d newInput.split(\"\\\\[\", 3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] existingDescription \u003d existingTasks[2].split(\" \", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                Task t \u003d new existingFile(existingDescription[1], existingTasks[1].charAt(0));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                myTasks.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (existingTasks[2].charAt(0) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    //myTasks.get(n).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        System.out.println(\"Hello!, I\u0027m Duke \\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        while(input.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String s \u003d new String(input.nextLine());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String[] arrOfStr \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            String line \u003d new String(input.nextLine());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                for (int n \u003d 0; n !\u003d myTasks.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println((n + 1) + \". \" + myTasks.get(n).toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                String[] arrOfStr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (arrOfStr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    int element \u003d Integer.parseInt(arrOfStr[1]) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    myTasks.get(element).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + myTasks.get(element).toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    //continue;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                } else if (arrOfStr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    Task t \u003d new Todo(arrOfStr[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    myTasks.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                            \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                } else if (arrOfStr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String[] deadline \u003d arrOfStr[1].split(\"/\", 2); // could split by \u0027/by \u0027?"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String[] date \u003d deadline[1].split(\" \", 3);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String formattedDate \u003d dateAndTime.test(date[1], date[2]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    Task t \u003d new Deadline(deadline[0], formattedDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    myTasks.add(t);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                            \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                } else if (arrOfStr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String[] event \u003d arrOfStr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String[] time \u003d event[1].split(\" \", 3);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    String formattedDate \u003d dateAndTime.test(time[1], time[2]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    Task t \u003d new Event(event[0], formattedDate);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    myTasks.add(t);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.toString() +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                            \"\\n\" + \"Now you have \" + myTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    DukeException error \u003d new DukeException(arrOfStr[0]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    error.toPrint();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                DukeException error \u003d new DukeException(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                error.toPrint();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            trial.test(args, myTasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 102,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public DukeException(String task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void toPrint() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        if (this.task.equals(\"todo\") || this.task.equals(\"deadline\") || this.task.equals(\"event\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"\\u2639\" + \" OOPS!!! The description of a \" + task + \" cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            System.out.println(\"\\u2639\" + \" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    // protected char typeOfTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        // this.typeOfTask \u003d typeOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 23
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 10
    }
  },
  {
    "path": "src/main/java/existingFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class existingFile extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    protected char taskType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public existingFile(String description, char taskType) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 12
    }
  },
  {
    "path": "src/main/java/readFromFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Took reference from: https://www.mkyong.com/java/java-how-to-read-a-file-into-a-list/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class readFromFile {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    /*public static void test(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        String FILENAME \u003d \"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            List list \u003d readByJava8(FILENAME);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //return list;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //list.forEach(System.out::println);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static List readByJava8(String FILENAME) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        List\u003cString\u003e result;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try (Stream\u003cString\u003e lines \u003d Files.lines(Paths.get(FILENAME))) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            result \u003d lines.collect(Collectors.toList());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 38
    }
  },
  {
    "path": "src/main/java/saveToFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    Took reference from: https://www.mkyong.com/java/how-to-append-content-to-file-in-java/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "parvathi14"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "public class saveToFile {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    private static final String FILENAME \u003d \"C:\\\\Users\\\\parva\\\\Desktop\\\\Level 7 - Save.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    public static void test (String[] args, List\u003cTask\u003e myTasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        BufferedWriter bw \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //String data \u003d \"This i new content\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            File file \u003d new File(FILENAME);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            fw \u003d new FileWriter(file.getAbsoluteFile()); //appends: adds to existing file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //bw.write(data);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            /*for(Task list: myTasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                bw.write(list + System.lineSeparator()); // no index"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }*/"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            for (int n \u003d 0; n !\u003d myTasks.size(); n +\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                bw.write((n+1) + \". \" + myTasks.get(n).toString() + \"\\n\"); // has index like list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "parvathi14"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            //System.out.println(\"Done\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (bw !\u003d null)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    bw.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                if (fw !\u003d null)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "parvathi14"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "parvathi14": 52
    }
  }
]

[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.TaskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "     * A Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static String TAB \u003d \"    \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static String LINE \u003d TAB + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static String filePath \u003d \"C:/Users/josep/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        parser \u003d new Parser(ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showDukeError(e); //save corrupted exception"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui.printHelloMsg();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            parser.carryOutCommand(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showDukeError(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui.printByeMsg();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 46,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "     * Exceptions specific to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected ErrorType errorType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    DukeException(ErrorType errorType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public ErrorType getErrorType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return errorType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 14
    }
  },
  {
    "path": "src/main/java/ErrorType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public enum ErrorType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    EMPTY_TODO, EMPTY_DEADLINE, EMPTY_EVENT, UNKNOWN_COMMAND, UNKNOWN_ERROR, SAVE_CORRUPTED, EMPTY_FIND, EMPTY_DELETE, EMPTY_FIELD"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 3
    }
  },
  {
    "path": "src/main/java/FileWriting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class FileWriting {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        String file2 \u003d \"C:/Users/josep/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            writeToFile(file2, \"first line\" + System.lineSeparator() + \"second line\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    public static /*Command*/ String parse(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        return fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Parser(Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void carryOutCommand(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            input \u003d readInput(scanner);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (input.isBlank()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_FIELD);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                ui.printList(taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                tryMarkDone(input, taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                tryDeleteTask(input, taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                tryFindTask(input, taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                tryAddTask(input, taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            else if (input.startsWith(\"print date\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//                Task.Deadline deadline \u003d (Task.Deadline) taskList.get(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//                deadline.printDate();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private String readInput(Scanner scanner) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String commands \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void markDone(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        Integer taskNum \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        Task currentTask \u003d (Task) taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        currentTask.setDoneStatus(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui.printDoneMsg(currentTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void tryMarkDone(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            markDone(input, taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showNumberFormatException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void addTask (String input, TaskList taskList) throws DukeException, IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String taskType \u003d words[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (input.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_TODO);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                ToDo todo \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                ui.printAddMsg(todo, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } case \"deadline\": {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            Deadline deadline;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (input.substring(8).isBlank()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String[] deadlineArray \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (deadlineArray[1].isBlank()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            deadline \u003d new Deadline(deadlineArray[0], deadlineArray[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.printAddMsg(deadline, taskList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } case \"event\": {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            Event event;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (input.substring(5).isBlank()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_EVENT);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String[] eventArray \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (eventArray[1].isBlank()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.EMPTY_EVENT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            event \u003d new Event(eventArray[0], eventArray[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.printAddMsg(event, taskList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            throw new DukeException(ErrorType.UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void tryAddTask (String input, TaskList taskList) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            addTask(input, taskList);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showDukeError(e);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showIOExceptionError(e);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void deleteTask (String input, TaskList taskList) throws IOException, DukeException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        if (input.substring(6).isBlank()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            throw new DukeException(ErrorType.EMPTY_DELETE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        Integer taskNum \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        Task currentTask \u003d (Task) taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList.remove(currentTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui.printDeleteMsg(currentTask, taskList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void tryDeleteTask(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            deleteTask(input, taskList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showDukeError(e); //only empty delete error"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showNumberFormatException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showIOExceptionError(e);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void findTask(String input, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        if (input.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            throw new DukeException(ErrorType.EMPTY_FIND);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String keyWord \u003d input.substring(5);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String command \u003d t.getCommand();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (command.contains(keyWord)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                findList.add(t);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        ui.printFindMsg(findList);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void tryFindTask(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            findTask(input, taskList);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            ui.showDukeError(e); //only EMPTY_FIND error"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 175
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public TaskList load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String currentInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (currentInput.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                String[] todoArray \u003d currentInput.split(\" \\\\| \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                ToDo toDo \u003d new ToDo(todoArray[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                if (todoArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    toDo.setDoneStatus(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    toDo.setDoneStatus(false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                taskList.add(toDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            else if (currentInput.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                String[] deadlineArray \u003d currentInput.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Deadline deadline \u003d new Deadline(deadlineArray[2], deadlineArray[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                if (deadlineArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    deadline.setDoneStatus(true);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    deadline.setDoneStatus(false);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                taskList.add(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            else if (currentInput.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                String[] eventArray \u003d currentInput.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Event event \u003d new Event(eventArray[2], eventArray[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                if (eventArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    event.setDoneStatus(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    event.setDoneStatus(false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                taskList.add(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                throw new DukeException(ErrorType.SAVE_CORRUPTED);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void save(TaskList modifiedList) throws IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList \u003d modifiedList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String formattedList \u003d new String();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            Task currentTask \u003d (Task) taskList.get(i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String taskType \u003d currentTask.getTaskType();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (taskType.equals(\"D\") || taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                formattedList \u003d formattedList + currentTask.getTaskType() + \" | \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + (currentTask.getDoneStatus() ? 1 : 0) + \" | \""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + currentTask.getCommand() + \" | \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + currentTask.getDate()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                formattedList \u003d formattedList + currentTask.getTaskType() + \" | \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + (currentTask.getDoneStatus() ? 1 : 0) + \" | \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + currentTask.getCommand()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        FileWriting.writeToFile(filePath, formattedList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 84
    }
  },
  {
    "path": "src/main/java/Task/DateValidation.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class DateValidation{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public static boolean validateJavaDate(String date)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "         * Set preferred date format,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "         * For example MM-dd-yyyy, MM.dd.yyyy,dd.MM.yyyy etc.*/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"DD/mm/yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        simpleDateFormat.setLenient(false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        /* Create Date object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "         * parse the string into date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "         */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            Date javaDate \u003d simpleDateFormat.parse(date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            System.out.println(date + \" is valid date format\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        /* Date format is invalid */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        catch (ParseException e)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//            System.out.println(date + \" is Invalid Date format\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        /* Return true if date format is valid */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    public static void main(String args[]){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        validateJavaDate(\"2/12/2019 1800\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        validateJavaDate(\"12-29-2016\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        validateJavaDate(\"12,29,2016\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        validateJavaDate(\"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 38
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super.taskType \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super.date \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        checkDate();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void checkDate() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String[] byArray \u003d by.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String date \u003d byArray[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            String time \u003d byArray[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            if (DateValidation.validateJavaDate(by) \u003d\u003d true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                String[] dateArray \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Integer year \u003d Integer.parseInt(dateArray[2]) - 1900;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Integer month \u003d Integer.parseInt(dateArray[1]) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Integer day \u003d Integer.parseInt(dateArray[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Integer hours \u003d Integer.parseInt(time.substring(0, 2));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Integer minutes \u003d Integer.parseInt(time.substring(3, 4));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                this.date \u003d new Date(year, month, day, hours, minutes);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            System.out.println(\"     This date cannot be converted.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printDate() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        System.out.println(\"Current date is \" + this.date); ;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 45
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private String on;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Event(String description, String on) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super.taskType \u003d \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super.date \u003d on;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + on + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 20
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Task(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void setCommand(String command) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void setDoneStatus(boolean done) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 45
    }
  },
  {
    "path": "src/main/java/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public TaskList(TaskList storageList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList \u003d storageList.getTaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        taskList \u003d taskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void remove(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        this.taskList.remove(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Task get(Integer index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Integer size() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 43
    }
  },
  {
    "path": "src/main/java/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        super.taskType \u003d \"T\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jwyf"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jwyf"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static String TAB \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static String LINE \u003d TAB + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private static Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        //empty constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    public String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        String commands \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        return commands;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    public void showLoadingError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//        System.out.println(\"Duke exception error\"); //Error for Duke"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jwyf"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void showFileNotFoundError() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" File not found exception, an empty list is loaded\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void showIOExceptionError(Exception e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" There is an IOException error: \" + e.getMessage()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                + \" when writing to file\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void showNumberFormatException() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Invalid format entered! Please try again.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void showIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Invalid task number entered! Please try again.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        String dukeErrorMsg \u003d TAB + \" Duke exception error: \" + e.getErrorType();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        switch (e.getErrorType()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_TODO: {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_DEADLINE: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_EVENT: {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case UNKNOWN_COMMAND: {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case UNKNOWN_ERROR: {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! I\u0027m sorry, we encountered an unknown error!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case SAVE_CORRUPTED: {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" Your saved list is corrupted, there are unreadable entries\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                    TAB + \" An empty list is loaded\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_FIELD: {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" The field cannot be blank\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_DELETE: {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! The delete field cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        case EMPTY_FIND: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            printWithLine(dukeErrorMsg, TAB + \" ☹ OOPS!!! The find field cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    private void printWithLine(String ...content) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        for (String s : content) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            System.out.println(s);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printHelloMsg() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Hello! I\u0027m Duke\\n\" + TAB + \" What can I do for you?\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printByeMsg() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            System.out.println(TAB + \" The list is currently empty, please add a new task!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            System.out.println(TAB + \" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                Task currentTask \u003d (Task) taskList.get(i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                System.out.println(TAB + \" \" + (i + 1) + \". \" + currentTask.toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printAddMsg(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Got it. I\u0027ve added this task: \", TAB + \"   \" + task.toString(),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                TAB + \" Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printDeleteMsg(Task currentTask, TaskList taskList) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Noted. I\u0027ve removed this task: \", TAB + \"   \" + currentTask.toString(),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                TAB + \" Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printDoneMsg(Task currentTask) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printWithLine(TAB + \" Nice! I\u0027ve marked this task as done: \", TAB + \"   [\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jwyf"
        },
        "content": "                + currentTask.getStatusIcon() + \"] \" + currentTask.getCommand());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    public void printFindMsg(ArrayList findList) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        System.out.println(TAB + \" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.size(); i++) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            Task currentTask \u003d (Task) findList.get(i);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jwyf"
        },
        "content": "            System.out.println(TAB + \" \" + (i + 1) + \". \" + currentTask.toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jwyf"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jwyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jwyf"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jwyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jwyf": 139
    }
  }
]

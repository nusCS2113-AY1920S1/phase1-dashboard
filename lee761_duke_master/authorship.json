[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "lee761": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String extra() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \" by: \" + by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String saveTxt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\"D | \" + super.getStatusIcon() + \" | \" + super.description + extra() + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Parser parsing;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Task[] list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void run() throws FileNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui.showStartup();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui.line();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "        list \u003d storage.readFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "        tasks \u003d new TaskList(storage, list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        parsing \u003d new Parser(tasks, ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int y \u003d Storage.y;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui.line();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "                DukeException.checkInput(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "            parsing.parse(input, y);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "            input \u003d ui.readInput();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lee761"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "lee761": 38
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    // To catch invalid inputs"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    static void checkInput(String in) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String[] inputs \u003d {\"todo\", \"deadline\", \"event\", \"list\", \"done\", \"delete\", \"find\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "        boolean checker \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "        for (int i \u003d 0; i \u003c inputs.length; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "            if (in.contains(inputs[i])) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "                checker \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (in.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "            throw new DukeException(\"Task cannot be empty. Please type a task.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        else if (!checker) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "    // To catch invalid \"done\" task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    static void checkTask(Task[] Ta, int x, int size) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (x \u003e\u003d size || x \u003c 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There is no such task to be done. Please enter a valid task number.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "            Task checkTa \u003d Ta[x];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": "            if (checkTa.status()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "                throw new DukeException(\"This task has been done.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lee761"
        },
        "content": "    // To catch invalid task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lee761"
        },
        "content": "    static void checkCmd(String[] t) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (t.length \u003c 2 || t[1].isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lee761"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 44
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String extra() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \" at: \" + at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String saveTxt() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\"E | \" + super.getStatusIcon() + \" | \" + super.description + extra() + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 27
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Storage save;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Parser(TaskList tasklist, Ui ui) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void parse(String input, int y) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ui.line();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.listTask(y);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.doneTask(input, y);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.deleteTask(input, y);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.findTask(input, y);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.addTodo(input, y);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.addDeadline(input, y);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasklist.addEvent(input, y);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 31
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public static int y;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    void saveToFile(Task[] tasks, int x) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "            File file \u003d new File(\"D:\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "            PrintWriter output \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "            for (int t \u003d 0; t \u003c x; t++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "                output.append(tasks[t].saveTxt());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "            output.flush();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "    Task[] readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Scanner in \u003d new Scanner(new File(\"D:\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": "        y \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lee761"
        },
        "content": "            while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lee761"
        },
        "content": "                String a \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "                String[] arr \u003d a.split(Pattern.quote(\" | \"), 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lee761"
        },
        "content": "                if (arr[0].contains(\"T\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    ToDo todo \u003d new ToDo(arr[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    tasks[y] \u003d todo;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    if (arr[1].contains(\"✘\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        todo.isDone \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lee761"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lee761"
        },
        "content": "                else if (arr[0].contains(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    String[] temp_arr \u003d arr[2].split(Pattern.quote(\"by:\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    Deadline Dl \u003d new Deadline(temp_arr[0], temp_arr[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    tasks[y] \u003d Dl;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    if (arr[1].contains(\"✘\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        Dl.isDone \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        Dl.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lee761"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lee761"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    String[] temp_arr \u003d arr[2].split(Pattern.quote(\"at:\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    Event Ev \u003d new Event(temp_arr[0], temp_arr[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    tasks[y] \u003d Ev;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    if (arr[1].contains(\"✘\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        Ev.isDone \u003d false;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lee761"
        },
        "content": "                        Ev.markAsDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lee761"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lee761"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lee761"
        },
        "content": "                System.out.println(++y + \". \" + a);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lee761"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 73
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (isDone ? \"✔\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String saveTxt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public boolean status() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 33
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Storage save;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private Task[] tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private int x \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public TaskList(Storage save, Task[] list) throws FileNotFoundException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.tasks \u003d list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "        this.save \u003d save;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void listTask(int y) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        for (int i \u003d 0; i \u003c (x + y); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "            Task cmd \u003d tasks[i];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(++count + \". \" + cmd.taskType() + \"[\" + cmd.getStatusIcon() + \"] \" + cmd.description + cmd.others());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void doneTask(String input, int y) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String[] taskNum \u003d input.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int num \u003d Integer.parseInt(taskNum[1]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "            DukeException.checkTask(tasks, num, x+y);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "            Task t \u003d tasks[num];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + t.taskType() + \"[\" + t.getStatusIcon() + \"] \" + t.description + t.others());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lee761"
        },
        "content": "            save.saveToFile(tasks, (x + y));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void deleteTask(String input, int y) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String[] taskNum \u003d input.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int num \u003d Integer.parseInt(taskNum[1]) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Task t \u003d tasks[num];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lee761"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lee761"
        },
        "content": "        for (int k \u003d 0; k \u003c x + y; k++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lee761"
        },
        "content": "            list.add(tasks[k]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lee761"
        },
        "content": "        list.remove(num);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lee761"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasks[i] \u003d list.get(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lee761"
        },
        "content": "        x \u003d x - 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + t.taskType() + \"[\" + t.getStatusIcon() + \"] \" + t.description + t.others() + \"\\nNow you have \" + (x + y) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lee761"
        },
        "content": "        save.saveToFile(tasks, (x + y));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void findTask(String input, int y) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int count  \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String[] findTask \u003d input.split(\" \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lee761"
        },
        "content": "        for (int i \u003d 0; i \u003c x + y; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lee761"
        },
        "content": "            if (tasks[i].description.contains(findTask[1])) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lee761"
        },
        "content": "                System.out.print(++count + \". \" + tasks[i].taskType() + \"[\" + tasks[i].getStatusIcon() + \"] \" + tasks[i].description + tasks[i].others() + \"\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"There are no such task in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void addTodo(String input, int y) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lee761"
        },
        "content": "            String[] taskOne \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lee761"
        },
        "content": "            DukeException.checkCmd(taskOne);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lee761"
        },
        "content": "            ToDo newTodo \u003d new ToDo(taskOne[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasks[x+y] \u003d newTodo;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lee761"
        },
        "content": "            x \u003d x + 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newTodo.taskType() + \"[\" + newTodo.getStatusIcon() + \"] \" + newTodo.description + \"\\nNow you have \" + (x + y) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lee761"
        },
        "content": "            save.saveToFile(tasks, (x + y));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void addDeadline(String input, int y) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lee761"
        },
        "content": "            String[] c \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lee761"
        },
        "content": "            DukeException.checkCmd(c);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lee761"
        },
        "content": "            String[] taskTwo \u003d c[1].split(\" /by \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lee761"
        },
        "content": "            Deadline newDl \u003d new Deadline(taskTwo[0], taskTwo[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasks[x+y] \u003d newDl;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lee761"
        },
        "content": "            dateTime newFormat \u003d new dateTime();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lee761"
        },
        "content": "            newDl.by \u003d newFormat.convert(taskTwo[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lee761"
        },
        "content": "            if (dateTime.isValidFormat(taskTwo[1])) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lee761"
        },
        "content": "                x \u003d x + 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lee761"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newDl.taskType() + \"[\" + newDl.getStatusIcon() + \"] \" + newDl.description + \" (by: \" + newDl.by + \")\" + \"\\nNow you have \" + (x + y) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lee761"
        },
        "content": "                save.saveToFile(tasks, (x + y));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lee761"
        },
        "content": "        catch (ParseException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"Wrong Date/Time format\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void addEvent(String input, int y) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lee761"
        },
        "content": "            String[] a \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lee761"
        },
        "content": "            DukeException.checkCmd(a);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lee761"
        },
        "content": "            String[] taskThree \u003d a[1].split(\" /at\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lee761"
        },
        "content": "            Event newEv \u003d new Event(taskThree[0], taskThree[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lee761"
        },
        "content": "            tasks[x+y] \u003d newEv;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lee761"
        },
        "content": "            x \u003d x + 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newEv.taskType() + \"[\" + newEv.getStatusIcon() + \"] \" + newEv.description + \" (at: \" + newEv.at + \")\" + \"\\nNow you have \" + (x + y) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lee761"
        },
        "content": "            save.saveToFile(tasks, (x + y));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lee761"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 122
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public String saveTxt() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return (\"T | \" + super.getStatusIcon() + \" | \" + super.description + \"\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "     public void showStartup() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Here are your current list of tasks:\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void line() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "    String readInput() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 31
    }
  },
  {
    "path": "src/main/java/dateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class dateTime {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public dateTime() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lee761"
        },
        "content": "    String convert(String in) throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lee761"
        },
        "content": "        SimpleDateFormat inputFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Date date \u003d inputFormat.parse(in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lee761"
        },
        "content": "        SimpleDateFormat output \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lee761"
        },
        "content": "        SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMMM yyyy hh:mm aa\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return output.format(date) + suffix(in) + outputFormat.format(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lee761"
        },
        "content": "    private String suffix(String d) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lee761"
        },
        "content": "        String[] arr \u003d d.split(Pattern.quote(\"/\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lee761"
        },
        "content": "        int n \u003d Integer.parseInt(arr[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lee761"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lee761"
        },
        "content": "            return \"th \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lee761"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lee761"
        },
        "content": "            case 1: return \"st \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lee761"
        },
        "content": "            case 2: return \"nd \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lee761"
        },
        "content": "            case 3: return \"rd \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lee761"
        },
        "content": "            default: return \"th \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lee761"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lee761"
        },
        "content": "    static boolean isValidFormat(String value) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lee761"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lee761"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lee761"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lee761"
        },
        "content": "            date \u003d sdf.parse(value);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lee761"
        },
        "content": "            if (!value.equals(sdf.format(date))) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lee761"
        },
        "content": "                date \u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lee761"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lee761"
        },
        "content": "        } catch (ParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lee761"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lee761"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lee761"
        },
        "content": "        return date !\u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 46
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lee761"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lee761"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lee761"
        },
        "content": "     * For testing."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lee761"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lee761"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lee761"
        },
        "content": "        System.out.println(\"Hello Duke\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lee761"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lee761"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lee761": 8
    }
  }
]

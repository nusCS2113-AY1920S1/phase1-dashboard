[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 22,
      "Jeffry Lum": 19
    }
  },
  {
    "path": "settings.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return \" [D]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "     * To print the word Duke."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        // Level 7: Save"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        File file \u003d new File(\"D:\\\\data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        File data \u003d new File(\"D:\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        int x \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        if (data.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            read r \u003d new read();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            r.openFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            tasks \u003d r.readFile(tasks, x);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            r.closeFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            System.out.println(\"No task currently\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            file.mkdir();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            FileWriter newTxt \u003d new FileWriter(\"D:\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        String d, b;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        System.out.println(\"Here are your current tasks:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        print(tasks, x);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        String input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                checkInput(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                String type, add;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (input.equals(\"list\") \u0026\u0026 x !\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    int count \u003d 0;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    for (int i \u003d 0; i \u003c x; i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        print(tasks, x);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    String[] tasknum \u003d input.split(Pattern.quote(\" \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    int num \u003d Integer.parseInt(tasknum[1]) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        checkTask(tasks, num, x);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        Task t \u003d tasks[num];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        type \u003d t.taskType();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        add \u003d t.others();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        write done \u003d new write();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        done.doneTask(type, t.description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + type + \"[\" + t.getStatusIcon() + \"] \" + t.description + add);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    write newData \u003d new write();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            String[] taskOne \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            checkCmd(taskOne);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            ToDo newTodo \u003d new ToDo(taskOne[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            tasks[x] \u003d newTodo;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            newData.undoneTodo(input.trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            x \u003d x + 1;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newTodo.taskType() + \"[\" + newTodo.getStatusIcon() + \"] \" + newTodo.description + \"\\nNow you have \" + x + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            String[] c \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            checkCmd(c);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            String[] taskTwo \u003d c[1].split(\" /by\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            Deadline newDl \u003d new Deadline(taskTwo[0], taskTwo[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            tasks[x] \u003d newDl;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            taskTwo[1] \u003d convertDate(taskTwo[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            newData.undoneDl(c[0].trim(), c[1].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            x \u003d x + 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newDl.taskType() + \"[\" + newDl.getStatusIcon() + \"] \" + newDl.description + \" (by:\" + newDl.by + \")\" + \"\\nNow you have \" + x + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        } catch (DukeException | IOException | ParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            String[] a \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            checkCmd(a);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            String[] taskThree \u003d a[1].split(\" /at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            Event newEv \u003d new Event(taskThree[0], taskThree[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            tasks[x] \u003d newEv;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            taskThree[1] \u003d convertDate(taskThree[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            newData.undoneEvent(a[0].trim(), a[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            x \u003d x + 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \\n\" + newEv.taskType() + \"[\" + newEv.getStatusIcon() + \"] \" + newEv.description + \" (at:\" + newEv.at + \")\" + \"\\nNow you have \" + x + \" tasks in the list.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        } catch (DukeException | IOException | ParseException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            System.out.println(\"__________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        // To catch invalid inputs"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        private static void checkInput(String in) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String[] inputs \u003d {\"todo\", \"deadline\", \"event\", \"list\", \"done\"};"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            boolean checker \u003d false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            for (int i \u003d 0; i \u003c inputs.length; i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (in.contains(inputs[i])) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    checker \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            if (in.isEmpty()) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                throw new DukeException(\"Task cannot be empty. Please type a task.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            else if (!checker) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        // To catch invalid \"done\" task"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        private static void checkTask(Task[] Ta, int x, int size) throws DukeException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            if (x \u003e\u003d size || x \u003c 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! There is no such task to be done. Please enter a valid task number.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                Task checkTa \u003d Ta[x];"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (checkTa.status()) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    throw new DukeException(\"This task has been done. Please enter an incomplete task.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        // To catch invalid task"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        private static void checkCmd(String[] t) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            if (t.length \u003c 2 || t[1].isEmpty()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        public static void print(Task[] Ta, int x) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            int count \u003d 0;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String type, add;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            for (int i \u003d 0; i \u003c x; i++) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                Task cmd \u003d Ta[i];"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                type \u003d cmd.taskType();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                add \u003d cmd.others();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                System.out.println(++count + \". \" + type + \"[\" + cmd.getStatusIcon() + \"] \" + cmd.description + add);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    static String convertDate(String s) throws ParseException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        String[] tokens \u003d s.split(Pattern.quote(\"/\"));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        SimpleDateFormat sourceFormat \u003d new SimpleDateFormat(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        SimpleDateFormat targetFormatDate \u003d new SimpleDateFormat(\"d\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        SimpleDateFormat targetFormat \u003d new SimpleDateFormat(\"\u0027 of\u0027 MMMM yyyy, hh:mm aa\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        Date sourceDate \u003d sourceFormat.parse(s);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        String converted \u003d targetFormatDate.format(sourceDate) + getSuffix(Integer.parseInt(tokens[0])) + targetFormat.format(sourceDate);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return converted;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    //function to get the suffix for the date format"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    static String getSuffix(int n) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VivianLee": 192,
      "Jeffry Lum": 2,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return \" [E]\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 18
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return (\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String others() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return (\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public boolean status() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "VivianLee": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public String taskType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return \" [T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 10
    }
  },
  {
    "path": "src/main/java/read.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Formatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class read {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void openFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        scan \u003d new Scanner(new File(\"D:\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public Task[] readFile(Task[] tasks, int x) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String[] t \u003d input.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            if (t.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                ToDo newTodo \u003d new ToDo(t[2]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (t[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    newTodo.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    newTodo.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                tasks[x] \u003d newTodo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (t[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    Deadline newDl \u003d new Deadline(t[2], t[3]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    if (t[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        newDl.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        newDl.isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    tasks[x] \u003d newDl;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    Event newEv \u003d new Event(t[2], t[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    if (t[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        newEv.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                        newEv.isDone \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    tasks[x] \u003d newEv;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 53
    }
  },
  {
    "path": "src/main/java/write.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.Formatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class write {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    private Formatter print;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    private Writer output;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void openFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        print \u003d new Formatter(new File(\"D:\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void undoneTodo(String s) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output \u003d new BufferedWriter((new FileWriter(\"D:\\\\data\\\\duke.txt\", true)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.append(\"T | \\u2718 | \" + s + \"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void undoneDl(String s1, String s2) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output \u003d new BufferedWriter((new FileWriter(\"D:\\\\data\\\\duke.txt\", true)));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.append(\"D | \\u2718 | \" + s1 + \" | \" + s2 + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void undoneEvent(String s1, String s2) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output \u003d new BufferedWriter((new FileWriter(\"D:\\\\data\\\\duke.txt\", true)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.append(\"E | \\u2718 | \" + s1 + \" | \" + s2 + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        output.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void doneTask(String type, String description) throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        File oldF \u003d new File(\"D:\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        File newF \u003d new File(\"D:\\\\data\\\\temp.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        FileWriter file1 \u003d new FileWriter(\"D:\\\\data\\\\temp.txt\", true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        BufferedWriter file2 \u003d new BufferedWriter(file1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        PrintWriter file3 \u003d new PrintWriter(file2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        scan \u003d new Scanner(new File(\"D:\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String userInput \u003d scan.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            String[] tokens \u003d userInput.split(Pattern.quote(\" | \"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            if (tokens[0].equals(type) \u0026\u0026 tokens[2].equals(description)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                if (tokens.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    file3.println(tokens[0] + \" | \\u2713 | \" + tokens[2]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                    file3.println(tokens[0] + \" | \\u2713 | \" + tokens[2] + \" | \" + tokens[3]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "                file3.println(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        file3.flush();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        file3.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        oldF.delete();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        newF.renameTo(new File(\"D:\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "VivianLee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public void closeFile(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        print.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 66
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "     * For testing."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "        System.out.println(\"Hello Duke\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "VivianLee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "VivianLee": 8
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String storeList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"D | \" + super.getStatusInt() + \" | \"+ super.description + \" | \" + by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Valerie Tan": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        ArrayList\u003cTask\u003e storeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        String filePath \u003d \"/Users/impt/Desktop/duke/data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        int taskCount \u003d writeFile(filePath, storeList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        PrintWriter writer \u003d new PrintWriter(fileWriter, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        //start of duke code"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        String code \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        System.out.println(\"________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        System.out.println(\"________________________________\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            String s \u003d input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            String[] parts \u003d s.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            String taskDone \u003d parts[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            if (taskDone.equals(\"done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                int list \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                String toOverwrite \u003d storeList.get(list - 1).storeList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                // System.out.println(\"1. \" + toOverwrite);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                storeList.get(list - 1).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                String status \u003d storeList.get(list - 1).getStatusIcon();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                System.out.println(\"[\" + status + \"] \" + storeList.get(list - 1).description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                //  System.out.println(storeList.get(list-1).storeList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                modifyFile(filePath, toOverwrite, storeList.get(list - 1).storeList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            } else if (taskDone.equals(\"find\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                int print \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                for (int i \u003d 0; i \u003c storeList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    if (storeList.get(i).description.contains(parts[1])) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        System.out.println((i + 1) + \". \" + storeList.get(i).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        print++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                if (print \u003d\u003d0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    System.out.println(\"can\u0027t find matching data sorry!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            } else if (taskDone.equals(\"delete\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                int list \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(storeList.get(list - 1).toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                deleteLine(filePath, storeList.get(list - 1).storeList());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                if (storeList.get(list - 1).getStatusIcon() \u003d\u003d \"NO\") {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    taskCount--;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                storeList.remove(list - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(\"Now you have \" + (taskCount) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                for (int i \u003d 0; i \u003c storeList.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    System.out.println((i + 1) + \". \" + storeList.get(i).toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            } else if (!input.isEmpty()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                // print task name"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                String arr[] \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                String taskName \u003d arr[0]; //task name"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                Scanner sc1 \u003d new Scanner(arr[0]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                if (sc1.hasNext(\"todo\") || sc1.hasNext(\"deadline\") || sc1.hasNext(\"event\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    //  System.out.print(\"\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                        if (!arr[1].isEmpty()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            String theRest \u003d arr[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            if (taskName.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String start[] \u003d theRest.split(\"/by\", 2);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String deadlineName \u003d start[0]; //event name"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String deadlineTime \u003d start[1]; //date"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                                //String deadDate \u003d deadlineTime.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                SimpleDateFormat inputDate \u003d new SimpleDateFormat(\"dd/MM/yyy HHmm\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\"); // duke to understand this format"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                Date dlInput \u003d inputDate.parse(deadlineTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                                String deadDate \u003d formatter.format(dlInput);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                // System.out.println(date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                                deadDate \u003d formatter.format(dlInput);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                deadDate \u003d formatter.format(dlInput);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                storeList.add(new Deadline(deadlineName, deadDate));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            } else if (taskName.equals(\"event\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String start1[] \u003d theRest.split(\"/at\", 2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String eventName \u003d start1[0]; //event name"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String eventTime \u003d start1[1]; //date"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                String eventDate \u003d eventTime.replaceAll(\" \", \"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                SimpleDateFormat inputDate \u003d new SimpleDateFormat(\"dd/MM/yyy HHmm\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyy, h:mma\"); // duke to understand this format"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                Date dlInput \u003d inputDate.parse(eventTime);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                eventDate \u003d formatter.format(dlInput);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                storeList.add(new Events(eventName, eventDate));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            } else if (taskName.equals(\"todo\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                                storeList.add(new todo(theRest));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                            writer.println(storeList.get(storeList.size() - 1).storeList());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            System.out.println(storeList.get(storeList.size() - 1).toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            taskCount++;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                            System.out.println(\"Now you have \" + (taskCount) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException | ParseException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a \" + taskName + \" cannot be empty.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        } while (!input.isEmpty());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "    static void deleteLine(String filePath, String lineToDelete) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            if (!file.isFile()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(\"Parameter is not an existing file\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            //Construct the new file that will later be renamed to the original filename."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            File tempFile \u003d new File(file.getAbsolutePath() + \".tmp\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            //Read from the original file and write to the new"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            //unless content matches data to be removed."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                if (!line.trim().equals(lineToDelete)) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    pw.flush();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            //Delete the original file"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            if (!file.delete()) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(\"Could not delete file\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            //Rename the new file to the filename the original file had."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            if (!tempFile.renameTo(file))"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                System.out.println(\"Could not rename file\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        catch (IOException ex) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "    static int writeFile(String filePath, ArrayList\u003cTask\u003e storeList) throws IOException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        // write file onto list"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        int taskCount \u003d0;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        String tempStore \u003d \"\";"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            Scanner inFile \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            while (inFile.hasNextLine()) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                tempStore \u003d inFile.nextLine();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                int index \u003d 0;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                String tempString \u003d tempStore.replace(\" | \", \"#\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                String[] temp \u003d tempString.split(\"#\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                int gStatus \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                if (temp[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    storeList.add(new Deadline(temp[2], temp[3]));"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    if (gStatus \u003d\u003d 1) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        storeList.get(index).markAsDone();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                } else if (temp[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    storeList.add(new Events(temp[2], temp[3]));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    if (gStatus \u003d\u003d 1) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        storeList.get(index).markAsDone();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                } else if (temp[0].equals(\"T\")){"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    storeList.add(new todo(temp[2]));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    if (gStatus \u003d\u003d 1) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                        storeList.get(index).markAsDone();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            inFile.close();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            for (int i \u003d 0; i \u003c storeList.size(); i++) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                if (Integer.parseInt(storeList.get(i).getStatusInt()) \u003d\u003d 0)"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                    taskCount++;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "        return taskCount++;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "valerietyj"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    static void modifyFile(String filePath, String oldString, String newString) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        File fileToModify \u003d new File(filePath);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        String oldContent \u003d \"\";"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        BufferedReader read \u003d null;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        FileWriter writer \u003d null;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            read \u003d new BufferedReader(new FileReader(fileToModify));"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            String line \u003d read.readLine();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                oldContent +\u003d line + System.lineSeparator();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                line \u003d read.readLine();"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            String newContent \u003d oldContent.replace(oldString, newString);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            writer \u003d new FileWriter(fileToModify);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            writer.write(newContent);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        finally {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                read.close();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                writer.close();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "valerietyj": 152,
      "Jeffry Lum": 1,
      "Valerie Tan": 149,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "class DukeException extends Exception"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "valerietyj"
        },
        "content": "    public DukeException(String s)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        // Call constructor of parent Exception"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "valerietyj": 2,
      "Valerie Tan": 7
    }
  },
  {
    "path": "src/main/java/Events.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String storeList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"E | \" + super.getStatusInt() + \" | \"+ super.description + \" | \" + at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Valerie Tan": 21
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected char code;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return (isDone ? \"YES\" : \"NO\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String getStatusInt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String storeList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Valerie Tan": 28
    }
  },
  {
    "path": "src/main/java/todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "public class todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \"+ super.description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    public String storeList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "        return \"T | \" + super.getStatusInt() + \" | \" + super.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Valerie Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Valerie Tan": 17
    }
  }
]

[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    protected String doneBy;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public Deadline(String description, String doneBy) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        this.doneBy \u003d doneBy;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        date \u003d formatter.parse(doneBy);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        if (doneBy.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The deadline has no deadline!!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + this.description + \" (by:\" + date.toString() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.jar.JarException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private static String line \u003d \"_____________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private static String filePath \u003d \"D:/DukeList\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        printOutput(\"Hello, I\u0027m Duke\\n\" + \"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        //Load arraylist from file if any"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        ArrayList\u003cTask\u003e listItems \u003d loadFile(file);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        while (!\"bye\".equals(userInput)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            if (\"list\".equals(userInput)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                System.out.println(\"\\tHere are the task in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                for (int i \u003d 0; i \u003c listItems.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    Task currentTask \u003d listItems.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    System.out.println(\"\\t\" + (i + 1) + \".\" + currentTask.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            } else if (userInput.matches(\"done \\\\d+\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                //Extract index number from user input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                int listIndex \u003d Integer.parseInt(userInput.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                if (listIndex \u003e listItems.size()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(\"Task does not exist\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    Task currentTask \u003d listItems.get(listIndex - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    saveFile(listItems, file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(\"Nice! I\u0027hv marked this task as done:\" + \"\\n\\t\" + listIndex + \".\" + \"[\" + \"\\u2713\" + \"] \" + currentTask.description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            } else if (userInput.matches(\"todo.*\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                //To do task type"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                String description \u003d userInput.substring(userInput.indexOf(\"todo\") + 4).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    Todo task \u003d new Todo(description);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    listItems.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    saveFile(listItems, file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(\"Got it,I\u0027hv added this task:\" + \"\\n\\t \" + task.toString() + \"\\n\\t\" + \"Now you have \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                            + listItems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(e.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            } else if (userInput.matches(\"deadline.*\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                //Deadline task type"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                if (userInput.matches(\"deadline.*/by.*\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    String description \u003d userInput.substring(userInput.indexOf(\"deadline\") + 8, userInput.indexOf(\"/by\")).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    String doneBy \u003d userInput.substring(userInput.indexOf(\"/by\") + 3).trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        Deadline deadline \u003d new Deadline(description, doneBy);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        listItems.add(deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        saveFile(listItems, file);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(\"Got it,I\u0027hv added this task:\" + \"\\n\\t \" + deadline.toString() + \"\\n\\t\" + \"Now you have \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                                + listItems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(e.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(\"Deadline should follow proper format.\u003cdd/MM/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(\"☹ OOPS!!! The deadline input is not in proper format (deadline \u003cdescription\u003e /by \u003ctime\u003e\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            } else if (userInput.matches(\"event.*\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                //Event task type"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                if (userInput.matches(\"event.*/at.*\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    String description \u003d userInput.substring(userInput.indexOf(\"event\") + 5, userInput.indexOf(\"/at\")).trim();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    String date \u003d userInput.substring(userInput.indexOf(\"/at\") + 3).trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        listItems.add(event);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        saveFile(listItems, file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(\"Got it,I\u0027hv added this task:\" + \"\\n\\t \" + event.toString() + \"\\n\\t\" + \"Now you have \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                                + listItems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(e.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                        printOutput(\"Date should follow proper format.\u003cdd/MM/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                    printOutput(\"☹ OOPS!!! The event input is not in proper format (event \u003cdescription\u003e /at \u003ctime\u003e\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "                printOutput(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        printOutput(\"Bye.Hope to see you again soon!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * Prints message according to Duke\u0027s format"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * @param message Message to be written"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private static void printOutput(String message) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        System.out.println(\"\\t\" + message);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * Save arrayList into object serial file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * @param listItems ArrayList to be saved"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * @param file      File to be saved into"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private static void saveFile(ArrayList\u003cTask\u003e listItems, File file) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            FileOutputStream fileOutputStream \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            ObjectOutputStream objectOutputStream \u003d new ObjectOutputStream(fileOutputStream);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            objectOutputStream.writeObject(listItems);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            objectOutputStream.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            fileOutputStream.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            printOutput(\"Error writing list to file!!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * Load new ArrayList from hard disk file.If no file exists,create new ArrayList"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * @param file File to be loaded"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     * @throws IOException If errors creating file should fine not be found."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private static ArrayList\u003cTask\u003e loadFile(File file) throws IOException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        ArrayList\u003cTask\u003e listItems \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            FileInputStream fileInputStream \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            ObjectInputStream objectInputStream \u003d new ObjectInputStream(fileInputStream);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            listItems \u003d (ArrayList\u003cTask\u003e) objectInputStream.readObject();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            fileInputStream.close();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            objectInputStream.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            file \u003d new File(filePath);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            printOutput(\"Class not found\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        return listItems;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 160,
      "Jeffry Lum": 1,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    protected String dateString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public Event(String description, String dateString) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        date \u003d formatter.parse(dateString);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        if (dateString.isBlank()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + this.description + \" (at:\" + date.toString() + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 30
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    //Description of the task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    //Indication of task completeness"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    //Return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    //Mark current task as complete"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 27
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "public class Todo extends Task  implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Daryl Tan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Daryl Tan": 16
    }
  }
]

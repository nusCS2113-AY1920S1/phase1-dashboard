[
  {
    "path": "src/main/java/DateTimeRecognition.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class DateTimeRecognition {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public DateTimeRecognition(String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public void dateTime() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            SimpleDateFormat identifyFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            Date dateAndTime \u003d identifyFormat.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }catch (ParseException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            throw new DukeException(\" The format for including date and time for an event/\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    + \"deadline is \u003cdd/mm/yyyy HHmm\u003e\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private DateTimeRecognition convertDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public Deadline(String description, String by)throws DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        convertDate \u003d new DateTimeRecognition(this.by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        convertDate.dateTime();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                + by + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String fileOutFormat() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"T\" + super.fileOutFormat() + \"|\" + by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static ArrayList\u003cTask\u003e storeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static FileHandling dataStorage \u003d new FileHandling(\"storeData.txt\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void printDash() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        for (int i \u003d 0; i \u003c 75; i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            str +\u003d \"_\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(str);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void printSpaces(String printStr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        System.out.println(\"    \" + printStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void printList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        for (int i \u003d 0; i \u003c storeList.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            printSpaces(\" \" + (i + 1) + \". \" + storeList.get(i).toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void printTaskDone(int num) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        storeList.get(num).markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Nice! I have marked this task as done:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" \" + storeList.get(num).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void addTask(Task taskA) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Got it. I have added this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\"  \" + taskA.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Now you have \" + ((storeList.size() \u003e 1) ? \" tasks in the list.\" : \"task in \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                + \"the list\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void takeInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            if (str.equals(\"bye\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printDash();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printSpaces(\" Bye.Hope to see you again soon.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printDash();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                processInput(str);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printSpaces(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printDash();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private static void processInput(String str) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        //To process the various forms on input given to DUKE"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        List\u003cString\u003e splitInput \u003d new ArrayList\u003cString\u003e("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                Arrays.asList(str.split(\" \")));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        if (str.equals(\"list\")) { //To print the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            printList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } else if (splitInput.get(0).equals(\"done\")) { //marking task as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                int temp \u003d Integer.parseInt(splitInput.get(1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                printTaskDone(temp - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            } catch (NumberFormatException obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" OOPS! Enter a positive integer after \\\"done\\\"\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            } catch (IndexOutOfBoundsException obj) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" OOPS! Enter a number that is present in the list\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } else if (splitInput.get(0).equals(\"todo\")) { //adding a task that has no timing constraints"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                storeList.add(new Todo(str.substring(5)));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                addTask(storeList.get(storeList.size() - 1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" OOPS! The description of a todo list cannot be empty\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } else if (splitInput.get(0).equals(\"deadline\")) { //adding a task that has a deadline"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            int k \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            String split1 \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            String split2 \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            if (splitInput.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" OOPS! The description of deadline cannot be empty\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            for (i \u003d 1; i \u003c splitInput.size(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                if (splitInput.get(i).equals(\"/by\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    k \u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                if (k \u003d\u003d 0) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    split1 +\u003d splitInput.get(i) + \" \";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    split2 +\u003d splitInput.get(i) + \" \";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            if (k \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" Please make sure that you have entered \\\"/by\\\" \""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        + \"to separate task and time\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            storeList.add(new Deadline(split1.trim(), split2.trim()));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            addTask(storeList.get(storeList.size() - 1));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } else if (splitInput.get(0).equals(\"event\")) { //adding event to the list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            int i;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            int k \u003d 0;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            String split1 \u003d \"\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            String split2 \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            if (splitInput.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" OOPS! the description for an event cannot be empty\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            for (i \u003d 1; i \u003c splitInput.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                if (splitInput.get(i).equals(\"/at\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    k \u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                if (k \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    split1 +\u003d splitInput.get(i) + \" \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    split2 +\u003d splitInput.get(i) + \" \";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            if (k \u003d\u003d 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                throw new DukeException(\" Please make sure you have used \\\"/at\\\" to separate\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        + \" task and time\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            storeList.add(new Event(split1.trim(), split2.trim()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            addTask(storeList.get(storeList.size() - 1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            throw new DukeException(\" Please enter a valid command\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        dataStorage.saveData(storeList);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "     * Duke is a chat bot which can store/respond to specific commands"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public static void main(String[] args)throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" Hello! I am Duke\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printSpaces(\" What can I do for you?\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        printDash();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        storeList \u003d dataStorage.retrieveData();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        takeInput();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 154,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private DateTimeRecognition to;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private DateTimeRecognition from;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public Event(String description, String at)throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            List\u003cString\u003e splitDate \u003d Arrays.asList(at.split(\" to \"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            from \u003d new DateTimeRecognition(splitDate.get(0));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            to \u003d new DateTimeRecognition(splitDate.get(1));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            throw new DukeException(\" Format for an event is: \u003cevent\u003e /at \u003cdata and time\u003e to \u003cdate and time\u003e\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        from.dateTime();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        to.dateTime();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                + at + \")\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String fileOutFormat() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"E\" + super.fileOutFormat() + \"|\" + at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 34
    }
  },
  {
    "path": "src/main/java/FileHandling.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class FileHandling {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public FileHandling(String file) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveData() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            FileReader readFile\u003d new FileReader(this.file);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            BufferedReader read \u003d new BufferedReader(readFile);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            ArrayList\u003cTask\u003e initialData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            String input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            while ((input \u003d read.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                int k \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                List\u003cString\u003e columns \u003d Arrays.asList(input.split(\"\\\\|\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                switch (columns.get(0)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        initialData.add(new Todo(columns.get(2)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        initialData.add(new Event(columns.get(2), columns.get(3)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        initialData.add(new Deadline(columns.get(2), columns.get(3)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        System.out.println(\"\\n     There is an invalid entry in the file. This entry will \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                                + \"not be copied to the list:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        System.out.println(\"     \" + input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        k \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                if (k \u003d\u003d 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    if (columns.get(1).equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                        initialData.get(initialData.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            return initialData;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } catch (FileNotFoundException obj) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.out.println(\"     Invalid file name/file path. File not found.\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    \"Will make a new file ...\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } catch (IOException obj) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.out.println(\"     Error while reading data from the file\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.err.println(obj.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException obj) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.out.println(\"     Index out of bounds. Probably due to invalid format of storing\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                    \"Todo/Deadline/Event data\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e storeDataInFile) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            FileWriter writin \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            BufferedWriter outData \u003d new BufferedWriter(writin);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            for (int i \u003d 0; i \u003c storeDataInFile.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                outData.write(storeDataInFile.get(i).fileOutFormat());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                outData.newLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            outData.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        } catch (IOException obj) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.out.println(\"     Error with input output operations while handling the file.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "            System.err.println(obj.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 78
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private final String ticks \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    private final String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (isDone ? ticks : cross);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "                + description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String fileOutFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"|\" + isDone + \"|\" + description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    public String fileOutFormat() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "        return (\"T\" + super.fileOutFormat());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Tejasvas123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Tejasvas123": 15
    }
  }
]

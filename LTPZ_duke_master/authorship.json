[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The class for deadline representation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param isDone is this deadline done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type deadline type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Deadline(String description, boolean isDone, String type, Date by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of deadline"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param isDone is this deadline done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type deadline type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param time the time of deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Deadline(String description, boolean isDone, String type, Date by, String time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        super(description, isDone, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns the time of the deadline"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return deadline time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns string of the deadline."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return string of the deadline"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 55
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * the main program"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Start the Duke program"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param args the entry"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public static void main(String args[]) throws IOException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //say hello"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //load data from the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //load into new task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        storage.readFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        TaskList taskList \u003d new TaskList(storage.getList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //process the new command line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            Parser pa \u003d new Parser(ui.getCurrCommand());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                if (pa.parseWord().equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    ui.printGoodbye();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        int index \u003d pa.parseIndex();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        Task temp \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        storage.changeFile(index, \"delete\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printRemove(temp.getType(), temp.toString(), taskList.getSize());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"delete\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        int index \u003d pa.parseIndex();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        Task temp \u003d taskList.doneTask(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        storage.changeFile(index, \"done\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printDone(temp.getType(), temp.toString(), taskList.getSize());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"done\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"list\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    ui.printList(taskList.getList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"todo\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        Task temp \u003d pa.parseToDo();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        taskList.addToDo(temp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        storage.addFile(temp, \"todo\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printAdd(temp.toString(), taskList.getSize());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"todo\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        Deadline temp \u003d pa.parseDeadline();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        taskList.addDeadline(temp);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        storage.addFile(temp,\"deadline\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printAdd(temp.toString(), taskList.getSize());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"deadlineD\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.TimeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"deadlineT\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"deadlineTF\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else if (pa.parseWord().equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        Even temp \u003d pa.parseEvent();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        taskList.addEvent(temp);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        storage.addFile(temp,\"event\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printAdd(temp.toString(), taskList.getSize());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"eventE\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.TimeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"eventT\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"eventTF\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        String key \u003d pa.findKey();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        taskList.findKey(key);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                        ui.printException(\"key\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            } catch (Parser.EntryException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                ui.printException(\"random\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 103,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Even.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The class for event representation"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Even extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param isDone is this event done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type event type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Even(String description, boolean isDone, String type, Date at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        super(description, type);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param isDone is this event done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type event type"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param time the time of event"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Even(String description, boolean isDone, String type, Date at, String time) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        super(description, isDone, type);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns the time of the event"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return event time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns string of the event."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return string of the event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 55
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The parser to parse the commands"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String currCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param command the current command to parse"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.currCommand \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Return the first word of the command if it is the designated command type"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the first word of the command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws EntryException if the command cannot be understand"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String parseWord() throws EntryException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        StringTokenizer tok \u003d new StringTokenizer(currCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String command \u003d tok.nextToken();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (!command.equals(\"bye\") \u0026\u0026 !command.equals(\"delete\") \u0026\u0026 !command.equals(\"done\") \u0026\u0026"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                !command.equals(\"list\") \u0026\u0026 !command.equals(\"todo\") \u0026\u0026 !command.equals(\"deadline\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                \u0026\u0026 !command.equals(\"event\") \u0026\u0026 !command.equals(\"find\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            throw new EntryException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Return the index num"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the parsed index num"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws EntryException if there is no num in the command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public int parseIndex() throws EntryException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        StringTokenizer tok \u003d new StringTokenizer(currCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        tok.nextToken();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //check if more information is needed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkLackInfo();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //search for the delete number"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String numText \u003d tok.nextToken();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        int num \u003d Integer.parseInt(numText) - 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return num;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Return the command for todo type"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the todo content"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Task parseToDo() throws Exception {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkLackInfo();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String content \u003d currCommand.substring(currCommand.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Task currTask \u003d new Task(content, \"todo\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Return the command for deadline type"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the deadline content"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Deadline parseDeadline() throws Exception {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkLackInfo();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkDeadlineTime();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String content \u003d currCommand.substring(currCommand.indexOf(\" \") + 1, currCommand.indexOf(\" /by\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String time \u003d currCommand.substring(currCommand.indexOf(\" /by\") + 5);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Date by \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(time);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Deadline deadline \u003d new Deadline(content, false, \"deadline\", by, time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Even parseEvent() throws Exception {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkLackInfo();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkEventTime();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String content \u003d currCommand.substring(currCommand.indexOf(\" \") + 1, currCommand.indexOf(\" /at\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String time \u003d currCommand.substring(currCommand.indexOf(\" /at\") + 5);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Date by \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Even event \u003d new Even(content, false, \"event\", by, time);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Return the command for finding key type"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the key content"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws EntryException if the key is not there"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String findKey() throws EntryException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        StringTokenizer tok \u003d new StringTokenizer(currCommand);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        tok.nextToken();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        checkLackInfo();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String key \u003d tok.nextToken();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Check if lack information"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws EntryException if the command lack information"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void checkLackInfo() throws EntryException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        StringTokenizer tok \u003d new StringTokenizer(currCommand);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String tmp \u003d tok.nextToken();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (!tok.hasMoreElements()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            throw new EntryException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Check if the deadline time is there"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws TimeException if the time is not the designated format"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void checkDeadlineTime() throws TimeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //check if there is no time"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (currCommand.indexOf(\" /by\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Check if the event time is there"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws TimeException if the time is not the designated format"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void checkEventTime() throws TimeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //check if there is no time"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (currCommand.indexOf(\" /at\") \u003d\u003d -1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            throw new TimeException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    class TimeException extends Exception {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    class EntryException extends Exception {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LTPZ": 150
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The class to deal with storage problems"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns the task list in the storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return The task list in the storage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * process the task list from the list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param s the task line in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    private void processFile(String s) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //process the old data"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        char t \u003d s.charAt(0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        switch (t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                type \u003d \"todo\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                type \u003d \"deadline\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                type \u003d \"event\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        char d \u003d s.charAt(4);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        isDone \u003d (d \u003d\u003d \u00271\u0027 ? true : false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //kill the |"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String content \u003d s.substring(s.indexOf(\" | \") + 3);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        content \u003d content.substring(s.indexOf(\" |\") + 2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (content.contains(\" | \")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //process as event or deadline"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            time \u003d content.substring(content.indexOf(\" | \") + 3);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            content \u003d content.substring(0, content.indexOf(\" | \"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            date \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (type.equals(\"todo\")) list.add(new Task(content, isDone, type));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        else if (type.equals(\"deadline\")) list.add(new Deadline(content, isDone, type, date));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        else list.add(new Even(content, isDone, type, date));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Load the task list file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws ParseException"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void readFile() throws IOException, ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        File list \u003d new File(\"D:/NUS/IDEs/Du/List.txt\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(list));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        String oldData;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        while ((oldData \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //process old data"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            processFile(oldData);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print the new tasks in the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param currTask the new task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param Type the type of the task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void addFile(Task currTask, String Type) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        File data \u003d new File(\"D:/NUS/IDEs/Du/List.txt\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        FileWriter newData \u003d new FileWriter(data, true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(newData);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (Type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.print(\"T | \" + (currTask.isDone() ? 1 : 0) + \" |\" + currTask.getDescription() + \"\\r\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (Type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            Deadline deadline \u003d (Deadline) currTask;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.print(\"D | \" + (deadline.isDone() ? 1 : 0) + \" |\" + deadline.getDescription() + \" | \" + deadline.getTime() + \"\\r\\n\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //event"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            Even event \u003d (Even) currTask;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.print(\"E | \" + (event.isDone() ? 1 : 0) + \" |\" + event.getDescription() + \" | \" + event.getTime() + \"\\r\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        pw.flush();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Delete or done tasks in the file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param changedIndex the index of the changed task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param Type the type of the task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void changeFile(int changedIndex, String Type) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        //this is used to delete or done tasks and print them in the file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            File currList \u003d new File(\"D:/NUS/IDEs/Du/List.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //copy list 1 to temp list 2 and make the changes"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(currList));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            File data \u003d new File(\"D:/NUS/IDEs/Du/List2.txt\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            FileWriter newData \u003d new FileWriter(data);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(newData);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            String oldData;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            for (int j \u003d 0; j \u003c changedIndex; j++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                oldData \u003d reader.readLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                pw.println(oldData);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            oldData \u003d reader.readLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //make the change"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            if (Type \u003d\u003d \"done\") {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                //change the done part to 1"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                pw.println(oldData.substring(0, 4) + \"1\" + oldData.substring(5));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            } else if (Type \u003d\u003d \"delete\") {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                //do not print this line so this line will appear \"deleted\" in the list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //continue copy the remaining items"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            while ((oldData \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                pw.println(oldData);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //copy list 2 contents to list 1"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            currList \u003d new File(\"D:/NUS/IDEs/Du/List2.txt\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            reader \u003d new BufferedReader(new FileReader(currList));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            data \u003d new File(\"D:/NUS/IDEs/Du/List.txt\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            newData \u003d new FileWriter(data);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw \u003d new PrintWriter(newData);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            while ((oldData \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                //copy everything back"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                pw.println(oldData);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 163
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The class for Task representation"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Task(String description, String type) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param description content of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param isDone is this task done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type task type"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Task(String description, boolean isDone, String type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * isDone getter"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return if the task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * type getter"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the type of the task"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * description getter"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Returns string of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return string of the task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (isDone \u003d\u003d true) return \"[\\u2713]\" + description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        else return \"[\\u2717]\" + description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * set isDone as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LTPZ": 79
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The class to represent the current task list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected int size;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        this.size \u003d list.size();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * List getter"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Size getter"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the task size"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return size;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Delete one element from the task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param num the position of the element"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Task deleteTask(int num) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Task temp \u003d list.get(num);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        list.remove(num);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        size--;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Done the task in the list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return the task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public Task doneTask(int num) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        list.get(num).setDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Task temp \u003d list.get(num);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Add todo type task to the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param t the task to add"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void addToDo(Task t) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Add deadline type task to the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param d the task to add"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void addDeadline(Deadline d) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        list.add(d);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Add event type task to the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param e the task to add"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void addEvent(Even e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        list.add(e);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        size++;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Search for the key in the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param key the key to search in the list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void findKey(String key) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        int getTime \u003d 0;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Ui keyUi \u003d new Ui();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        keyUi.printKey1();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        for (int i \u003d 0; i \u003c size; ++i) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            if (list.get(i).getDescription().indexOf(key) !\u003d -1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                getTime++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                keyUi.printKey2(getTime, list.get(i).getType(), list.get(i).toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 103
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " * The user interface"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    protected String currCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * CurrCommand getter"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @return currCommand"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public String getCurrCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        return currCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Read the next command from the command line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void readCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        currCommand \u003d in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print goodbye"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print successfully removed tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type the type of the removed task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param content the content of the removed task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param size the size of remained list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printRemove(String type, String content, int size) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t[T]\" + content);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t\" + content);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print the task is done"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type the type of the removed task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param content the content of the removed task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param size the size of remained list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printDone(String type, String content, int size) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //it is a common type"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t[T]\" + content);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            //deadline or event type"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t\" + content);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print the current list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param list the current list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            if (list.get(i).getType().equals(\"todo\"))"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "                System.out.println(\"\\t\" + (i + 1) + \".[T]\" + list.get(i).toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            else System.out.println(\"\\t\" + (i + 1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print successfully added tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param content the content of the removed task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param size the size of remained list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printAdd(String content, int size) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\t \" + content);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print matching sentence"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printKey1() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print found keys"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param getTime the num of the task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type the type of the removed task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param content the content of the removed task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printKey2(int getTime, String type, String content) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t\" + getTime + \".[T]\" + content);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t\" + getTime + \".\" + content);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * Print exceptions"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     * @param type the type of exceptions"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void printException(String type) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        if (type.equals(\"random\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"delete\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I cannot delete an empty task, specific number needed\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I cannot done an empty task, specific number needed\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"deadlineD\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"deadlineT\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"deadlineTF\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The time of a deadline should be in \\\"dd/mm/yyyy form\\\".\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"eventE\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"eventT\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"eventTF\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! The time of a event should be in \\\"dd/mm/yyyy form\\\".\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        } else if (type.equals(\"key\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "            System.out.println(\"\\t☹ OOPS!!! I cannot find an empty string, specific string needed\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 147
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LTPZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LTPZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LTPZ": 10
    }
  }
]

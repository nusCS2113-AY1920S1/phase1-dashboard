[
  {
    "path": "src/main/java/CmdAdd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdAdd extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private String cmdType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private SimpleDateFormat simpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public CmdAdd(String str, String cmd) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        cmdType \u003d str;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        s \u003d cmd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        simpleDateFormat \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws ParseException, DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        switch (cmdType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    throw new DukeException(\"    OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Todo t \u003d new Todo(s.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                list.addTodo(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            case \"deadline\": {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    throw new DukeException(\"    OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String[] getDate \u003d s.split(\"/by \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Date date \u003d simpleDateFormat.parse(getDate[getDate.length - 1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String formatTime \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Deadline t \u003d new Deadline(getDate[0].replaceFirst(\"deadline \", \"\"), formatTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                list.addDeadline(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (s.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    throw new DukeException(\"    OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String[] getDate \u003d s.split(\"/at \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Date date \u003d simpleDateFormat.parse(getDate[getDate.length - 1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String formatTime \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Event t \u003d new Event(getDate[0].replaceFirst(\"event \", \"\"), formatTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                list.addEvent(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        storage.writeFile(list.getList());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    \" + list.getTask(list.getSize() - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    Now you have \" + list.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 61
    }
  },
  {
    "path": "src/main/java/CmdDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdDelete extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected CmdDelete(int n) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        num \u003d n;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    \" + list.getTask(num - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    Now you have \" + (list.getSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.deleteTask(num-1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        storage.writeFile(list.getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 25
    }
  },
  {
    "path": "src/main/java/CmdDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdDone extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public CmdDone(int n) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        num \u003d n;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        tasks.doneTask(num);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        storage.writeFile(tasks.getList());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    [✓] \" + tasks.getTask(num).description + \"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 22
    }
  },
  {
    "path": "src/main/java/CmdExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdExit extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public CmdExit() { }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage)  throws DukeException, ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 16
    }
  },
  {
    "path": "src/main/java/CmdFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdFind extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected CmdFind(String s) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        keyword \u003d s;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            if (list.getTask(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    \" + (i + 1) + \".\" + list.getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 23
    }
  },
  {
    "path": "src/main/java/CmdList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class CmdList extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public CmdList() { }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        for (int i \u003d 0; i \u003c list.getSize(); i++) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + list.getTask(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 18
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Command() { }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public abstract void execute(TaskList list, Ui ui, Storage storage) throws DukeException, ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 12
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String userCmd \u003d ui.readCmd();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Command cmd \u003d Parser.parse(userCmd);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                cmd.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                isExit \u003d cmd.isExit();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            } catch (DukeException | ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                ui.error(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 40,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    DukeException(){}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public static Command parse(String cmd) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            command \u003d new CmdExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            command \u003d new CmdList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        else if(cmd.contains(\"done\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            String temp \u003d cmd.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            int n \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            command \u003d new CmdDone(n);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        else if (cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            String temp \u003d cmd.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            int n \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            return new CmdDelete(n);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        else if (cmd.contains(\"find\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            if (cmd.equals(\"find\"))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                throw new DukeException(\"    OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            String keyword \u003d cmd.split(\" \")[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            command \u003d new CmdFind(keyword);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            String keyword \u003d cmd.split(\" \")[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            if (!(keyword.equals(\"todo\") || keyword.equals(\"deadline\") || keyword.equals(\"event\"))) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                throw new DukeException(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            command \u003d new CmdAdd(keyword, cmd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        file \u003d filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        ArrayList\u003cTask\u003e item \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            while ((s \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                s \u003d s.replace(\u0027|\u0027, \u0027/\u0027);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String[] detail \u003d s.split(\" / \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                Task t \u003d new Task(\"empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (detail[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    t \u003d new Todo(detail[2]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                } else if (detail[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    t \u003d new Deadline(detail[2], detail[3]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    t \u003d new Event(detail[2], detail[3]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (detail[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                item.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return item;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void writeFile(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            bufferedWriter.write(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                if (t instanceof Todo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    if (t.isDone)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 1 | \" + t.description + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 0 | \" + t.description + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    if (t.isDone)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 1 | \" + t.description + \" | \" + ((Deadline) t).by + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 0 | \" + t.description + \" | \" + ((Deadline) t).by + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                else if (t instanceof Event) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    if (t.isDone)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 1 | \" + t.description + \" | \" + ((Event) t).at + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    else"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        bufferedWriter.write(t.symbol + \" | 0 | \" + t.description + \" | \" + ((Event) t).at + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 70
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return (isDone? \"[✓]\" : \"[✗]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected static  ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e initialList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list \u003d initialList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Task getTask(int num) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return list.get(num);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void doneTask(int num) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Task deleteTask(int num) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        Task temp \u003d list.get(num);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.remove(num);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void addTodo(Todo t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void addDeadline(Deadline d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.add(d);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void addEvent(Event e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        list.add(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 48
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String readCmd() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void error(String reaction) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(reaction);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    OOPS!!! This is not a valid input :-(\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 37
    }
  }
]

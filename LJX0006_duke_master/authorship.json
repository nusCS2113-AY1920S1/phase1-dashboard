[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        String s \u003d in.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        Task[] item \u003d new Task[100];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        int n \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        while (!(s.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d n; i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.print(\"     \" + i + \". \" + item[i - 1].toString() + \"\\n\".toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            else if (s.contains(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                String temp \u003d s.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                int num \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                item[num - 1].markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"       [âœ“] \" + item[num - 1].description + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    String[] type \u003d s.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    if (!(type[0].equals(\"todo\") || type[0].equals(\"deadline\") || type[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    switch (type[0]) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        case \"todo\": {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            if (s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            Task t \u003d new Todo(s.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            item[n++] \u003d t;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            if (s.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            String[] getDate \u003d s.split(\"/by \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            Task t \u003d new Deadline(getDate[0].replaceFirst(\"deadline \", \"\"), getDate[getDate.length - 1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            item[n++] \u003d t;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            if (s.equals(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                                throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            String[] getDate \u003d s.split(\"/at \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            Task t \u003d new Event(getDate[0].replaceFirst(\"event \", \"\"), getDate[getDate.length - 1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            item[n++] \u003d t;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.println(\"     \" + item[n - 1].toString());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.println(\"     Now you have \" + n + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                s \u003d in.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "                + \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 76,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    DukeException(){}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    DukeException(String errorMsg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return (isDone? \"[âœ“]\" : \"[âœ—]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LJX0006"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 21
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LJX0006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LJX0006": 9
    }
  }
]

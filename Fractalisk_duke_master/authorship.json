[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 9,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import static java.time.format.TextStyle.FULL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class extends the Node class, adding additional data required in a Deadline type entry"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Deadline extends Node{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private Calendar datetime \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private char nodetype \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private Month month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This is the initialization function for a Deadline class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param description The description associated with a Deadline class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param info This is the raw string data associated with datatime"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param datetime This is the parsed Calendar data associated with datetime"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public Deadline(String description, String info, Calendar datetime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.text \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.day \u003d datetime.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.month \u003d Month.of(datetime.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.year \u003d datetime.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns a String containing all the data to be printed out to the user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string containing all the data to be printed"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"hh.mm a\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            return this.text + \"(by: \" + day + \" \" + month.getDisplayName(FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    + \" \" + year + \" \" + dateFormat.format(datetime.getTime()) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            return this.text + \"(by:\" + info + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns a String containing status information"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string containing status information"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String status() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return \"[\" + nodetype + \"]\"+ status;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This is the main class, used in absence of GUI"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static Scanner datainput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static Inputparser interpreter \u003d new Inputparser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /** This is the main function"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Printer.init();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String userinput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int handler;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        interpreter.parseSave();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            userinput \u003d datainput.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            handler \u003d interpreter.parse(userinput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            if (handler \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        interpreter.writesave();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        interpreter.closesave();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 25,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class is used to print error messages to the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static Printer jout \u003d new Printer();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int doneInput() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears the command was entered wrongly.\\n      Try \\\"done *insert index here*\\\"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int doneBound() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears an invalid index was entered.\\n     Please try again.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int unknown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int deadlineInput() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears the command was entered wrongly.\\n      Try \\\"deadline *insert info here* /by *deadline*\\\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int eventInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears the command was entered wrongly.\\n      Try \\\"event *insert info here* /at *venue*\\\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int memoryfull() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears you have reached the maximum memory allocated to duke.\\n     It is now impossible to add more entries\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int fieldempty() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears your command has a few missing fields\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                \"     please try again.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int removeoob() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears you are trying to delete a nonexistent entry\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                \"     Please try again.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int removeinput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        jout.print(\"☹ OOPS!!! It appears your command has a few input errors.\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                \"     Please try again.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 49
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import static java.time.format.TextStyle.FULL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class extends the Node class, adding additional data required in a Event type entry"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Event extends Node{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private Calendar datetime \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private char nodetype \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private int day;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private Month month;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private int year;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private String info;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This is the initialization function for a Event class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param description The description associated with a Event class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param info This is the raw string data associated with datatime"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param datetime This is the parsed Calendar data associated with datetime"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public Event(String description, String info, Calendar datetime) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.info \u003d info;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.text \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.day \u003d datetime.get(Calendar.DAY_OF_MONTH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.month \u003d Month.of(datetime.get(Calendar.MONTH) + 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            this.year \u003d datetime.get(Calendar.YEAR);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns a String containing all the data to be printed out to the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string containing all the data to be printed"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        DateFormat dateFormat \u003d new SimpleDateFormat(\"hh.mm a\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        if (datetime !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            return this.text + \"(at: \" + day + \" \" + month.getDisplayName(FULL, Locale.ENGLISH)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    + \" \" + year + \" \" + dateFormat.format(datetime.getTime()) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            return this.text + \"(at:\" + info + \")\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns a String containing status information"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string containing status information"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String status() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return \"[\" + nodetype + \"]\"+ status;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 61
    }
  },
  {
    "path": "src/main/java/Inputparser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class is used to parse all user inputs from the console"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Inputparser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static Printer jout \u003d new Printer();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static List jlist \u003d new List();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static String temp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static DukeExceptionHandler dukeException \u003d new DukeExceptionHandler();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static SaveUtil savehandler \u003d new SaveUtil();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static int MAX \u003d 100;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This program takes in a string USERINPUT, and parses it into its relevant commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param USERINPUT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return an integer from 0-7 depending on the command parsed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static int parse(String USERINPUT) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Scanner datainput \u003d new Scanner(USERINPUT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String COMMAND \u003d datainput.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        switch(COMMAND) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                jout.print(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                return 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                jout.list(jlist);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                datainput.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                return 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    index \u003d Integer.parseInt(datainput.nextLine());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jlist.markdone(index - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jout.done(jlist, index - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.doneBound();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (Exception f) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.doneInput();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                return 2;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (jlist.nodecount() \u003d\u003d MAX) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    datainput.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.memoryfull();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                String userinput \u003d datainput.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (userinput.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.fieldempty();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                jlist.addTodo(userinput);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                jout.addTodo(jlist);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                return 3;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (jlist.nodecount() \u003d\u003d MAX) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    datainput.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.memoryfull();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    temp \u003d datainput.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    String[] userinput1 \u003d temp.split(\"/by\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    if (userinput1[0].trim().length() \u003d\u003d 0 || userinput1[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        return DukeExceptionHandler.fieldempty();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jlist.addDeadline(userinput1[0], userinput1[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jout.addDeadlineEvent(jlist);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return 4;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.deadlineInput();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (jlist.nodecount() \u003d\u003d MAX) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    datainput.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.memoryfull();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    temp \u003d datainput.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    String[] userinput2 \u003d temp.split(\"/at\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    if (userinput2[0].trim().length() \u003d\u003d 0 || userinput2[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        return DukeExceptionHandler.fieldempty();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jlist.addEvent(userinput2[0], userinput2[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jout.addDeadlineEvent(jlist);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return 5;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return DukeExceptionHandler.eventInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"delete\" :"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    index \u003d datainput.nextInt();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jout.remove(jlist, index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jlist.remove(index-1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return 6;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    datainput.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return dukeException.removeoob();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (Exception f) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    datainput.nextLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return dukeException.removeinput();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            case \"find\" :"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    temp \u003d datainput.nextLine().trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    ArrayList\u003cInteger\u003e temp1 \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jlist.findNode(temp, temp1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    jout.found(jlist, temp1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return 7;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    return dukeException.removeinput();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        datainput.nextLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return DukeExceptionHandler.unknown();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function reads from the savefile found in the project\u0027s main directory"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void parseSave() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        savehandler.readsave(jlist);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function writes to the buffer of the savefile found in the project\u0027s main directory"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void writesave () {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        savehandler.writesave(jlist);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function writes from the buffer to the savefile found in the project\u0027s main directory"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void closesave() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        savehandler.closesave();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 139
    }
  },
  {
    "path": "src/main/java/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class is used to store an array of Node type data structures, and perform functions related to them"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    protected ArrayList\u003cNode\u003e memory \u003d new ArrayList\u003cNode\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    protected int objectcount \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Adds a Todo type entry to the array of Node"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The text associated with the Todo entry"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void addTodo(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        memory.add(new Todo(input));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        objectcount \u003d memory.size();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Adds a Deadline type entry to the array of Node"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The text associated with the Deadline entry"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param datetime The datetime associated with the Deadline entry"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void addDeadline(String input, String datetime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        SimpleDateFormat dateparser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            date \u003d dateparser.parse(datetime);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            cal.setTime(date);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            SimpleDateFormat altparser \u003d new SimpleDateFormat(\"dd MMMM yyyy hh.mm a\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                date \u003d altparser.parse(datetime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                cal.setTime(date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            } catch (ParseException f) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                cal \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        memory.add(new Deadline(input, datetime, cal));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        objectcount \u003d memory.size();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Adds a Event type entry to the array of Node"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The text associated with the Event entry"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param datetime The datetime associated with the Event entry"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void addEvent(String input, String datetime) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        SimpleDateFormat dateparser \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Calendar cal \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            date \u003d dateparser.parse(datetime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            cal.setTime(date);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            SimpleDateFormat altparser \u003d new SimpleDateFormat(\"dd MMMM yyyy hh.mm a\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                date \u003d altparser.parse(datetime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                cal.setTime(date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            } catch (ParseException f) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                cal \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        memory.add(new Event(input, datetime, cal));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        objectcount \u003d memory.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Given a keyword, find all the indexes associated with the keyword in the List"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The keyword to be used"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param templist1 The array used to store the indexes associated with the keyword"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void findNode(String input, ArrayList\u003cInteger\u003e templist1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        for (int i \u003d 0; i \u003c memory.size(); i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            if (memory.get(i).text().contains(input)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                templist1.add(i+1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns the text associated with an entry given its index number"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input the index of the entry"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string associated with the entry at the given index number"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String nodetext(int input) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return memory.get(input).text();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns the status associated with an entry given its index number"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input the index of the entry"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string associated with the status at the given index number"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String nodestatus(int input) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return memory.get(input).status();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns the total number of objects present in the List object"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return An integer representing the total number of objects present in the List"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public int nodecount() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return objectcount;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Given a index, sets the entry at the index as done in the List"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The index of the entry to be marked as done"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void markdone(int input) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Node temp \u003d memory.get(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        temp.setdone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        memory.set(input, temp);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Given a index, removes the entry at the index in the List"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The index of the entry to be removed"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void remove(int input) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        memory.remove(input);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        objectcount \u003d memory.size();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 129
    }
  },
  {
    "path": "src/main/java/Node.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * this public class is used to store information in the program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Node {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    protected String text;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    protected String status;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is used to access the text string variable"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return text Returns a string containing the text data stored in the node"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String text() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is used to access the status string variable"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return status Returns a string containing the text data stored in the node"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String status() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This is the initialization function for a Node object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param description This is the text associated with each Node object at its instantiation"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public Node(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.text \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This is the initialization function for a Node object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public Node() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.text \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This changes the status of the node to mark it as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void setdone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 46
    }
  },
  {
    "path": "src/main/java/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This public class is used to handle almost all of the program\u0027s needs in printing text to user in console"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static final String MARGIN \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static final String TAB \u003d \"     \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private static final String ADD \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function is called once at the start of the program to print the welcome message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                +\"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is a generic function to add formatting to a input string before it is printed out to the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input the input string to be printed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void print(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String useroutput \u003d MARGIN"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + input + \"\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(useroutput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is called to print to the user a message acknowledging a todo task has been added to the List"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input a descriptor of the todo task added to the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void addTodo(List input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int marker \u003d input.nodecount();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String useroutput \u003d MARGIN"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + ADD"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + input.nodestatus(marker-1) + input.nodetext(marker-1) + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"Now you have \" + (marker) + \" task\" + (marker \u003e 1 ? \"s in the list.\": \" in the list.\") + \"\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(useroutput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is called to print to the user a message acknowledging a"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * deadline or event task has been added to the List"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input a descriptor of the deadline or event task added to the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void addDeadlineEvent(List input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int marker \u003d input.nodecount();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String useroutput \u003d MARGIN"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + ADD"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + input.nodestatus(marker-1) + input.nodetext(marker-1) + \"\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"Now you have \" + (marker) + \" task\" + (marker \u003e 1 ? \"s in the list.\": \" in the list.\") + \"\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(useroutput);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function is used to print out the contents in a List to the user"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The List object to be printed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void list(List input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(MARGIN);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.println(TAB + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        while (counter \u003c input.nodecount()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.print(TAB + (counter+1) + \".\" );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.print(input.nodestatus(counter));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(input.nodetext(counter));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.println(MARGIN);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function is called to print a message acknowledging a certain numbered task in the List"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * object has been marked as done"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The list from which a object has been marked as done"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param index The index of the object in the list to be marked done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void done(List input, int index) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(MARGIN);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.println(TAB + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.println(TAB + \"[\\u2713]\" + input.nodetext(index));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(MARGIN);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function is called to find a entry in a given List"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input This is the List object to be searched"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param id This is the list of indexes corresponding to entries that match the search parameters in the List"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void found(List input, ArrayList\u003cInteger\u003e id) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int limit \u003d id.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int marker \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        if (limit \u003e 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            String useroutput \u003d MARGIN"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    + TAB + \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            while (marker \u003c limit) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                int temp \u003d id.get(marker) - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                useroutput +\u003d TAB + id.get(marker) + \". \" + input.nodestatus(temp) + input.nodetext(temp) + \"\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                marker++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            useroutput +\u003d MARGIN;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.print(useroutput);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.print(MARGIN);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(TAB + \"☹ OOPS!!! It appears there were no relevant results found.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.print(MARGIN);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * this function prints a message to the user acknowledging that an entry has been deleted from the List object"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param input The List object from which an entry is deleted"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param index The index of the entry to be deleted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void remove(List input, int index) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        int nodecount \u003d input.nodecount();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        String useroutput \u003d MARGIN"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + input.nodestatus(index-1) + input.nodetext(index-1) + \"\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + TAB + \"Now you have \" + (nodecount-1) + \" task\" + (nodecount \u003e 1 ? \"s in the list.\": \" in the list.\") + \"\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                + MARGIN;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        System.out.print(useroutput);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 137
    }
  },
  {
    "path": "src/main/java/SaveUtil.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class SaveUtil {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private BufferedWriter bufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private BufferedReader bufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * Initialization function for SaveUtil. Attempts to find a valid savefile, and if non-existent, create a new one"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public SaveUtil() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            bufferedWriter \u003d new BufferedWriter(new FileWriter(\"savedata\", true));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            bufferedReader \u003d new BufferedReader(new FileReader(\"savedata\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(\"     Unhandled exception occurred\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function reads from the save file that was either found or created in the initialization function"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * It then translates the data from the save and stores it in a List object"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param jlist List object to store translated data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return 0 when the function finishes execution"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public int readsave(List jlist) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            int marker \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            String data \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            while(data !\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                String[] temp \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                switch (temp[0]) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        jlist.addTodo(temp[2]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        if (temp[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                            jlist.markdone(marker);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        jlist.addDeadline(temp[2], temp[3]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        if (temp[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                            jlist.markdone(marker);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        jlist.addEvent(temp[2], temp[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        if (temp[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                            jlist.markdone(marker);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                marker++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                data \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                bufferedWriter \u003d new BufferedWriter(new FileWriter(\"savedata\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                bufferedReader \u003d new BufferedReader(new FileReader(\"savedata\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            } catch (IOException d) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                System.out.println(\"     Unhandled exception occurred\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(\"     Unhandled exception occurred\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function takes in a List object and translates it into data to be stored in the savefile"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param jlist List object to be translated into savefile"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return 0 when the function finishes execution"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public int writesave(List jlist) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            bufferedWriter \u003d new BufferedWriter(new FileWriter(\"savedata\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            int nodecount \u003d jlist.nodecount();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            String status \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            String entry \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            while (counter \u003c jlist.nodecount()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                status \u003d jlist.nodestatus(counter);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (status.contains(\"T\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d \"T|\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    if (status.contains(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"1|\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"0|\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d jlist.nodetext(counter);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (status.contains(\"D\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d \"D|\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    if (status.contains(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"1|\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"0|\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    String[] temp1 \u003d jlist.nodetext(counter).split(\"\\\\(by:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d temp1[0] + \"|\" + temp1[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry \u003d entry.substring(0, entry.length() - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                if (status.contains(\"E\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d \"E|\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    if (status.contains(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"1|\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                        entry +\u003d \"0|\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    String[] temp1 \u003d jlist.nodetext(counter).split(\"\\\\(at:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry +\u003d temp1[0] + \"|\" + temp1[1];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                    entry \u003d entry.substring(0, entry.length() - 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                bufferedWriter.write(entry + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                entry \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                System.out.println(\"     exception caught\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                bufferedWriter \u003d new BufferedWriter(new FileWriter(\"savedata\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                bufferedReader \u003d new BufferedReader(new FileReader(\"savedata\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            } catch (IOException d) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "                System.out.println(\"     Unhandled exception occurred\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(\"     Unhandled exception occurred\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function closes the write buffer to the savefile, completing the write process"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return 0 when the function finishes execution"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public int closesave() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "            System.out.println(\"     Unhandled exception occurred: Unable to save to savefile\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 148
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " * This class extends the Node class, adding additional data required for a Todo type entry"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "public class Todo extends Node{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    private char nodetype \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This is the initialization function for a Todo class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @param description the description text associated with a todo class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.text \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        this.status \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * This function returns a String containing status information"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     * @return A string containing status information"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public String status() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        return \"[\" + nodetype + \"]\"+ status;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 24
    }
  },
  {
    "path": "src/test/java/Duketest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "class Duketest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    public void Testcommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        Inputparser Inputparser \u003d new Inputparser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"bye\") \u003d\u003d 0);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"list \\n\") \u003d\u003d 1);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"todo Hello world\") \u003d\u003d 3);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"done 1\") \u003d\u003d 1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"deadline today /by tomorrow\") \u003d\u003d 4);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "        assertTrue(Inputparser.parse(\"event today /at tomorrow\") \u003d\u003d 5);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Fractalisk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Fractalisk": 15
    }
  }
]

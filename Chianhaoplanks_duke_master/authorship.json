[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 1,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public Deadline(String description, LocalDateTime by) throws InputException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.lang.Enum;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        //Greetings"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        //Taking in user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        Storage storage \u003d new Storage(\"/Users/chianhaoaw/Documents/GitHub/duke/src/main/duke.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        ArrayList\u003cTask\u003e CommandList \u003d storage.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        InputHandler inputHandler \u003d new InputHandler(userInput, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        inputHandler.HandleInput(CommandList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 24,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public Event(String description, LocalDateTime at) throws InputException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (at: \" + at + \")\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 12
    }
  },
  {
    "path": "src/main/java/InputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class InputException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public InputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 5
    }
  },
  {
    "path": "src/main/java/InputHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "enum update{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    DONE, REMOVE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class InputHandler {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    private Scanner userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    private Boolean goodbye;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public InputHandler(Scanner userInput, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.goodbye \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public void HandleInput(ArrayList\u003cTask\u003e CommandList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        while (!goodbye) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                if (userInput.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    String phrase \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //says bye and exits the program"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    if (phrase.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        goodbye \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //ToDos task type"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] todotask \u003d phrase.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (todotask.length \u003c 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"OOPS!!! The description for todo cannot be empty\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            ToDos tds \u003d new ToDos(todotask[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            CommandList.add(tds);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\t\\t\" + tds.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(storage.numberofTasks(CommandList.size()));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            storage.addtoFile(tds);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //Deadline task type"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] cmd \u003d phrase.split(\"deadline \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (cmd[1].isBlank() || !cmd[1].contains(\"/by\") || cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"\\tOOPS!!! The description for deadline cannot be empty!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] dltask \u003d cmd[1].split(\" /by \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (dltask.length \u003c 2) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"eh your deadline by when arh LOL\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        else if (dateFormatValid(dltask[1])){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            LocalDateTime ldt \u003d LocalDateTime.parse(dltask[1], formatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            Deadline dls \u003d new Deadline(dltask[0], ldt);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            CommandList.add(dls);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\t\\t\" + dls.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(storage.numberofTasks(CommandList.size()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            storage.addtoFile(dls);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //Event task type"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] cmd \u003d phrase.split(\"event \", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (cmd[1].isBlank() || !cmd[1].contains(\"/at\") || cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"\\tOOPS!!! The description for event cannot be empty!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] evtask \u003d cmd[1].split(\" /at \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (evtask.length \u003c 2) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"eh your event when arh LOL\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        else if (dateFormatValid(evtask[1])) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            LocalDateTime ldt \u003d LocalDateTime.parse(evtask[1], formatter);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            Event evs \u003d new Event(evtask[0], ldt);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            CommandList.add(evs);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\"\\t\\t\" + evs.toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(storage.numberofTasks(CommandList.size()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            storage.addtoFile(evs);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //list out all the tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.equals(\"list\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tHere are all the tasks in your list: \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        storage.readFile();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //mark a task/event as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.contains(\"done \")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] donecmd \u003d phrase.split(\" \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        int listNo \u003d Integer.parseInt(donecmd[1]) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (CommandList.get(listNo) !\u003d null) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            storage.UpdateFile(CommandList.get(listNo), update.DONE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            CommandList.get(listNo).MarkasDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\u0027\\t\u0027 + CommandList.get(listNo).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //delete a line"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.contains(\"delete \")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tNoted. I\u0027ve removed the task:\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] deletecmd \u003d phrase.split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        int listNo \u003d Integer.parseInt(deletecmd[1]) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (CommandList.get(listNo) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            storage.UpdateFile(CommandList.get(listNo), update.REMOVE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            System.out.println(\u0027\\t\u0027 + CommandList.get(listNo).toString());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            CommandList.remove(CommandList.get(listNo));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else if (phrase.contains(\"find \")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        String[] cmd \u003d phrase.split(\" \", 2);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        if (cmd.length \u003c 2) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            throw new InputException(\"\\tOOPS!!! keyword(s) not found!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            int idx \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            for (Task task : CommandList) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                                if (task.toString().contains(cmd[1])) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                                    idx++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                                    System.out.println(\"\\t\" + idx + \". \" + task.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //if input is incorrect show error msg"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        System.out.println(\"\\tOOPS!!! I\u0027m sorry I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            catch(InputException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    static Boolean dateFormatValid(String line) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        String value \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        LocalDateTime ldt \u003d null;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(value);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            ldt \u003d LocalDateTime.parse(line, formatter);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            System.out.println(\"Date format not valid. Please try again :)\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.getStackTrace();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 155
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.lang.Enum;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.nio.Buffer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    private static String filepath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public Storage (String filepath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filepath));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                String listedtask \u003d line.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                String[] task \u003d listedtask.split(\" \", 3);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                String value \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                LocalDateTime ldt \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(value);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                switch (task[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    //Done first then undone"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[T][\\u2713]\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task td \u003d new ToDos(task[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        td.MarkasDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(td);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[T][\\u2718]\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task todo \u003d new ToDos(task[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[D][\\u2713]\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        ldt \u003d LocalDateTime.parse(task[2].substring(5, task[2].length() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task dl \u003d new Deadline(task[1], ldt);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        dl.MarkasDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(dl);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[D][\\u2718]\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        ldt \u003d LocalDateTime.parse(task[2].substring(5, task[2].length() - 1));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task deadline \u003d new Deadline(task[1], ldt);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[E][\\u2713]\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        ldt \u003d LocalDateTime.parse(task[2].substring(5, task[2].length() - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task event \u003d new Event(task[1], ldt);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        event.MarkasDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    case \"[E][\\u2718]\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        ldt \u003d LocalDateTime.parse(task[2].substring(5, task[2].length() - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        Task ev \u003d new Event(task[1], ldt);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        list.add(ev);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (InputException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public static void addtoFile(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            FileWriter writer  \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            writer.write(\"\\t\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch(IOException error) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            System.err.format(\"IOException: %s%n\", error);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public static void readFile() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            FileReader reader  \u003d new FileReader(file);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            int i \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                String trimline \u003d line.trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                System.out.println(\"\\t\\t\" + (i) + \". \" + trimline);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch(IOException error) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            System.err.format(\"IOException: %s%n\", error);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public static void UpdateFile(Task task, update Update) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            Boolean ammended \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            File tempFile \u003d new File(file.getAbsolutePath() + \".tmp\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            BufferedWriter pw \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                String trimline \u003d line.trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                if (trimline.equals(task.toString()) \u0026\u0026 !ammended) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    switch (Update) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        case DONE:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            Task donetask \u003d task;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            donetask.MarkasDone();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            pw.write(\"\\t\" + donetask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                        case REMOVE:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                            continue;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    pw.write(line + \"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                    pw.flush();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            if (!file.delete()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                System.out.println(\"Cannot delete file\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            if (!tempFile.renameTo(file)) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "                System.out.println(\"Could not rename file\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public static String numberofTasks(int idx) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (\"\\tNow you have \" + idx + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 147
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public Task(String description) throws InputException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        if (description.equals(\"\")){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            throw new InputException(\"error error\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public void MarkasDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 23
    }
  },
  {
    "path": "src/main/java/ToDOs.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "public class ToDos extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public ToDos(String description) throws InputException{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "            throw new InputException(\"OOPS!!! The description for todo cannot be empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chianhaoplanks"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chianhaoplanks": 11
    }
  }
]

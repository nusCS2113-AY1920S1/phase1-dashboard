[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 25,
      "-": 15
    }
  },
  {
    "path": "src/main/java/DateTimeParser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String DATE_FORMATTER \u003d \"dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String formatDateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMATTER);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static LocalDateTime formatStringToDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMATTER);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_UNKNOWN_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 21
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Deadline extends Task implements ITaskWithDateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.formatDateTimeToString(by) + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String DIVIDER_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String INDENTATION_MESSAGE \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_GREET \u003d INDENTATION_MESSAGE + \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            INDENTATION_MESSAGE + \"What can I do for you?\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_ADD \u003d INDENTATION_MESSAGE + \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_DONE \u003d INDENTATION_MESSAGE + \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_LIST_EMPTY \u003d INDENTATION_MESSAGE + \"You have currently no tasks in your list.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_LIST_NON_EMPTY \u003d INDENTATION_MESSAGE + \"Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d INDENTATION_MESSAGE + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String[] TYPE_COMMANDS \u003d {\"todo\", \"deadline\", \"event\", \"done\", \"list\", \"bye\"};"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        // Greet user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(MESSAGE_GREET);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(DIVIDER_LINE + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Storage storage \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            tasks \u003d storage.getTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            System.out.println(INDENTATION_MESSAGE + e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            System.out.println(DIVIDER_LINE + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        boolean exitFlag \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        while (!exitFlag) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String userMessage \u003d scanner.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String userCommand \u003d userMessage.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (!Arrays.asList(TYPE_COMMANDS).contains(userCommand)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new DukeException(DukeException.EXCEPTION_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                switch (userCommand) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        String taskProperties \u003d userMessage.split(userCommand, 2)[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        if (taskProperties.isEmpty()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        Task task \u003d setupTask(userCommand, taskProperties);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        if (storage \u003d\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            throw new DukeException(DukeException.EXCEPTION_ERROR_WRITE_FILE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(MESSAGE_ADD);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(INDENTATION_MESSAGE + \"  \" + task.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(INDENTATION_MESSAGE + \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"done\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        int index;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            index \u003d Integer.parseInt(userMessage.split(\"\\\\s+\")[1]) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        if (index \u003c 0 || index \u003e tasks.size() - 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            throw new DukeException(DukeException.EXCEPTION_TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(MESSAGE_DONE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(INDENTATION_MESSAGE + \"  \" + task.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"list\": {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        if (storage \u003d\u003d null) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            throw new DukeException(DukeException.EXCEPTION_ERROR_READ_FILE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(tasks.isEmpty() ? MESSAGE_LIST_EMPTY : MESSAGE_LIST_NON_EMPTY);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        int i \u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        for (Task task : tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            System.out.println(INDENTATION_MESSAGE + i++ + \".\" + task.toString());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"bye\": {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        exitFlag \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        System.out.println(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                System.out.println(DIVIDER_LINE + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                System.out.println(INDENTATION_MESSAGE + e.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                System.out.println(DIVIDER_LINE + \"\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static Task setupTask(String taskType, String taskProperties) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"todo\": {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new Todo(taskProperties);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            case \"event\": {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return setupTaskWithDateTime(taskType, taskProperties);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeException(DukeException.EXCEPTION_UNKNOWN_TASK);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static Task setupTaskWithDateTime(String taskType, String taskProperties) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String term;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            term \u003d \"/by\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            term \u003d \"/at\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String description \u003d taskProperties.split(term, 2)[0].trim();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String taskDateTime;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            taskDateTime \u003d taskProperties.split(term, 2)[1].trim();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_EMPTY_DATETIME);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (taskDateTime.isEmpty()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_EMPTY_DATETIME);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        LocalDateTime dateTime \u003d DateTimeParser.formatStringToDateTime(taskDateTime);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new Event(description, dateTime);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 162,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_UNKNOWN_COMMAND \u003d \"Sorry, I do not understand this command. \" +"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please enter a proper command.\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DESCRIPTION \u003d \"The description of this command cannot be empty. \" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please enter a description.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DATETIME \u003d \"The date/time argument of this command cannot be empty. \" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please enter a date and/or time.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_TASK_NOT_FOUND \u003d \"You have selected a task that does not exist in your current list. \" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please enter the command \\\"list\\\" to view your current list.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_UNKNOWN_TASK \u003d \"I do not know how to create such a task.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_CREATE_FILE \u003d \"I am unable to create file duke.txt. \" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_READ_FILE \u003d \"Failure reading from file duke.txt. \" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_WRITE_FILE \u003d \"Failure writing to file duke.txt.\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_UNKNOWN_DATETIME_FORMAT \u003d \"I do not understand the date/time argument provided. \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            \"Please provide the date/time in this format: dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 23
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Event extends Task implements ITaskWithDateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateTimeParser.formatDateTimeToString(at) + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 20
    }
  },
  {
    "path": "src/main/java/ITaskWithDateTime.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public interface ITaskWithDateTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FOLDER_LIST_TASKS \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String FILE_LIST_TASKS \u003d FOLDER_LIST_TASKS + \"/duke.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Storage() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            File file \u003d new File(FILE_LIST_TASKS);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // File exists; retrieve tasks list from it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                readFile(file);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // File doesn\u0027t exist; create it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                File folder \u003d new File(FOLDER_LIST_TASKS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (!folder.exists()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    folder.mkdir();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Exception: Unable to create file duke.txt (from file.createNewFile())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_CREATE_FILE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Exception generated from readFile(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void readFile(File file) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try (FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             BufferedReader br \u003d new BufferedReader(fr)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String[] taskAttributes \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskType \u003d taskAttributes[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                boolean isTaskDone \u003d taskAttributes[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskDescription \u003d taskAttributes[2].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        task \u003d new Deadline(taskDescription, DateTimeParser.formatStringToDateTime(taskAttributes[3].trim()));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        task \u003d new Event(taskDescription, DateTimeParser.formatStringToDateTime(taskAttributes[3].trim()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    if (isTaskDone) task.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_READ_FILE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void updateFile(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(FILE_LIST_TASKS, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             PrintWriter out \u003d new PrintWriter(bw)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskType \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (task instanceof Todo) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskType \u003d \"T\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskType \u003d \"D\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskType \u003d \"E\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (taskType !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    String taskAttributes \u003d taskType + \" | \" + (task.isDone ? \"1\" : \"0\") + \" | \" + task.getDescription();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    if (task instanceof ITaskWithDateTime) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                        taskAttributes \u003d taskAttributes.concat(\" | \" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                                DateTimeParser.formatDateTimeToString(((ITaskWithDateTime) task).getDateTime()));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    // Write line to file"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    out.println(taskAttributes);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_WRITE_FILE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 104
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 10
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 2
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 25,
      "-": 15
    }
  },
  {
    "path": "src/main/java/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to add {@link task.Task} to the user\u0027s Task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime taskDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public AddCommand(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskDateTime \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public AddCommand(String taskType, String taskDescription, LocalDateTime taskDateTime) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskDateTime \u003d taskDateTime;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to add Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the storage object faces an error writing to the text file (in the hard drive)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            task \u003d new Deadline(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // case \"event\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            task \u003d new Event(taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(Ui.MESSAGE_ADD);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(\"  \" + task.toString());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 65
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Abstract base class for all of the Commands {@link duke.Duke Duke} may execute during its operation."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    protected boolean exit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    Command() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        exit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 23
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to remove {@link task.Task} from the user\u0027s Task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.index \u003d taskIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to delete Task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the requested Task to be deleted does not exist,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       or the storage object faces an error writing to the text file (saved in the hard drive)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (index \u003c 0 || index \u003e (tasks.getSize() - 1)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task task \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(Ui.MESSAGE_DELETE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(\"  \" + task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 41
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to update the status (mark as completed) of a specified"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * {@link task.Task} in the user\u0027s Task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.index \u003d taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to update a specified Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the requested Task to be updated does not exist,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       or the storage object faces an error writing to the text file (saved in the hard drive)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        if (index \u003c 0 || index \u003e (tasks.getSize() - 1)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_TASK_NOT_FOUND);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task task \u003d tasks.markTaskAsDone(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(Ui.MESSAGE_DONE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(\"  \" + task.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 41
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to terminate Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to terminate Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showExitMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 26
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to search for relevant {@link task.Task Tasks}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * in the user\u0027s Task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.searchTerm \u003d searchTerm;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to search for relevant Tasks in the user\u0027s Task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        List\u003cTask\u003e foundTaskList \u003d tasks.findTasks(searchTerm);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String message \u003d foundTaskList.isEmpty() ? Ui.MESSAGE_FIND_EMPTY : Ui.MESSAGE_FIND_NON_EMPTY;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Task task : foundTaskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ui.showMessage(i++ + \".\" + task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 40
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Represents a specialised {@link command.Command} to display all {@link task.Task Tasks} in the user\u0027s Task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Executes Command to display all Tasks in the user\u0027s Task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param tasks   User\u0027s current {@link task.TaskList}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param ui      {@link ui.Ui} object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param storage {@link storage.Storage} object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String message \u003d (tasks.getSize() \u003d\u003d 0) ? Ui.MESSAGE_LIST_EMPTY : Ui.MESSAGE_LIST_NON_EMPTY;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showMessage(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ui.showMessage(i++ + \".\" + task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 29
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * A Personal Assistant Chatbot that helps a person keep track of his/her {@link task.Task Tasks}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String PATH_FILE_TASK_LIST \u003d System.getProperty(\"user.dir\") + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        new Duke(PATH_FILE_TASK_LIST).run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String userMessage \u003d ui.readUserMessage();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                Command command \u003d Parser.parse(userMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                ui.showBlankLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 53,
      "-": 2
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class specifying the possible Exceptions {@link duke.Duke Duke} may face during its operation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_UNKNOWN_COMMAND \u003d \"Sorry, I do not understand this command. \""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please enter a known command.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DESCRIPTION \u003d \"The description of this command cannot be empty. \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please enter a description.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_EMPTY_DATETIME \u003d \"The date/time argument of this command cannot be empty. \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please enter a date and/or time.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_UNKNOWN_DATETIME_FORMAT \u003d \"I do not understand the date/time \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"argument provided. \" + \"Please provide the date/time in this format: dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_TASK_NOT_FOUND \u003d \"You have selected a task that does not exist \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"in your current list. \" + \"Please enter the command \\\"list\\\" to view your current list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_NON_INTEGER_DESCRIPTION \u003d \"Please enter an integer for the description.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_CREATE_FILE \u003d \"I am unable to create file duke.txt. \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_READ_FILE \u003d \"Failure reading from file duke.txt. \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String EXCEPTION_ERROR_WRITE_FILE \u003d \"Failure writing to file duke.txt.\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please exit the program and try again later.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 28
    }
  },
  {
    "path": "src/main/java/parser/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for parsing date-time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String DATE_FORMATTER \u003d \"dd/MM/yyyy HH:mm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Converts a LocalDateTime object into a formatted String object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param dateTime LocalDateTime object with the intended date-time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return The formatted date-time string (dd/MM/yyyy HH:mm)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static String formatDateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMATTER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Obtains an instance of LocalDateTime from a text string of format \"dd/MM/yyyy HH:mm\"."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param dateTime The text to parse."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return The parsed LocalDateTime object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DateTimeParseException If the format of the given text does not follow the above format."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static LocalDateTime formatStringToDateTime(String dateTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMATTER);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return LocalDateTime.parse(dateTime, formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 35
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for parsing the user messages received by {@link duke.Duke Duke}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Obtains an instance of {@link command.Command} from the user message received."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param userMessage String message inputted by the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Command to be executed by Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If the format of the user message received is incorrect."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static Command parse(String userMessage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String command \u003d userMessage.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String taskAttributes \u003d userMessage.split(command, 2)[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (taskAttributes.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // description \u003d taskAttributes"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new AddCommand(command, taskAttributes);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String key;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    key \u003d \"/by\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    // command.equals(\"event\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    key \u003d \"/at\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskDescription \u003d taskAttributes.split(key, 2)[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (taskDescription.isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                LocalDateTime taskDateTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    String dateTime \u003d taskAttributes.split(key, 2)[1].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskDateTime \u003d DateTimeParser.formatStringToDateTime(dateTime);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new DukeException(DukeException.EXCEPTION_EMPTY_DATETIME);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new DukeException(DukeException.EXCEPTION_UNKNOWN_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new AddCommand(command, taskDescription, taskDateTime);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String searchTerm \u003d userMessage.split(command, 2)[1].trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (searchTerm.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new FindCommand(searchTerm);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String description \u003d userMessage.split(command, 2)[1].trim();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (description.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeException(DukeException.EXCEPTION_EMPTY_DESCRIPTION);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                index \u003d Integer.parseInt(description) - 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                throw new DukeException(DukeException.EXCEPTION_NON_INTEGER_DESCRIPTION);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // command.equals(\"done\")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Empty string or unknown command."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_UNKNOWN_COMMAND);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 106
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.ITaskWithDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for all I/O operations (i.e. read/write operations on the hard drive) of {@link duke.Duke Duke}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Storage(final String filePath) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // File doesn\u0027t exist; create it."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                Files.createDirectories(Paths.get(filePath).getParent());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Error creating file duke.txt"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_CREATE_FILE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Reads text file (saved in hard drive) to retrieve the saved Task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return List of Tasks retrieved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If there is an error reading the text file,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *                       or the format of the date and time read is incorrect."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try (FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             BufferedReader br \u003d new BufferedReader(fr)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String[] taskAttributes \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskType \u003d taskAttributes[0].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                boolean isTaskDone \u003d taskAttributes[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskDescription \u003d taskAttributes[2].trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                LocalDateTime taskDateTime;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskDateTime \u003d DateTimeParser.formatStringToDateTime(taskAttributes[3].trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    // taskType.equals(\"T\")"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskDateTime \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    throw new DukeException(DukeException.EXCEPTION_UNKNOWN_DATETIME_FORMAT);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskList.add(new Todo(taskDescription, isTaskDone));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskList.add(new Deadline(taskDescription, taskDateTime, isTaskDone));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskList.add(new Event(taskDescription, taskDateTime, isTaskDone));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            // Unable to read file duke.txt"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_READ_FILE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Writes Task list into the text file (saved on the hard drive)."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param taskList Task list to be written."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @throws DukeException If there is an error writing to the text file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void save(List\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        try (FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "             PrintWriter out \u003d new PrintWriter(bw)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskType \u003d (task instanceof Todo) ? \"T\" : (task instanceof Deadline) ? \"D\" : \"T\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskStatus \u003d task.isDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskDescription \u003d task.getDescription();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                String taskAttributes \u003d taskType + \" | \" + taskStatus + \" | \" + taskDescription;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                if (task instanceof ITaskWithDateTime) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                    taskAttributes \u003d taskAttributes.concat(\" | \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                            + DateTimeParser.formatDateTimeToString(((ITaskWithDateTime) task).getDateTime()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                // Write line to file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                out.println(taskAttributes);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            throw new DukeException(DukeException.EXCEPTION_ERROR_WRITE_FILE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 125
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class representing a specialised {@link task.Task}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Deadline object has a date-time element associated with it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Deadline extends Task implements ITaskWithDateTime {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets full details of Deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Deadline\u0027s full details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + DateTimeParser.formatDateTimeToString(by) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets date-time of Deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Deadline\u0027s date-time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 43
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class representing a specialised {@link task.Task}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Event object has a date-time element associated with it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Event extends Task implements ITaskWithDateTime {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Event(String description, LocalDateTime at, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets full details of Event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Event\u0027s full details."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + DateTimeParser.formatDateTimeToString(at) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets date-time of Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Event\u0027s date-time."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 43
    }
  },
  {
    "path": "src/main/java/task/ITaskWithDateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public interface ITaskWithDateTime {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    LocalDateTime getDateTime();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 7
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class representing a generic Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Marks Task as completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets status icon of Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Tick if Task has been completed. Otherwise, returns \"X\" symbol."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets description of Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Task\u0027s description."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets current status of Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return True if Task is completed. Otherwise, returns false."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets full details of Task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Task\u0027s full details."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 63
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * This class consists of methods that operate and modify the user\u0027s {@link task.Task} list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Adds Task to user\u0027s Task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Removes Task from user\u0027s Task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param taskIndex Index of the Task to be removed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Removed Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Task deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Finds relevant Tasks in user\u0027s Task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param searchTerm String text to search for."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return List of relevant Tasks found. Returns an empty list if no relevant Tasks are found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cTask\u003e findTasks(String searchTerm) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        List\u003cTask\u003e foundTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            if (task.toString().contains(searchTerm)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                foundTaskList.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return foundTaskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Marks Task in user\u0027s Task list as completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @param taskIndex Index of the Task to be updated."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Updated Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Task markTaskAsDone(int taskIndex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 80
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class representing a specialised {@link task.Task}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * Gets full details of Todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     * @return Todo\u0027s full details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 24
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " * Class responsible for the user interface of {@link duke.Duke Duke}."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_FIND_EMPTY \u003d \"There are no matching tasks in your list. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "            + \"Please try another keyword.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_FIND_NON_EMPTY \u003d \"Here are the matching task(s) in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_LIST_EMPTY \u003d \"You have currently no tasks in your list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public static final String MESSAGE_LIST_NON_EMPTY \u003d \"Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String DIVIDER_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String INDENTATION_MESSAGE \u003d \"     \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_GREET \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_WELCOME_QUESTION \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(DIVIDER_LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showBlankLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(INDENTATION_MESSAGE + message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(INDENTATION_MESSAGE + errorMessage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showMessage(MESSAGE_WELCOME_GREET);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showMessage(MESSAGE_WELCOME_QUESTION);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showBlankLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showExitMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showMessage(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public void showLoadingError(String errorMessage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showMessage(errorMessage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        showBlankLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    public String readUserMessage() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 75
    }
  },
  {
    "path": "src/test/java/command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class AddCommandTest {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String PATH_FILE_STORAGE \u003d System.getProperty(\"user.dir\") + \"/data/duke_test.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void setUp() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE).toPath());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void tearDown() throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE).toPath());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage \u003d new Storage(PATH_FILE_STORAGE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void execute_todo_success() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Command addCommand \u003d Parser.parse(\"todo eat dinner\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        addCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskList.getTasks().get(0).toString(), \"[T][\\u2718] eat dinner\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(storage.load().get(0).toString(), \"[T][\\u2718] eat dinner\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 50
    }
  },
  {
    "path": "src/test/java/command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class ExitCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String PATH_FILE_STORAGE \u003d System.getProperty(\"user.dir\") + \"/data/duke_test.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final PrintStream outStandard \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final ByteArrayOutputStream outNew \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void setUp() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE).toPath());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.setOut(new PrintStream(outNew));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void tearDown() throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE).toPath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        System.setOut(outStandard);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage \u003d new Storage(PATH_FILE_STORAGE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void execute_exit_success() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Command exitCommand \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        exitCommand.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(outNew.toString().trim(), \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 55
    }
  },
  {
    "path": "src/test/java/parser/DateTimeParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class DateTimeParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void formatDateTimeToString_localDateTime_success() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.of(2019, 9, 9, 8, 56);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(DateTimeParser.formatDateTimeToString(dateTime), \"09/09/2019 08:56\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void formatStringToDateTime_validFormat_success() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        /* VALID DATE-TIME FORMAT */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(DateTimeParser.formatStringToDateTime(\"09/09/2019 08:56\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                LocalDateTime.of(2019, 9, 9, 8, 56));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void formatStringToDateTime_invalidFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        /* INVALID DATE-TIME FORMAT */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"090919 0856\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"09-09-2019 08:56\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"09/09/19 08:56\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"09/09/2019 08:56 pm\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"tomorrow\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DateTimeParseException.class, () -\u003e DateTimeParser.formatStringToDateTime(\"next Monday\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 35
    }
  },
  {
    "path": "src/test/java/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void parse_validCommands_success() throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        /* VALID COMMANDS */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"todo borrow books\") instanceof AddCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"deadline assignment 1 /by 01/09/2019 23:59\") instanceof AddCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"event Evan\u0027s birthday party /at 05/09/2019 15:00\") instanceof AddCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"delete 3\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"find assignment\") instanceof FindCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void parse_invalidCommands_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        /* INVALID COMMANDS */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"blah\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"todo\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline assignment 2\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline assignment 2 /by today\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"event shower /by\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"event shower /by 05/09/2019 23:59\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"deadline homework 1 /at 05/09/2019 23:59\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"find\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"done x\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"done\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete this\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e Parser.parse(\"delete\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 45
    }
  },
  {
    "path": "src/test/java/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.AfterAll;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.MethodOrderer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Order;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.TestMethodOrder;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "@TestMethodOrder(MethodOrderer.OrderAnnotation.class)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String PATH_FILE_STORAGE \u003d System.getProperty(\"user.dir\") + \"/data/duke_test.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static final String PATH_FILE_STORAGE_EMPTY \u003d System.getProperty(\"user.dir\") + \"/data/duke_test_empty.txt\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Storage storageEmpty;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime dateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private static void deleteFiles() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE).toPath());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Files.deleteIfExists(new File(PATH_FILE_STORAGE_EMPTY).toPath());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeAll"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void setUp() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        deleteFiles();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @AfterAll"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    static void tearDown() throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        deleteFiles();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Order(1)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void save_nonEmptyTaskList_success() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage \u003d new Storage(PATH_FILE_STORAGE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage.save(Arrays.asList(new Todo(\"Eat rice\"),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                new Deadline(\"Lab assignment 3\", dateTime, true)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Order(2)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void load_nonEmptyTaskList_success() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storage \u003d new Storage(PATH_FILE_STORAGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(storage.load().size(), 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(storage.load().get(0).toString(), \"[T][\\u2718] Eat rice\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(storage.load().get(1).toString(), \"[D][\\u2713] Lab assignment 3 (by: \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Order(3)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void save_emptyTaskList_success() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storageEmpty \u003d new Storage(PATH_FILE_STORAGE_EMPTY);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storageEmpty.save(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Order(4)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void load_emptyTaskList_success() throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        storageEmpty \u003d new Storage(PATH_FILE_STORAGE_EMPTY);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(storageEmpty.load().isEmpty());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 79
    }
  },
  {
    "path": "src/test/java/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Deadline deadlineOne;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Deadline deadlineTwo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Deadline deadlineThree;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        dateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        deadlineOne \u003d new Deadline(\"Assignment 1\", dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        deadlineTwo \u003d new Deadline(\"Assignment 2\", dateTime, false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        deadlineThree \u003d new Deadline(\"Assignment 3\", dateTime, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineOne.toString(), \"[D][\\u2718] Assignment 1 (by: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineTwo.toString(), \"[D][\\u2718] Assignment 2 (by: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineThree.toString(), \"[D][\\u2713] Assignment 3 (by: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testGetDateTime() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineOne.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineTwo.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadlineThree.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 41
    }
  },
  {
    "path": "src/test/java/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import parser.DateTimeParser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Event eventOne;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Event eventTwo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Event eventThree;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        dateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        eventOne \u003d new Event(\"John\u0027s birthday party\", dateTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        eventTwo \u003d new Event(\"May\u0027s birthday party\", dateTime, false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        eventThree \u003d new Event(\"Mary\u0027s birthday party\", dateTime, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventOne.toString(), \"[E][\\u2718] John\u0027s birthday party (at: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventTwo.toString(), \"[E][\\u2718] May\u0027s birthday party (at: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventThree.toString(), \"[E][\\u2713] Mary\u0027s birthday party (at: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "                + DateTimeParser.formatDateTimeToString(dateTime) + \")\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testGetDateTime() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventOne.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventTwo.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(eventThree.getDateTime(), dateTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 41
    }
  },
  {
    "path": "src/test/java/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private TaskList taskListEmpty;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        tasks.add(new Todo(\"Dance\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        tasks.add(new Event(\"Coding competition\", LocalDateTime.now()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskListEmpty \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void addTask_nonEmptyList_success() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task deadline \u003d new Deadline(\"Coding assignment\", LocalDateTime.now());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskList.getSize(), 3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadline, taskList.getTasks().get(taskList.getSize() - 1));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void addTask_emptyList_success() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        Task deadline \u003d new Deadline(\"Coding assignment\", LocalDateTime.now());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskListEmpty.addTask(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskListEmpty.getSize(), 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(deadline, taskListEmpty.getTasks().get(0));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void deleteTask_validIndexOnNonEmptyList_success() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList.deleteTask(0);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskList.getSize(), 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void deleteTask_invalidIndexOnNonEmptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.deleteTask(2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void deleteTask_emptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskListEmpty.deleteTask(0));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void findTask_nonEmptyList_success() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskList.findTasks(\"Coding\").size(), 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskList.findTasks(\"Eat\").size(), 0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void findTask_emptyList_success() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskListEmpty.findTasks(\"Dance\").size(), 0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void markTaskAsDone_validIndexOnNonEmptyList_success() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertFalse(taskList.getTasks().get(0).isDone());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskList.markTaskAsDone(0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(taskList.getTasks().get(0).isDone());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void markTaskAsDone_invalidIndexOnNonEmptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.markTaskAsDone(4));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void markTaskAsDone_emptyList_exceptionThrown() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskListEmpty.markTaskAsDone(0));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 90
    }
  },
  {
    "path": "src/test/java/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Task taskOne;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Task taskTwo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    private Task taskThree;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void initialise() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskOne \u003d new Task(\"Watch movie\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskTwo \u003d new Task(\"Review movie\", false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskThree \u003d new Task(\"Download movie\", true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testMarkAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskOne.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(taskOne.isDone());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskTwo.markAsDone();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(taskTwo.isDone());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        taskThree.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertTrue(taskThree.isDone());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testGetStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskOne.getStatusIcon(), \"\\u2718\");    // X"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskTwo.getStatusIcon(), \"\\u2718\");    // X"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskThree.getStatusIcon(), \"\\u2713\");  // tick"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testGetDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskOne.getDescription(), \"Watch movie\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskTwo.getDescription(), \"Review movie\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskThree.getDescription(), \"Download movie\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskOne.toString(), \"[\\u2718] Watch movie\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskTwo.toString(), \"[\\u2718] Review movie\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(taskThree.toString(), \"[\\u2713] Download movie\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 51
    }
  },
  {
    "path": "src/test/java/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gowgos5"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(new Todo(\"Read books\").toString(), \"[T][\\u2718] Read books\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(new Todo(\"Write books\", false).toString(), \"[T][\\u2718] Write books\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "        assertEquals(new Todo(\"Eat books\", true).toString(), \"[T][\\u2713] Eat books\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gowgos5"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gowgos5": 14
    }
  }
]

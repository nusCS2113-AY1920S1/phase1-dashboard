[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private CommandType command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private String processedInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private boolean exit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        listCommand, exitCommand, helpCommand, addTodo, addDeadline, addEvent, deleteCommand, doneCommand, findCommand, invalidInput"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Command(CommandType command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Command(CommandType command, String processedInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.processedInput \u003d processedInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.exit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void execute (Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        if (this.command \u003d\u003d CommandType.listCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.getList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.exitCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            this.exit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.goodbye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.helpCommand) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.getManual();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.addTodo) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ToDo.addToDo(this.processedInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.addDeadline) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Deadline.addDeadline(this.processedInput);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.addEvent) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Event.addEvent(processedInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.deleteCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Task.deleteTask(processedInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.doneCommand) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Task.doneTask(processedInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.findCommand) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Task.findTask(processedInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (this.command \u003d\u003d CommandType.invalidInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.getConfused();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return this.exit;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected String dateBackup;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Deadline(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.dateBackup \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \" + date + \")\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void addDeadline(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        int dateIdx \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            if (dateIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Specify a date or time using the keyword /by.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else if (input.substring(8,dateIdx).isBlank()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    System.out.println(\"Uh, the description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    Task.itemList.add(new Deadline(input.substring(9, dateIdx).trim(), input.substring(dateIdx + 4).trim()));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    addTask();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    System.out.println(\"Date and time format is invalid. (valid: dd/MM/yyyy HHmm)\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Specify a date or time after the keyword /by.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        Memory.readListFromFile();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.getLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            c.execute(ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ui.getLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        Memory.writeListToFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "claysmilesoil": 18
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public DukeException () {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected String dateBackup;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Event(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.dateBackup \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.date \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (at: \" + date + \")\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void addEvent(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        int dateIdx \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            if (dateIdx \u003d\u003d - 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Specify a date or time using the keyword /at.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else if (input.substring(5,dateIdx).isBlank()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Uh, the description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    Task.itemList.add(new Event(input.substring(6, dateIdx).trim(), input.substring(dateIdx + 4).trim()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    addTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    System.out.println(\"Date and time format is invalid. (valid: dd/MM/yyyy HHmm)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Specify a date or time after the keyword /at.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 38
    }
  },
  {
    "path": "src/main/java/Memory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Memory{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void writeListToFile() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            File f \u003d new File(\"data\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            f.mkdir(); // create directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            File file \u003d new File (\"data/List.txt\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            file.delete(); // deletes old file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/List.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            for (Task v : Task.itemList) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                String done \u003d v.isDone ? \"y\" : \"n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                if (v instanceof ToDo) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    fw.write(\"T|\" + done + \"|\" + ((ToDo) v).description + \"\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                } else if (v instanceof Deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    fw.write(\"D|\" + done + \"|\" + ((Deadline) v).description + \"\u003e\" + ((Deadline) v).dateBackup + \"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                } else if (v instanceof Event) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    fw.write(\"E|\" + done + \"|\" + ((Event) v).description + \"\u003e\" + ((Event) v).dateBackup + \"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (IOException | NullPointerException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(e.getMessage() + \". File may not be saved properly.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void readListFromFile(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            BufferedReader r \u003d new BufferedReader(new FileReader(\"data/List.txt\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            String line \u003d r.readLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                Task.addFromFile(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                line \u003d r.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            File f \u003d new File(\"data/List.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 40
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.listCommand);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.equals((\"bye\"))) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.exitCommand);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.equals(\"help\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.helpCommand);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.addTodo, fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.addDeadline, fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.addEvent, fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.deleteCommand, fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.doneCommand, fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else if (fullCommand.indexOf(\"find\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.findCommand, fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            return new Command(Command.CommandType.invalidInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 26
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public abstract class Task { // abstract?"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    //protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String statusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \" ); // check mark or x"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (this.statusIcon() + this.description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void addTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added this task:\\n   \" + itemList.get(itemList.size() - 1) + \"\\nNow you have \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                + itemList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void doneTask(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            int listIdx \u003d Integer.parseInt(input.substring(5).trim()) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            if (listIdx \u003e\u003d itemList.size() || listIdx \u003c 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"There\u0027s no task on the list corresponding to that number.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else if (itemList.get(listIdx).isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"You\u0027ve already marked this task as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"   \" + itemList.get(listIdx));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                itemList.get(listIdx).markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Great, I\u0027ve marked this task as done:\\n    \" + itemList.get(listIdx) +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                        \"\\nNow you have \" + itemList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | NumberFormatException e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Specify the number corresponding to the task on the list.\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void deleteTask(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            int listIdx \u003d Integer.parseInt(input.substring(6).trim()) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            if (listIdx \u003e\u003d itemList.size() || listIdx \u003c 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"There\u0027s no task on the list corresponding to that number.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Noted, I\u0027ve removed this task:\\n    \" + itemList.get(listIdx) +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                        \"\\nNow you have \" + (itemList.size()-1) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                itemList.remove(listIdx);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | NumberFormatException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Specify the number corresponding to the task on the list.\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void findTask(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        if (itemList.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"You have no tasks in your list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            String keyword \u003d input.substring(4).trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            ArrayList\u003cTask\u003e queryList \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            for (Task v : itemList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                if (v.description.contains(keyword)) queryList.add(v);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            for (int i \u003d 0; i \u003c queryList.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(i + 1 + \". \" + queryList.get(i));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void addFromFile(String line) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            switch(line.charAt(0)){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                case (\u0027T\u0027):"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    itemList.add(new ToDo(line.substring(4)));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                case (\u0027D\u0027):"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    itemList.add(new Deadline(line.substring(4,line.indexOf(\"\u003e\")), line.substring(line.indexOf(\"\u003e\")+ 1)));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                case (\u0027E\u0027):"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    itemList.add(new Event(line.substring(4,line.indexOf(\"\u003e\")), line.substring(line.indexOf(\"\u003e\") + 1)));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            itemList.get(itemList.size() - 1).isDone \u003d (line.charAt(2) \u003d\u003d \u0027y\u0027);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"There was an error in loading the file:\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Something went wrong when loading the file. File data may be corrupted.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 104
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public static void addToDo(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            if (input.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(\"Uh, the description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                itemList.add(new ToDo(input.substring(5).trim()));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                addTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private String line \u003d \"____________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    private static Scanner inp \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        // Greeting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        // startup"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(line + \"\\nHello, I\u0027m Duke!\\nWhat can I do for you?\\n\" + line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        return (inp.nextLine());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    // Exceptions and invalid inputs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getReadFileException(ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"There was an error in loading the file:\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getFileCorruptException() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Something went wrong when loading the file. File data may be corrupted.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getSaveFileError(Exception e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(e.getMessage() + \". File may not be saved properly.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getConfused() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Uh, dunno what that means. Type \\\"help\\\" for the list of commands available.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    // normal operation"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getManual () {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Here are the currently available commands:\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    1. todo [field]                 -- Add a todo task to the list\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    2. deadline [field] /by [time]  -- Add a deadline task to the list\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    3. event [field] /at [time]     -- Add an event to the list\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    4. done [number]                -- Mark corresponding task on the list as completed\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    5. delete [number]              -- Delete corresponding task on the list\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    5. list                         -- Display list of tasks\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    6. help                         -- Bring up this manual\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                \"    7. bye                          -- Close the program. \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void getList() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        if (Task.itemList.isEmpty()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"You have no tasks in your list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            for (int i \u003d 0; i \u003c Task.itemList.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "                System.out.println(i + 1 + \". \" + Task.itemList.get(i));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    // public void todoDesEmpty() {System.out.println(\"Uh, the description of a todo cannot be empty.\");}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    public void goodbye() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "        System.out.println(\"Bye, see you soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claysmilesoil"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claysmilesoil": 73
    }
  }
]

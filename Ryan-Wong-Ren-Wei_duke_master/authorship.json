[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Deadline(String description, String date){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Deadline(String description, String date, boolean isDone){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.lang.Object;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "import java.util.EnumSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    static String lineSeparation \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        Scanner reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        printWelcomeMessageAndInstructions();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        readFromFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String userInput \u003d reader.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            boolean changesMade \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                printListOfTasks(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"done\")) { //if user input only contains \"done\" with no other description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The index of a completed task cannot be empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(userInput.substring(5));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    tasks.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"[\\u2713] \" + tasks.get(taskNo - 1).getDescription());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    changesMade \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 6 \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of a delete command cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(userInput.substring(7));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    Task dummy \u003d tasks.get(7);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    tasks.remove(tasks.get(7));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"\\t\" + dummy.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    changesMade \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    dummy \u003d null;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"find\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Please enter what you wish to search for!\");;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    ArrayList\u003cString\u003e listOfFoundTasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    String searchFor \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    for (Task taskSearch : tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        if (taskSearch.getDescription().contains(searchFor)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                            listOfFoundTasks.add(taskSearch.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    if (listOfFoundTasks.isEmpty()) System.out.println(lineSeparation + \"Sorry, no such entries were found.\\n\" + lineSeparation);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        int index \u003d 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        for (String taskFound : listOfFoundTasks){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                            System.out.println(index + \". \" + taskFound);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                            index++;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                        System.out.println(lineSeparation);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"todo\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    tasks.add(new ToDo(userInput.substring(5)));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"[T][\\u2718] \" + userInput.substring(5));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    changesMade \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    int slashPos \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    String date \u003d userInput.substring(slashPos + 4);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    if ((date.length() - date.replace(\"/\", \"\").length()) \u003d\u003d 2) date \u003d convertDateFormat(date);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    tasks.add(new Deadline(userInput.substring(9, slashPos), date));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    changesMade \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (userInput.length() \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                if (userInput.equals(\"event\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    int slashPos \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    String date \u003d userInput.substring(slashPos + 4);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    if (date.contains(\"/\")) date \u003d convertDateFormat(date);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    tasks.add(new Event(userInput.substring(6, slashPos), date));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                    changesMade \u003d true;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            userInput \u003d reader.nextLine();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            if (changesMade) saveToFile(tasks);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(lineSeparation + \"Bye. Hope to see you again soon!\" + \"\\n\" + lineSeparation);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static void readFromFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        File file \u003d new File(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            boolean fileCreated \u003d false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            while (!fileCreated) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                System.out.println(\"No Duke file found!\\nCreating new file...\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                fileCreated \u003d file.createNewFile();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            System.out.println(\"done!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        Scanner scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String fileContent;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        while (scanFile.hasNextLine()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            fileContent \u003d scanFile.nextLine();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            boolean isDone \u003d fileContent.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            if (fileContent.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                tasks.add(new ToDo(fileContent.substring(7), isDone));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (fileContent.charAt(1) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                int posOfLine \u003d fileContent.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                tasks.add(new Event(fileContent.substring(7, posOfLine), fileContent.substring(posOfLine + 5, fileContent.length() - 1), isDone));"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            } else if (fileContent.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                int posOfLine \u003d fileContent.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                tasks.add(new Deadline(fileContent.substring(7, posOfLine), fileContent.substring(posOfLine + 5, fileContent.length() - 1), isDone));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static void saveToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String toWriteToFile \u003d \"\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        for (Task currTask : tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            toWriteToFile +\u003d currTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        FileWriter writer \u003d new FileWriter(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        writer.write(toWriteToFile);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static String convertDateFormat(String date){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String dateEdited \u003d date;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String day \u003d date.substring(0, dateEdited.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        dateEdited \u003d date.substring(dateEdited.indexOf(\u0027/\u0027)+1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String month \u003d dateEdited.substring(0, dateEdited.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        dateEdited \u003d dateEdited.substring(dateEdited.indexOf(\u0027/\u0027)+1);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String year \u003d dateEdited.substring(0, dateEdited.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        dateEdited \u003d dateEdited.substring(dateEdited.indexOf(\u0027 \u0027)+1);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String hours \u003d dateEdited.substring(0,2);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String minutes \u003d dateEdited.substring(2);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        int dayInt \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        if (dayInt \u003c 4) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            day \u003d (dayInt \u003d\u003d 3) ? \"3rd\" : (dayInt \u003d\u003d 2) ? \"2nd\" : \"1st\";"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        int monthInt \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        for (Months monthEnum : Months.values()){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            if (monthEnum.getNum() \u003d\u003d monthInt) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                month \u003d monthEnum.getMonth();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        int hoursInt \u003d Integer.parseInt(hours);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        if (hoursInt \u003e 12) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            hoursInt -\u003d 12;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            time \u003d Integer.toString(hoursInt) + \".\" + minutes + \"pm\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            time \u003d Integer.toString(hoursInt) + \".\" + minutes + \"am\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return day + \" of \" + month + \" \" + year + \", \" + time;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static void printWelcomeMessageAndInstructions(){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        String lineSeparation \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(lineSeparation + \"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"Commands:\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"1. list: Print a list of tasks currently stored.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"2. todo \u003cdescription of task\u003e: Adds a simple task with no time or date involved\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"3. event OR deadline \u003cdescription of task\u003e /at OR /by \u003ctime\u003e: adds an event/deadline to the list of tasks.\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"4. done \u003ctask number\u003e: completes a task\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"5. bye: exits the program\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"When entering dates and times, you may do so in the following format for faster entry : \\n\" +"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "                \"\u003cday\u003e/\u003cmonth\u003e/\u003cyear\u003e \u003ctime(24hr format)\u003e\\n\" + lineSeparation);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.println(\"Enter a command:\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public static void printListOfTasks(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            if (tasks.get(i) \u003d\u003d null) continue;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "            System.out.println(j + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 245,
      "Jeffry Lum": 2,
      "-": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Event(String description, String date){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Event(String description, String date, boolean isDone){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 17
    }
  },
  {
    "path": "src/main/java/Months.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "public enum Months {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Jan(\"January\", \"1\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Feb(\"February\", \"2\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Mar(\"March\", \"3\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    April(\"April\", \"4\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    May(\"May\", \"5\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    June(\"June\", \"6\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    July(\"July\", \"7\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Aug(\"August\", \"8\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Sep(\"September\", \"9\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Oct(\"October\", \"10\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Nov(\"November\", \"11\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Dec(\"December\", \"12\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    private final String month;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    private final String num;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    Months(String inputMonth, String inputNum){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        month \u003d inputMonth;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        num \u003d inputNum;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String getMonth(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public int getNum(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return Integer.parseInt(num);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 30
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return (isDone? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 31
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RyanWong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RyanWong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RyanWong": 15
    }
  }
]

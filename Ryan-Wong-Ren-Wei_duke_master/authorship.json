[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Represents a command that is passed via user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Multiple types of commands are possible, executed using switch case method."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * The String representing the type of command e.g add/delete task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * The String representing the continuation of the command, if it exists."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Contains further specific instructions about the command passed e.g which task to add or delete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected String continuation;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates a new command with the command type and specific instructions"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param command The Command type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param continuation The Command specific instructions"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Command(String command, String continuation){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.continuation \u003d continuation;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates a new command where only command param is passed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Specific instructions not necessary for these types of commands."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param command The Command type"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Command(String command){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.continuation \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Executes the command stored."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param tasks Class containing the list of tasks and all relevant methods."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param ui Class containing all relevant user interface instructions."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param storage Class containing access to the storage file and related instructions."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        boolean changesMade \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"list\" :"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                ui.printListOfTasks(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                changesMade \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(continuation);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    tasks.getTask(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskDone(tasks.getTask(taskNo - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (IndexOutOfBoundsException outOfBoundsE) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.noSuchTask();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (NumberFormatException notInteger) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.notAnInteger();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(continuation);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    Task currTask \u003d tasks.getTask(taskNo - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    tasks.deleteTask(taskNo - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskDeleted(currTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (IndexOutOfBoundsException outOfBoundsE) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.noSuchTask();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (NumberFormatException notInteger) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.notAnInteger();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                String searchFor \u003d continuation;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                String allTasksFound \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                for (Task taskFound : tasks.getTaskArrayList()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    int index \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    if (taskFound.getDescription().contains(searchFor)) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                        allTasksFound +\u003d index + \". \" + taskFound.toString() + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ++index;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                boolean tasksFound \u003d !allTasksFound.isEmpty();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                ui.searchTasks(allTasksFound, tasksFound);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                changesMade \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                if (continuation.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskDescriptionEmpty();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                tasks.addTask(new ToDo(continuation));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                ui.taskAdded(new ToDo(continuation), tasks.getNumTasks());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                if (continuation.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskDescriptionEmpty();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    int slashPos \u003d continuation.indexOf(\"/by\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    String date \u003d continuation.substring(slashPos + 4);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    String description \u003d continuation.substring(0, slashPos);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    Date dateOfDeadline \u003d new Date(date);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    tasks.addTask(new Deadline(description, dateOfDeadline.toString()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskAdded(new Deadline(description, dateOfDeadline.toString()), tasks.getNumTasks());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (StringIndexOutOfBoundsException outOfBoundsE) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.deadlineFormatWrong();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                if (continuation.isEmpty()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskDescriptionEmpty();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    int slashPos \u003d continuation.indexOf(\"/at\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    String date \u003d continuation.substring(slashPos + 4);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    String description \u003d continuation.substring(0, slashPos);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    Date dateOfEvent \u003d new Date(date);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    tasks.addTask(new Event(description, dateOfEvent.toString()));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.taskAdded(new Event(description, dateOfEvent.toString()), tasks.getNumTasks());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (StringIndexOutOfBoundsException outOfBoundsE) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    ui.eventFormatWrong();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (changesMade) storage.saveToFile(tasks, ui);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 148
    }
  },
  {
    "path": "src/main/java/Date.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Class representing the date of a time-specific task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Is able to convert format of DD/MM/YYYY TIME into format of (Date) of (Month), (Year) (Time)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Date {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * String representing date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * String representing time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new Date object using a String from user input or read from the storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Converts parameter dateAndTime into proper format, and separates date and time where applicable."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param dateAndTime String containing unformatted date and time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Date(String dateAndTime){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.time \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (dateAndTime.contains(\"/\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            boolean hasTime \u003d (dateAndTime.indexOf(\u0027 \u0027) !\u003d -1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String dateEdited \u003d dateAndTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String day \u003d dateAndTime.substring(0, dateEdited.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            dateEdited \u003d dateAndTime.substring(dateEdited.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String month \u003d dateEdited.substring(0, dateEdited.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            dateEdited \u003d dateEdited.substring(dateEdited.indexOf(\u0027/\u0027) + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String year;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String hours \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            String minutes \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            if (hasTime) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                year \u003d dateEdited.substring(0, dateEdited.indexOf(\u0027 \u0027));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                dateEdited \u003d dateEdited.substring(dateEdited.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                hours \u003d dateEdited.substring(0, 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                minutes \u003d dateEdited.substring(2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                year \u003d dateEdited;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            int dayInt \u003d Integer.parseInt(day);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            if (dayInt \u003c 4) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                day \u003d (dayInt \u003d\u003d 3) ? \"3rd\" : (dayInt \u003d\u003d 2) ? \"2nd\" : \"1st\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            int monthInt \u003d Integer.parseInt(month);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            for (Months monthEnum : Months.values()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                if (monthEnum.getNum() \u003d\u003d monthInt) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    month \u003d monthEnum.getMonth();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            if (hasTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                int hoursInt \u003d Integer.parseInt(hours);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                if (hoursInt \u003e 12) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    hoursInt -\u003d 12;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    time \u003d Integer.toString(hoursInt) + \".\" + minutes + \"pm\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    time \u003d Integer.toString(hoursInt) + \".\" + minutes + \"am\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            this.date \u003d day + \" of \" + month + \" \" + year;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            this.date \u003d dateAndTime;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Converts date and time to printable format for UI."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return String containing formatted date and time."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (time.equals(\"\")) return date;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        else return date + \", \" + time;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 82
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Deadline object inherits Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Is a type of task available for use."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Contains the date \u0026 time in a String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param date Deadline date \u0026 time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Deadline(String description, String date){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates deadline with boolean attached, so as to read from file correctly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param date Deadline date \u0026 time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param isDone Boolean defining if the task is completed or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Deadline(String description, String date, boolean isDone){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Converts deadline type task to string format for printing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Formatted string representing the deadline and its date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 40
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.lang.Object;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.EnumSet;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    static String lineSeparation \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        Scanner reader \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        Storage storage \u003d new Storage(new File(\"D:/duke/data/Duke.txt\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        TaskList tasks \u003d new TaskList(storage.readFromFile(ui));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String userInput \u003d reader.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "           Command currCommand \u003d parser.parseInput(userInput);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "           currCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "           userInput \u003d reader.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 26,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Event object inherits Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Is a type of task available for use."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    * Contains the date \u0026 time in a String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param date Event date \u0026 time."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Event(String description, String date){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates event with boolean attached, so as to read from file correctly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param date Event date \u0026 time."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param isDone Boolean defining if the task is completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Event(String description, String date, boolean isDone){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Converts event type task to string format for printing."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Formatted string representing the event, whether or not it is completed and its date."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 40
    }
  },
  {
    "path": "src/main/java/Months.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Enumeration containing the names of each month in order."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public enum Months {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Jan(\"January\", \"1\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Feb(\"February\", \"2\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Mar(\"March\", \"3\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    April(\"April\", \"4\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    May(\"May\", \"5\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    June(\"June\", \"6\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    July(\"July\", \"7\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Aug(\"August\", \"8\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Sep(\"September\", \"9\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Oct(\"October\", \"10\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Nov(\"November\", \"11\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Dec(\"December\", \"12\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Name of month"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private final String month;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Month index"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private final String num;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new month."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param inputMonth Name of month"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param inputNum Index of month"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    Months(String inputMonth, String inputNum){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        month \u003d inputMonth;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        num \u003d inputNum;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return current month"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String getMonth(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return month;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets index of current month."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return index of current month"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public int getNum(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return Integer.parseInt(num);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 52
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Contains method to parse the user input and interpret it for Command class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new Parser object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Parser(){}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Parses user input to extract command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param userInput String containing user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Command object after parsing input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Command parseInput(String userInput){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String continuation;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (userInput.contains(\" \")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            int indexOfSpace \u003d userInput.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            command \u003d userInput.substring(0, indexOfSpace);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            continuation \u003d userInput.substring(indexOfSpace + 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            return new Command(command, continuation);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            return new Command(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 28
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Class containing file path and scanner, allowing for reading from and writing to the storage file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Allows for creation of new storage file if necessary."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private Scanner scanFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new Storage object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param file The storage file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Storage(File file){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Reads from the file whenever the program is run."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Stores all read information into an array of strings to be returned."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Array of strings containing all information from the read file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public ArrayList\u003cString\u003e readFromFile(UI ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        boolean fileAssigned \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(ui.getLineSeparation());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            this.scanFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            fileAssigned \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.println(\"Task list loaded!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        } catch (FileNotFoundException FNFe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.println(\"No Duke file found!\\nCreating new file...\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            boolean fileCreated \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            while (!fileCreated) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    fileCreated \u003d file.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                } catch (IOException IOe) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                    System.out.println(\"Retrying...\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.println(\"New file created!\\nAssigning...\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(ui.getLineSeparation());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        ArrayList\u003cString\u003e readFromFile \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String fileContent;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (this.scanFile !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            while (this.scanFile.hasNextLine()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                fileContent \u003d this.scanFile.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                readFromFile.add(fileContent);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return readFromFile;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Saves current information to the storage file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param tasks Tasklist where information is extracted to be saved"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void saveToFile(TaskList tasks, UI ui){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String toWriteToFile \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        for (Task currTask : tasks.getTaskArrayList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            toWriteToFile +\u003d currTask.toString() + \"\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            writer.write(toWriteToFile);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        } catch (IOException IOe) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Represents a task that can be created, deleted and completed within the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Is to be the parent class for all types of tasks available for Duke program."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates task using description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates task including boolean representing whether or not the task is completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param isDone boolean representing state of task completion"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Returns a tick if the task is completed, else returns a cross"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Symbol tick or cross"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return (isDone)? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Marks a task as completed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets description of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * returns formatted string of task, including status icon and description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return string containing task in the format [(tick/cross)] (task description)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 59
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Allows for access to the list of tasks currently stored, and editing that list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Does NOT contain any methods for reading/writing to savefile."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * list of Task objects currently stored."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new TaskList object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param inputList list of strings containing all information extracted from save file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e inputList) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        taskArrayList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        for (String currLine : inputList){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            boolean isDone \u003d (currLine.charAt(4) \u003d\u003d \u0027\\u2713\u0027);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            if (currLine.charAt(1) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                taskArrayList.add(new ToDo(currLine.substring(7), isDone));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            } else if (currLine.charAt(1) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                int posOfLine \u003d currLine.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                taskArrayList.add(new Event(currLine.substring(7, posOfLine), currLine.substring(posOfLine + 5, currLine.length() - 1), isDone));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            } else if (currLine.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                int posOfLine \u003d currLine.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                taskArrayList.add(new Deadline(currLine.substring(7, posOfLine), currLine.substring(posOfLine + 5, currLine.length() - 1), isDone));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Adds a new task to the list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param task Task object to be added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.taskArrayList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param taskNo Index of task to be deleted"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void deleteTask(int taskNo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        this.taskArrayList.remove(taskNo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets list of Task objects stored"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Array\u003cTask\u003e containing all tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArrayList(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return this.taskArrayList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets number of tasks stored."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return number of tasks stored"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public int getNumTasks(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return taskArrayList.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets a specific task using indexing."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param index Index of task to be extracted"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return Task object of specified task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return taskArrayList.get(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets the entire list of tasks stored in String format"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return String containing all tasks, separated by a newline."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String listOfTasks_String() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        for (int i \u003d 0; i \u003c taskArrayList.size(); ++i) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            if (taskArrayList.get(i) \u003d\u003d null) continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            int j \u003d i + 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            allTasks +\u003d j + \". \" + this.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 88
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Subclass of Task class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * Type of class available for use within Duke program, not time-specific."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new ToDo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Creates new ToDo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Contains boolean signifying task completion so as to facilitate reading from save file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param isDone task completion"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public ToDo(String description, boolean isDone){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Gets task in string format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return String containing type of task and task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 33
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " * User interface: contains all methods pertaining to user interaction."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    private static String lineSeparation \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints welcome message \u0026 instructions for use."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void welcome(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(lineSeparation + \"Hello! I\u0027m Duke\\nWhat can i do for you?\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Commands:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"1. list: Print a list of tasks currently stored.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"2. todo \u003cdescription of task\u003e: Adds a simple task with no time or date involved\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"3. event OR deadline \u003cdescription of task\u003e /at OR /by \u003ctime\u003e: adds an event/deadline to the list of tasks.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"4. done \u003ctask number\u003e: completes a task\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"5. bye: exits the program\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"When entering dates and times, you may do so in the following format for faster entry : \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "                \"\u003cday\u003e/\u003cmonth\u003e/\u003cyear\u003e \u003ctime(24hr format)\u003e\\n\" + lineSeparation);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Enter a command:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * Prints a message when an invalid command is entered."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void printInvalidCommand(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Sorry! I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints entire list of tasks stored."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param tasks TaskList object containing all stored classes and pertaining methods."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public static void printListOfTasks(TaskList tasks){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(tasks.listOfTasks_String());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints goodbye message"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation + \"Bye. Hope to see you again soon!\\n\" + lineSeparation);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @return line of underscores to separate different UI outputs."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public String getLineSeparation(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        return lineSeparation;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when a task is successfully added"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param taskAdded task in question"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param numTasks total number of tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void taskAdded(Task taskAdded, int numTasks){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(lineSeparation + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(taskAdded.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Now you have \" + numTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when a task is marked as completed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param task task in question"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void taskDone(Task task) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when a task is deleted successfully"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param task task in question to be deleted"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void taskDeleted(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message containing tasks found when a search is performed."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints error message if no tasks are found"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param allFoundTasks string containing all the tasks found, separated by newline character"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * @param found boolean signifying whether or not any tasks were found"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void searchTasks(String allFoundTasks, boolean found) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        if (found) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.print(allFoundTasks);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.println(\"No such tasks were found! Please try again.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "            System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message if command does not contain valid input for related task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void noSuchTask(){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"There is no such task! Please try again.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message if no task description is found when adding a new task to the list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void taskDescriptionEmpty(){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"The description of your task cannot be empty!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when task index from input is not an integer"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void notAnInteger(){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"That is not an integer! Please enter the index of the task you intend to alter.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when format of input is wrong for adding new deadline"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void deadlineFormatWrong(){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Please enter the name of the task followed by the deadline, separated by /by\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     * prints message when input format is wrong for addition of new event type task."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void eventFormatWrong(){"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.println(\"Please enter the name of the event and its date/time, separated by /at\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        System.out.print(lineSeparation);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 162
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    public void testNumTasks(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        ArrayList\u003cString\u003e readFromFile \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        String fileContent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        fileContent \u003d \"[T][✘] hello\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        readFromFile.add(fileContent);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        fileContent \u003d \"[T][✓] gpaweijgpweijg\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        readFromFile.add(fileContent);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        fileContent \u003d \"[E][✘] apfiejpawi (at: 33410413)\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        readFromFile.add(fileContent);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        TaskList tasksTest \u003d new TaskList(readFromFile);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "        assertEquals(3, tasksTest.getNumTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ryan-Wong-Ren-Wei"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ryan-Wong-Ren-Wei": 29
    }
  }
]

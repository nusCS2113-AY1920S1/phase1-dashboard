[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "run {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 13,
      "Lindon Ng": 5
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateToString(by) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    private String dateToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return  dateTime.format(formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lindon Ng": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        readFromFile(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        while(!(input\u003dinputScanner.nextLine()).equals(\"bye\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                parseInput(input, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } catch(DukeException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void printMessage(String msg) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void parseInput(String input, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (input.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            parseToDo(input, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } else if (input.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            parseEvent(input, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } else if (input.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            parseDeadline(input, taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } else if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            markTaskAsDone(input, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            printList(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"You have no tasks in your list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        int start \u003d 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        outputString +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        for (Task value : taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            if (start \u003d\u003d taskList.size()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                outputString +\u003d start + \".\" + value.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                outputString +\u003d start + \".\" + value.toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                start++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(outputString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void markTaskAsDone(String input, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"\\\"☹ OOPS!!! The task to be marked as done cannot be empty.\\\"\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            taskNumber \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            printMessage(\"Please enter a number.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (taskNumber \u003e taskList.size())  {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"The task number is larger than the number of tasks in the list\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        Task item \u003d taskList.get(taskNumber-1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (item.getIsDone()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"Task is already done.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        item.markAsDone();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Nice! I\u0027ve marked this task as done: \\n  \" + item.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        saveToFile(taskList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void parseEvent(String input, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        input \u003d input.substring(7);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        int dateIndex \u003d input.indexOf(\"/at \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please indicate the event timing after \\\"/at\\\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String task \u003d input.substring(0, dateIndex-1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String at \u003d input.substring(dateIndex+4);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        LocalDateTime atValue \u003d parseDate(at);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (atValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        Event toAdd \u003d new Event(task, atValue);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        saveToFile(taskList);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void parseDeadline(String input, ArrayList\u003cTask\u003e taskList ) throws DukeException{"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        input \u003d input.substring(9);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        int dateIndex \u003d input.indexOf(\"/by \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please indicate the deadline after \\\"/by\\\"\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String by \u003d input.substring(dateIndex+4);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String task \u003d input.substring(0, dateIndex-1);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        LocalDateTime byValue \u003d parseDate(by);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (byValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        Deadline toAdd \u003d new Deadline(task, byValue);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        saveToFile(taskList);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void parseToDo(String input, ArrayList\u003cTask\u003e taskList) throws DukeException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\\"\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        ToDo toAdd \u003d new ToDo(input);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        printMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        saveToFile(taskList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void saveToFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String fileName \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        String toSave \u003d \"\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        createFileAndDirectory();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        for (Task value : taskList) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            String taskType \u003d \"\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            String className \u003d value.getClass().getSimpleName();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            int isDone \u003d 0;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            String description \u003d value.description;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            String newDate \u003d \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            if (className \u003d\u003d \"ToDo\") {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                taskType \u003d \"T\";"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } else if (className \u003d\u003d \"Deadline\") {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                taskType \u003d \"D\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                newDate \u003d unparseDate(((Deadline) value).by);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } else if (className \u003d\u003d \"Event\") {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                taskType \u003d \"E\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                newDate \u003d unparseDate(((Event) value).at);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            if (value.isDone) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                isDone \u003d 1;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                isDone \u003d 0;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            if (newDate !\u003d \"\") {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                toSave +\u003d taskType + \" | \" + Integer.toString(isDone) + \" | \" + description + \" | \" + newDate + \"\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                toSave +\u003d taskType + \" | \" + Integer.toString(isDone) + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            Files.writeString(Paths.get(fileName), toSave, StandardOpenOption.CREATE);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            saveToFile(taskList);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static void readFromFile(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            if (Files.isDirectory(Paths.get(\"data\")) \u0026\u0026 Files.isRegularFile(Paths.get(\"data/duke.txt\"))) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                for (String value : input) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                    String[] splitInput \u003d value.split(\" \\\\| \");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                    if (value.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        Event newEvent \u003d new Event(splitInput[2], parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                            newEvent.markAsDone();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        taskList.add(newEvent);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                    } else if (value.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        ToDo newToDo \u003d new ToDo(splitInput[2]);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                            newToDo.markAsDone();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        taskList.add(newToDo);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                    } else if (value.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(splitInput[2], parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                            newDeadline.markAsDone();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            createFileAndDirectory();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static LocalDateTime parseDate(String dateToParse) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            return dateTime;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            printMessage(\"☹ OOPS!!! Please format your date and time in this format \\\"20/12/2019 1859\\\"\");"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static String unparseDate(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public static  void createFileAndDirectory(){"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            Files.createDirectory(Paths.get(\"data\"));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            Files.createFile(Paths.get(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch(FileAlreadyExistsException e){"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "          return;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "            createFileAndDirectory();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1,
      "Lindon Ng": 247,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lindon Ng": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateToString(at) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    private String dateToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return  dateTime.format(formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lindon Ng": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lindon Ng": 29
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lindon Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lindon Ng": 11
    }
  }
]

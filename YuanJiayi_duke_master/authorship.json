[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    id \u0027org.openjfx.javafxplugin\u0027 version\u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    testImplementation \"org.junit.jupiter:junit-jupiter:5.5.1\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archivesBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 33,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Deadline (String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super.type \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private static Task[] dukeList \u003d new Task[100];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private static int taskNumber \u003d 0;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeExceptions {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        String greet \u003d \"   Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"   What can I do for you?\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + greet"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        UpdateSave updateSave \u003d new UpdateSave();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        dukeList \u003d updateSave.requestData();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        taskNumber \u003d updateSave.requestTasksAmount();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm a\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            String in \u003d sc.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"__________________________________________________\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"   Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (in.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                for (int i \u003d 1; dukeList[i-1] !\u003d null; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"   \" + i + \".\" + dukeList[i-1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else if (in.contains(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                String temp \u003d in.replaceAll(\"[^0-9]\", \"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                int number \u003d Integer.parseInt(temp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                dukeList[number - 1].markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"   Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"   [✓] \" + dukeList[number - 1].description + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            // other commands like \"read book\" to be added in the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    String[] keyword \u003d in.split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    if (!(keyword[0].equals(\"todo\") || keyword[0].equals(\"event\") || keyword[0].equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        throw new DukeExceptions(\"   \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    switch (keyword[0]) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        case \"todo\": {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            if (in.equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                                throw new DukeExceptions(\"   \\u2639 OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            Task task \u003d new ToDo(in.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            dukeList[taskNumber++] \u003d task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        case \"event\": {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            if (in.equals(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                                throw new DukeExceptions(\"   \\u2639 OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            String[] getDate \u003d in.split(\"/at \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            Date date \u003d simpleDateFormat.parse(getDate[getDate.length-1]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            String formatDate \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            Task task \u003d new Event(getDate[0].replaceFirst(\"event\", \"\"), formatDate);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            dukeList[taskNumber++] \u003d task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        case \"deadline\": {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            if (in.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                                throw new DukeExceptions(\"   \\u2639 OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            String[] getDate \u003d in.split(\"/by \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            Date date \u003d simpleDateFormat.parse(getDate[getDate.length-1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            String formatDate \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            Task task \u003d new Deadline(getDate[0].replaceFirst(\"deadline \", \"\"), formatDate);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            dukeList[taskNumber++] \u003d task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    updateSave.requestWrite(dukeList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"   Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"   \" + dukeList[taskNumber - 1].toString() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"   Now you have \" + taskNumber + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                catch (DukeExceptions | ParseException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 106,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public DukeExceptions (String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super.type \u003d \"E\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return getStatusIcon() + \" \" + description; // final content of list with Icon"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 12
    }
  },
  {
    "path": "src/main/java/UpdateSave.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class UpdateSave {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private static Task[] dukeList \u003d new Task[100];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private static int taskNumber \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public UpdateSave() throws IOException, DukeExceptions {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            FileReader fileReader \u003d new FileReader(\"data/duke.txt\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                line \u003d line.replace(\u0027|\u0027, \u0027@\u0027);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                String[] info \u003d line.split(\" @ \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (!(info[0].equals(\"T\") || info[0].equals(\"E\") || info[0].equals(\"D\"))) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    throw new DukeExceptions(\"Invalid Input!!!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                Task task \u003d new Task(\"default\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                switch (info[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        task \u003d new ToDo(info[2]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        task \u003d new Event(info[2], info[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        task \u003d new Deadline(info[2], info[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                // no update on task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (task.description.equals(\"default\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    throw new DukeExceptions(\"This task is not refreshed yet.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (info[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                dukeList[taskNumber++] \u003d task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        catch (IOException | DukeExceptions ex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void requestWrite(Task[] taskList) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            bufferedWriter.write(\"\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    if (!task.isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 0 | \" + task.description + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 1 | \" + task.description + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    if (!task.isDone) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 0 | \" + task.description + \" | \" + ((Event) task).at + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 1 | \" + task.description + \" | \" + ((Event) task).at + \"\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    if (!task.isDone) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 0 | \" + task.description + \" | \" + ((Deadline) task).by + \"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                        bufferedWriter.write(task.type + \" | 1 | \" + task.description + \" | \" + ((Deadline) task).by + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        catch (IOException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Task[] requestData() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return dukeList;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public int requestTasksAmount() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 90
    }
  }
]

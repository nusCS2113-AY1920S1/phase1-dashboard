[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    id \u0027org.openjfx.javafxplugin\u0027 version\u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "//}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    testImplementation \"org.junit.jupiter:junit-jupiter:5.5.1\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archivesBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 33,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * The class to set command information types"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public int index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String cmdType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Initialization of variables of in command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.index \u003d -1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.date \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.cmdType \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.ListOfTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * The overall control of Duke. Handle the process flow."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private ListOfTask tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Duke() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Call duke to run"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void main (String[] args) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Run the overall program"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        tasks \u003d new ListOfTask();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        DukeExceptions exceptions \u003d new DukeExceptions();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        UI.Start();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        int count \u003d Storage.LoadTask(tasks, 0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        while (in.hasNextLine()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            switch (command.cmdType) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiBye();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiList(tasks, count);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiDone(tasks.done(command.index));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiDelete(tasks.get(command.index), count);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.delete(command.index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    count--;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.find(command.description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new ToDo(command.description));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiTodo(tasks.get(tasks.size() - 1), count);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new Event(command.description));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiEvent(tasks.get(tasks.size() - 1), count);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new Deadline(command.description));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    UI.UiDeadline(tasks.get(tasks.size() - 1), count);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"InvalidInput\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    exceptions.InvalidInput();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            Storage.saveTask(tasks, count);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 80,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * Exceptions information class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public DukeExceptions () {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Exception message printing for empty command type"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void EmptyDescription(String type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \\u2639 OOPS!!! The description of a \" + type + \" cannot be empty.\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Exception message printing for invalid command format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void InvalidInput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 21
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * The class to classify the type of commands and the validity of commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Command command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private DukeExceptions exceptions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Initialization for variables in Parser"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.command \u003d new Command();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.exceptions \u003d new DukeExceptions();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method for analyzing command and classifying the type of commands"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @return Return the input command information"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Command parse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            this.command.cmdType \u003d \"list\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            command.cmdType \u003d \"bye\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"done\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"done\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 5 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"delete\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"delete\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"find\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"find\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.description \u003d input.substring(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 3 \u0026\u0026 input.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"todo\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"todo\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.description \u003d input.substring(5);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 4 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"event\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"event\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.description \u003d input.substring(6);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else if (input.length() \u003e 7 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (input.length() \u003d\u003d 8) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                exceptions.EmptyDescription(\"deadline\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.cmdType \u003d \"deadline\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                command.description \u003d input.substring(9);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            command.cmdType \u003d \"InvalidInput\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 95
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.ListOfTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * The class to write and read the file that is saved on local disk"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method for writing the data file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void saveTask(ListOfTask tasks, int count) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            String buf \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (tasks.get(i) instanceof ToDo) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (tasks.get(i).isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 1 | \" + tasks.get(i).description + \"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 0 | \" + tasks.get(i).description + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            } else if (tasks.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (tasks.get(i).isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 1 | \" + tasks.get(i).description + \" | \" + ((Event) tasks.get(i)).at + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 0 | \" + tasks.get(i).description + \" | \" + ((Event) tasks.get(i)).at + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            } else if (tasks.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                if (tasks.get(i).isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 1 | \" + tasks.get(i).description + \" | \" + ((Deadline) tasks.get(i)).by + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    buf \u003d (tasks.get(i).type + \" | 0 | \" + tasks.get(i).description + \" | \" + ((Deadline) tasks.get(i)).by + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            bufferedWriter.append(buf);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * Read in the current data"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @return Return the number of tasks that listoftask contains"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static int LoadTask(ListOfTask tasks, int count) throws FileNotFoundException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        FileReader fileReader \u003d new FileReader(\"data/duke.txt\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Scanner sc \u003d new Scanner(fileReader);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            String[] keywords \u003d sc.nextLine().split(\" | \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            switch (keywords[0]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new ToDo(keywords[2]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.get(count).isDone \u003d keywords[1].equals(\"1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new Event(keywords[2]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.get(count).isDone \u003d keywords[1].equals(\"1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.add(new Deadline(keywords[2]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    tasks.get(count).isDone \u003d keywords[1].equals(\"1\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 83
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private String d;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Deadline (String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        String[] keywords \u003d description.split(\"/by \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.by \u003d keywords[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.d \u003d keywords[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            date \u003d super.getDate(this.by);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            return \"[D]\" + super.toString() + d + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else return \"[D]\" + super.toString() + d + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 32
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    private String d;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Event (String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        String[] keywords \u003d description.split(\"/at \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.at \u003d keywords[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.d \u003d keywords[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            date \u003d super.getDate(this.at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            return \"[E]\" + super.toString() + d + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        else return \"[E]\" + super.toString() + d + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 31
    }
  },
  {
    "path": "src/main/java/Tasks/ListOfTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class ListOfTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public ListOfTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public boolean add (Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return tasks.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Task done (int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        tasks.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void delete (int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void find (String findInfo) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        int countFind \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        for (int No \u003d 1; No \u003c\u003d tasks.size(); No++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            if (tasks.get(No - 1).description.contains(findInfo)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                countFind++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                System.out.println(\"   \" + countFind + \". \" + tasks.get(No - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 42
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return this.getStatusIcon();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public Date getDate(String timeIn) throws ParseException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        DateFormat format2 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        DateFormat format1 \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            date \u003d format2.parse(timeIn);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        catch (ParseException ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            date \u003d format1.parse(timeIn);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 39
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public ToDo (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        super.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        return \"[T]\" + super.toString() + super.description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 14
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.ListOfTask;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " * The class to generate the user interface"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to print out the start information"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void Start() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        String greet \u003d \"   Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"   What can I do for you?\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + greet"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to print closing message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiBye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"   Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "                + \"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to print out the current messages in the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiList(ListOfTask tasks, int count) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        for (int No \u003d 1; No \u003c\u003d count; No++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "            System.out.println(\"   \" + No + \". \" + tasks.get(No - 1).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to print out the command asking for setting a task done has been done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiDone(Task task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to print out the success message for deleting a task in the list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiDelete(Task task, int count) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Now you have \" + (count - 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to show a new Todo task has been added"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiTodo(Task task, int count) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Got it. I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Now you have \" + (count + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to show a new Event task has been added"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiEvent(Task task, int count) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Got it. I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Now you have \" + (count + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * The method to show a new Deadline task has been added"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     * @param count"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public static void UiDeadline(Task task, int count) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Got it. I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"   Now you have \" + (count + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        System.out.println(\"__________________________________________________\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 112
    }
  },
  {
    "path": "src/test/java/Tasks/TestTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "public class TestTask {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void TestgetStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        assertEquals(\"[✗]\", new Task(\"Task description\").getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void TesttoString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        assertEquals(\"task\", new Task(\"task\").toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    public void TestgetDate() throws ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "        assertEquals(\"\", new Task(\"task 12/09/2019\").getDate(\"12/09/2019\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "YuanJiayi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "YuanJiayi": 25
    }
  }
]

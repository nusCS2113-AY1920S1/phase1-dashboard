[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "run{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 32,
      "-": 14
    }
  },
  {
    "path": "src/main/java/duke/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which adds and shows the task added into the TaskList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A function which adds the task, saves the TaskList, and shows the added task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if an error occurs when saving the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message \u003d ui.showAddTask(tasks, task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 32
    }
  },
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a Command class which will be inherited by specific *Command subclasses"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * to run their specific execute functions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected int pos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.exit;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void makeExitTrue() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.exit \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 27
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which deletes and shows the deleted task in the TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public DeleteCommand(int pos) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super.pos \u003d pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A function which deletes the task, saves the TaskList, and shows the deleted task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if the task to delete is not within the TaskList or"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * if an error occurs when saving the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String temp \u003d tasks.getTaskList().get(pos).toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks.deleteTask(pos);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message \u003d ui.showDeleteTask(tasks, temp);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please input an integer that is within the list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 35
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which marks and shows the task in the TaskList as done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public DoneCommand(int pos) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super.pos \u003d pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A function which marks the task as done, saves the TaskList, and shows the task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if the task to mark as done is not within the TaskList or"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * if an error occurs when saving the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String message \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks.markTask(pos);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message \u003d ui.showDoneTask(tasks, pos);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Please input an integer that is within the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 34
    }
  },
  {
    "path": "src/main/java/duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which ends the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Ends the program and shows the farewell message to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        makeExitTrue();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message \u003d ui.showBye();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 24
    }
  },
  {
    "path": "src/main/java/duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which shows the tasks in the TaskList"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * which has a name containing the word(s) the user wants to find."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the tasks in the TaskList which has a name containing the word(s) the user wants to find."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message \u003d ui.showFind(tasks, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 28
    }
  },
  {
    "path": "src/main/java/duke/Command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which informs the user that the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * user input was an invalid command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Informs the user that the user input was an invalid command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message \u003d ui.showInvalidTask();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 24
    }
  },
  {
    "path": "src/main/java/duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a subclass of Command class which shows the tasks in the TaskList to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the tasks in the TaskList to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param ui The Ui object to manage user interface to user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param storage The Storage object to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message \u003d ui.showList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 23
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents the class where the duke program will start running from."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * A constructor of Duke which sets up the Ui, Storage, and TaskList for Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param filePath The specified file path to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if there is an error loading the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Duke(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The function where the duke program will start running from after the Duke instance is created."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The function where the duke program will start running from."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param args A default argument for main function."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if no file path is passed as argument when creating a new instance of Duke"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        new Duke(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The function to return the outcome of the user\u0027s input in the GUI after running Duke program on it."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param input The user\u0027s input in the GUI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The response to the user\u0027s input in the GUI."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            response \u003d Parser.parse(input).execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            response \u003d e.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 75
    }
  },
  {
    "path": "src/main/java/duke/GUI/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Clip the ImageView into a circle"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        displayPicture.setClip(new Circle(50,50,50));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Add padding around the inside edges of the DialogBox"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        dialog.setPadding(new Insets(0,10,0,10));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 72
    }
  },
  {
    "path": "src/main/java/duke/GUI/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 12
    }
  },
  {
    "path": "src/main/java/duke/GUI/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Other.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Duke duke \u003d new Duke(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Main() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 35
    }
  },
  {
    "path": "src/main/java/duke/GUI/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Controller for duke.GUI.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (response.equals(\"Bye. Hope to see you again soon!\\n\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 57
    }
  },
  {
    "path": "src/main/java/duke/Other/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public DukeException(String str) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 12
    }
  },
  {
    "path": "src/main/java/duke/Other/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a Parser class to parse user input into Commands which the program can understand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Parses user input into Commands which the program can understand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param fullCommand The user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return A Command which is specific to the user input and will be executed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if the user input cannot be parsed into a valid command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int pos;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please input a task to find.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                description \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                c \u003d new FindCommand(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please input a task to delete.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    pos \u003d Integer.parseInt(fullCommand.substring(7));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    pos--;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    c \u003d new DeleteCommand(pos);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please input an integer after the word delete.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                description \u003d fullCommand.substring(5);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String temp \u003d fullCommand.substring(9);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String[] arr \u003d temp.split(\" /by \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    task \u003d new Deadline(arr[0], arr[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please input the date and time in this format: dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please include /by followed by the date and time.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String temp \u003d fullCommand.substring(6);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String[] arr \u003d temp.split(\" /at \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    task \u003d new Event(arr[0], arr[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    c \u003d new AddCommand(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please input the date and times in this format: dd/MM/yyyy HH:mm-HH:mm\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please include /at followed by the date, start time and end time.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (fullCommand.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please input a task to mark as done.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    pos \u003d Integer.parseInt(fullCommand.substring(5));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    pos--;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    c \u003d new DoneCommand(pos);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Please input an integer after the word done.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            c \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 103
    }
  },
  {
    "path": "src/main/java/duke/Other/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a Storage class to save and load user\u0027s tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Constructor which creates a Storage class object which can read and write user\u0027s tasks to specified file path."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param filePath The specified file path to read and write user\u0027s tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if the specified file path cannot be found or if there is"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * a problem creating a new storage file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            File info \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            info.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            scan \u003d new Scanner(info);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\"Cannot find the specified file.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\"Cannot create a new file in storage.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads the user\u0027s tasks from the specified file path and update the ArrayList of Task objects."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the ArrayList of Task objects."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if an error occurs when creating a Task object when reading from text file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String s \u003d scan.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String[] arr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Todo t \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    list.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Deadline t \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    list.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (arr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    Event t \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    list.add(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\"Cannot load the file.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Write the updated ArrayList to the specified file path."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param list The ArrayList of Task objects."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws DukeException if an error occurs when writing to text file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter temp \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp2 \u003d temp2 + t.toFile() + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            temp.write(temp2);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            temp.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            throw new DukeException(\"Cannot save the data.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 94
    }
  },
  {
    "path": "src/main/java/duke/Other/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a TaskList to store tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * An ArrayList of Task objects."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Sets the ArrayList of Task objects for this TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param list The ArrayList of Task objects to carry out operations on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns this TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return The ArrayList containing Task objects."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Adds the task to this TaskList."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param t The task to add to this TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Deletes the task at the specified position."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param pos The specified position in this TaskList to delete a task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void deleteTask(int pos) {     //pos is already accounted for 0 indexing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        list.remove(pos);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Marks the task at the specified position as done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param pos The specified position in this TaskList to mark a task as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void markTask(int pos) {     //pos is already accounted for 0 indexing"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        list.get(pos).markAsDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 59
    }
  },
  {
    "path": "src/main/java/duke/Other/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a class to manage user interface to user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the welcome message to the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Reads in an entire line of user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the entire line of user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows a line to user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Informs the user that there is an error loading the file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"There is an error loading the file.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Informs the user of the specific error when an exception is thrown."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param e The name of the exception thrown."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the farewell message to the user."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the tasks in the TaskList to the user."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showList(TaskList tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.print(i + 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d (i + 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.print(\".\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d \".\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(tasks.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d tasks.getTaskList().get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the tasks in the TaskList which has a name containing the word(s) the user wants to find."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param str The word(s) the user wants to find."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showFind(TaskList tasks, String str) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean matching \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String echo \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (tasks.getTaskList().get(i).getDescription().contains(str)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                matching \u003d true;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                echo +\u003d num + \".\" + tasks.getTaskList().get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (!matching) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\" ☹ OOPS!!! There are no matching tasks.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d \" ☹ OOPS!!! There are no matching tasks.\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.print(echo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            message +\u003d echo;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the task in the TaskList which the user wants to remove, and the number of tasks left after removal."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param temp A String in a format to show the task to delete to the user."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showDeleteTask(TaskList tasks, String temp) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"  \" + temp);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"  \" + temp + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the task to add into the TaskList, and the number of tasks in the TaskList after addition."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param task The Task object to add into the TaskList."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showAddTask(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Now you have \" + tasks.getTaskList().size() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Shows the task in the TaskList to mark as done."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param tasks The ArrayList of Task objects."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param num The specified position in the TaskList to mark a task as done."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showDoneTask(TaskList tasks, int num) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"  \" + tasks.getTaskList().get(num).toString());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \"  \" + tasks.getTaskList().get(num).toString() + \"\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Informs the user that the user input was an invalid command."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the String containing the response to the GUI."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String showInvalidTask() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        message +\u003d \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 184
    }
  },
  {
    "path": "src/main/java/duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The additional details of this deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This is a String containing the date and time of this deadline task before parsing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This is a Calendar object containing the date and time of this deadline task after parsing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Calendar date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Sets the name and additional details for this deadline task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param description The name of this deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param by The additional details of this deadline task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if the additional details given for this deadline task is not in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * the correct format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date.setTime(sdf.parse(by));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to show this deadline task to the user."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, status icon, name,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * followed by the additional details of this deadline task in parenthesis."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String zone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.AM_PM) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone \u003d \"pm\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone \u003d \"am\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String minute;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.MINUTE) \u003e\u003d 10) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d Integer.toString(date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d \"0\" + (date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e\u003d 13) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d String.valueOf(date.get(Calendar.HOUR_OF_DAY) - 12);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d String.valueOf(date.get(Calendar.HOUR_OF_DAY));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (hour.equals(\"0\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour \u003d \"00\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.get(Calendar.DAY_OF_MONTH) + \"/\" + (date.get(Calendar.MONTH)+1) + \"/\" + date.get(Calendar.YEAR) + \" \" + hour + \":\" + minute + zone + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to handle this deadline task in a text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, done status as an int, name,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * followed by the additional details of this deadline task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"D\" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 78
    }
  },
  {
    "path": "src/main/java/duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The additional details of this event task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This is a String containing the date, start time and end time of this event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * before parsing."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This is a Calendar object containing the date and start time of this event task after parsing."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Calendar date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * This is a Calendar object containing the date and end time of this event task after parsing."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Calendar date2;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Sets the name and additional details for this event task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param description The name of this event task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param at The additional details of this event task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @throws ParseException if the additional details given for this event task is not in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * the correct format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String[] arr \u003d at.split(\" \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String[] arr2 \u003d arr[1].split(\"-\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date.setTime(sdf.parse(arr[0] + \" \" + arr2[0]));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date2 \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date2.setTime(sdf.parse(arr[0] + \" \" + arr2[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to show this event task to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, status icon, name,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * followed by the additional details of this event task in parenthesis."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String zone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.AM_PM) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone \u003d \"pm\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone \u003d \"am\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String minute;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.MINUTE) \u003e\u003d 10) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d Integer.toString(date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d \"0\" + (date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e\u003d 13) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d String.valueOf(date.get(Calendar.HOUR_OF_DAY) - 12);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d String.valueOf(date.get(Calendar.HOUR_OF_DAY));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (hour.equals(\"0\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour \u003d \"00\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String zone2;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date2.get(Calendar.AM_PM) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone2 \u003d \"pm\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            zone2 \u003d \"am\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String minute2;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date2.get(Calendar.MINUTE) \u003e\u003d 10) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute2 \u003d Integer.toString(date2.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute2 \u003d \"0\" + (date2.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String hour2;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date2.get(Calendar.HOUR_OF_DAY) \u003e 13) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour2 \u003d String.valueOf(date2.get(Calendar.HOUR_OF_DAY) - 12);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour2 \u003d String.valueOf(date2.get(Calendar.HOUR_OF_DAY));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (hour2.equals(\"0\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                hour2 \u003d \"00\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.get(Calendar.DAY_OF_MONTH) + \"/\" + (date.get(Calendar.MONTH)+1) + \"/\" + date.get(Calendar.YEAR) + \" \" + hour + \":\" + minute + zone + \"-\" + hour2 + \":\" + minute2 + zone2 + \")\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to handle this event task in a text file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, done status as an int, name,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * followed by the additional details of this event task."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"E\" + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 109
    }
  },
  {
    "path": "src/main/java/duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a task which can be either todo, deadline, or event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The name of this task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * The done status of this task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Sets the name and done status for this task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Done status is false by default."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param description The name of this task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Gets the done status of this task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return the boolean value for the done status."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Gets the status icon of this task, depending on the done status."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing either tick or cross symbol."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Gets the name of this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the name of this task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to show this task to the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the status icon and name of this task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to handle this task in a text file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the done status as an int and name of this task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {                //format to write into a text file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int temp \u003d getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \" | \" + temp + \" | \" + getDescription();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 74
    }
  },
  {
    "path": "src/main/java/duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Sets the name for this todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @param description The name of this todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to show this todo task to the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, status icon and name of this todo task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Returns a String in a format to handle this todo task in a text file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * @return a String containing the task type, done status as an int and name of this todo task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"T\" + super.toFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 33
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.GUI.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 19
    }
  },
  {
    "path": "src/test/java/duke/Command/AddCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class AddCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/ExitCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ExitCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/InvalidCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class InvalidCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void dukeTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start dukeTest\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed dukeTest\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 14
    }
  },
  {
    "path": "src/test/java/duke/GUI/DialogBoxTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DialogBoxTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/GUI/LauncherTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class LauncherTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/GUI/MainTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MainTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/GUI/MainWindowTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.GUI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MainWindowTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Other/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Other/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Other/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Other/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 4
    }
  },
  {
    "path": "src/test/java/duke/Other/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void uiTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start uiTest\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"Bye. Hope to see you again soon!\\n\",ui.showBye());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\",ui.showInvalidTask());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed uiTest\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 16
    }
  },
  {
    "path": "src/test/java/duke/Task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void deadlineTest() throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start deadlineTest\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"buy bread\",\"8/9/2019 14:00\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"[D][\" + cross + \"] buy bread (by: 8/9/2019 2:00pm)\", deadline.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"D | 0 | buy bread | 8/9/2019 14:00\", deadline.toFile());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed deadlineTest\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 19
    }
  },
  {
    "path": "src/test/java/duke/Task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void eventTest() throws ParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start eventTest\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Event event \u003d new Event(\"have meeting\",\"8/9/2019 14:00-16:00\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"[E][\" + cross + \"] have meeting (at: 8/9/2019 2:00pm-4:00pm)\", event.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"E | 0 | have meeting | 8/9/2019 14:00-16:00\", event.toFile());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed eventTest\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 19
    }
  },
  {
    "path": "src/test/java/duke/Task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void taskTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start taskTest\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Task task \u003d new Task(\"accomplish nothing\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(cross, task.getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"accomplish nothing\", task.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(false, task.getDoneStatus());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"[\" + cross + \"] accomplish nothing\", task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\" | 0 | accomplish nothing\", task.toFile());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed taskTest\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 20
    }
  },
  {
    "path": "src/test/java/duke/Task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Start todoTest\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Todo todo \u003d new Todo(\"buy bread\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"[T][\" + cross + \"] buy bread\", todo.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        assertEquals(\"T | 0 | buy bread\", todo.toFile());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        System.out.println(\"Passed todoTest\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 17
    }
  }
]

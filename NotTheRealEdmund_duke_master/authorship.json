[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "run{"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 32,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String description;    //every Task object has a String referring to its name and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected boolean isDone;        //a boolean for whether it\u0027s been done or not."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Task(String description) {     //setter"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getStatusIcon() {       //getter"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getDescription() {     //getter"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void markAsDone() {      //marks the task as done by changing the boolean from false to true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public boolean getDoneStatus() {         //returns 1 or 0 instead of tick or cross"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {              //format to show items with square brackets"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + getDescription();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {                //format to write into a text file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int temp \u003d getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \" | \" + temp + \" |\" + getDescription();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"T\" + super.toFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Calendar date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date.setTime(sdf.parse(by));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean flag \u003d false;         //false is am, true is pm"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int hour \u003d 0;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String minute;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e 12) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d date.get(Calendar.HOUR_OF_DAY) - 12;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e\u003d 12) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            flag \u003d true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.MINUTE) \u003e\u003d 10) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d Integer.toString(date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d \"0\" + (date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String zone \u003d (flag) ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.get(Calendar.DAY_OF_MONTH) + \"/\" + (date.get(Calendar.MONTH)+1) + \"/\" + date.get(Calendar.YEAR) + \" \" + hour + \":\" + minute + zone + \")\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"D\" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    protected Calendar date;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Event(String description, String at) throws ParseException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        date.setTime(sdf.parse(at));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean flag \u003d false;         //false is am, true is pm"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        int hour \u003d 0;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String minute;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e 12) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            hour \u003d date.get(Calendar.HOUR_OF_DAY) - 12;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.HOUR_OF_DAY) \u003e\u003d 12) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            flag \u003d true;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (date.get(Calendar.MINUTE) \u003e\u003d 10) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d Integer.toString(date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            minute \u003d \"0\" + (date.get(Calendar.MINUTE));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String zone \u003d (flag) ? \"pm\" : \"am\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.get(Calendar.DAY_OF_MONTH) + \"/\" + (date.get(Calendar.MONTH)+1) + \"/\" + date.get(Calendar.YEAR) + \" \" + hour + \":\" + minute + zone + \")\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return \"E\" + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private String str;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    DukeException(String str) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        this.str \u003d str;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void show() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid todo\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid deadline\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The description of a deadline must be complete.\\n\" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid event\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The description of an event must be complete.\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid find\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The task you want to find must exist.\\n\" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid done\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The task you want to mark must exist.\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid delete\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! The task you want to delete must exist.\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        if (str.equals(\"invalid input completely\")) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner scan;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            File info \u003d new File(filePath);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            info.createNewFile();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Scanner scan \u003d new Scanner(info);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"There is no such file.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"Cannot create a new file in storage.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    ArrayList\u003cTask\u003e load() throws ParseException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String s \u003d scan.nextLine();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String[] arr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String space \u003d \" \";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                arr[2] \u003d space + arr[2];"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Todo t \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String space \u003d \" \";"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                arr[2] \u003d space + arr[2];"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                arr[3] \u003d space + arr[3];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Deadline t \u003d new Deadline(arr[2],arr[3]);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } else if (arr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String space \u003d \" \";"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                arr[2] \u003d space + arr[2];"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                arr[3] \u003d space + arr[3];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Event t \u003d new Event(arr[2],arr[3]);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FileWriter temp \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            String temp2 \u003d \"\";"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                temp2 \u003d temp2 + t.toFile() + \"\\n\";"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            temp.write(temp2);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            temp.close();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            System.out.println(\"The file doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    //private TaskList tasks;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    //private Ui ui;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Duke() {               //necessary for creating a GUI for Duke using FXML later"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //ui \u003d new Ui();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        /**try {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        /**ui.showWelcome();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        new Duke(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\").run();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                String word \u003d scanner.next();"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                if (word.equals(\"bye\")) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    String echo \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(echo);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"list\")) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.print(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.print(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.print(i + 1);"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.print(\".\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(list.get(i).toString());"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"find\")) {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid find\");"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        boolean flag \u003d false;                               //check if there are any matching tasks found"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            if (list.get(i).getDescription().contains(line)) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                flag \u003d true;"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (!flag) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid find\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (flag) {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            String echo \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    + \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            System.out.println(echo);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                if (list.get(i).getDescription().contains(line)) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                    System.out.println((i+1) + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"done\")) {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        int num \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (num \u003e list.size()) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid done\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        num--;"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        list.get(num).markAsDone();"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"  \" + list.get(num).toString());"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003cString\u003e();     //create a temp arraylist to store each line in text file"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileReader file \u003d new FileReader(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedReader buffer \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String line;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        for (int i\u003d0;i\u003clist.size();i++) {     //number of lines in the current list arraylist is also equal to the number of lines in the text file,basically we\u0027re reading every line in the text file"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            line \u003d buffer.readLine();         //read next line"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            temp.add(line);                   //add the line to temp"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.close();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        file.close();"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        //now temp has all the lines in list but as an arraylist of strings, not updated yet"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String temp2 \u003d temp.get(num);     //access the item you want to mark as done in temp"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        char[] newstring \u003d temp2.toCharArray();"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        newstring[4] \u003d \u00271\u0027;                    //change the \u00270\u0027 to \u00271\u0027 in the item in the text file, it\u0027s always index 4 in the string item"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp2 \u003d String.valueOf(newstring);     //now temp2 has the changed version of the item"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp.set(num,temp2);              //insert temp2 into the original position in temp"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        //now your temp is fully updated, now write every item in temp into the file and we\u0027re done"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileWriter file2 \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedWriter buffer2 \u003d new BufferedWriter(file2);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        for (String x : temp) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            buffer2.write(x);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            buffer2.newLine();"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer2.close();"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        file2.close();"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"delete\")) {    //Added via branch-Level-6"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        int num \u003d scanner.nextInt();"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (num \u003e list.size()) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid delete\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        num--;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"  \" + list.get(num).toString());"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        list.remove(num);"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileWriter file \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedWriter buffer \u003d new BufferedWriter(file);"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        for (Task x : list) {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            buffer.write(x.toFile());"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            buffer.newLine();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.close();"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        file.close();"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"todo\")) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (line.isEmpty()) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid todo\");"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        Todo t \u003d new Todo(line);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        list.add(t);"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String echo \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"  \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Now you have \" + list.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(echo);"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileWriter file \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\",true);  //reach out to the text file, adding the second argument \"true\" makes it an append instead of an overwrite"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedWriter buffer \u003d new BufferedWriter(file);            //reach out to the text file"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.write(t.toFile());     //add content which is returned by calling the object\u0027s toFile function"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.newLine();             //adds a newline in the text file"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.close();               //must always remember to close buffer"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (line.isEmpty() || !line.contains(\" /by \")) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid deadline\");"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String[] arr \u003d line.split(\" /by \");"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String temp \u003d arr[1];"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        char last \u003d temp.charAt(temp.length()-1);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp.substring(0, temp.length() - 1);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        char secondlast \u003d temp.charAt(temp.length()-1);"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp.substring(0, temp.length() - 1);"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp + \":\" + secondlast + last;"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        Deadline t \u003d new Deadline(arr[0], temp);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        list.add(t);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String echo \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"  \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Now you have \" + list.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(echo);"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileWriter file \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\",true);  //reach out to the text file, adding the second argument \"true\" makes it an append instead of an overwrite"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedWriter buffer \u003d new BufferedWriter(file);            //reach out to the text file"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.write(t.toFile());     //add content which is returned by calling the object\u0027s toFile function"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.newLine();             //adds a newline in the text file"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.close();               //must always remember to close buffer"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"Please input a date in this format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else if (word.equals(\"event\")) {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        if (line.isEmpty() || !line.contains(\" /at \")) {"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                            throw new DukeException(\"invalid event\");"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String[] arr \u003d line.split(\" /at \");"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String temp \u003d arr[1];"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        char last \u003d temp.charAt(temp.length()-1);"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp.substring(0, temp.length() - 1);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        char secondlast \u003d temp.charAt(temp.length()-1);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp.substring(0, temp.length() - 1);"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        temp \u003d temp + \":\" + secondlast + last;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        Event t \u003d new Event(arr[0], temp);"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        list.add(t);"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        String echo \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"  \" + t.toString() + \"\\n\""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"Now you have \" + list.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(echo);"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        FileWriter file \u003d new FileWriter(\"\\\\Users\\\\edmun\\\\OneDrive\\\\Desktop\\\\CS2113T\\\\duke\\\\data\\\\duke.txt\",true);  //reach out to the text file, adding the second argument \"true\" makes it an append instead of an overwrite"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        BufferedWriter buffer \u003d new BufferedWriter(file);            //reach out to the text file"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.write(t.toFile());     //add content which is returned by calling the object\u0027s toFile function"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.newLine();             //adds a newline in the text file"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        buffer.close();               //must always remember to close buffer"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        e.show();"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                        System.out.println(\"Please input a date in this format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                    throw new DukeException(\"invalid input completely\");"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                }"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                e.show();"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String response \u003d \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 508,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        //Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 28
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 49
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "NotTheRealEdmund"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "NotTheRealEdmund": 19
    }
  }
]

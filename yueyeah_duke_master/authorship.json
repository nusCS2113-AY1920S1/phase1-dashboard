[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            date \u003d formatter.parse(this.by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            System.out.println(\"â˜¹ OOPS!!! Please enter your date for deadline in the following format: dd/MM/yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"deadline \" + this.description + \" /by \" + this.by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"[D]\" + getStatusIcon() + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yueyeah": 29
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Constants"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String GREETING \u003d \"Hello! I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            + \"What can I do for you? \\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String HORIZONTAL_LINE \u003d new String(new char[42]).replace(\"\\0\", \"\\u23E4\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String EXIT_CMD \u003d \"bye\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String BYE_STRING \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String LIST_CMD \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String DONE_STRING \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String ADD_STRING \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String DELETE_STRING \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String TASK_NUM_STRING_1  \u003d\"Now you have \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String TASK_NUM_STRING_2 \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String FIND_STRING \u003d \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String NONE_FOUND \u003d \"Sorry, could not find any tasks containing your search words. \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static final String FILEPATH \u003d \"D:\\\\duke\\\\src\\\\main\\\\java\\\\duke.txt\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // main function"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        greetDuke();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        ArrayList\u003cTask\u003e listTasks \u003d readFileDuke();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String inputString \u003d sc.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            inputString \u003d inputString.trim(); // trim any possible trailing whitespace"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            if (inputString.equals(EXIT_CMD)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                exitDuke(listTasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            } else if (inputString.equals(LIST_CMD)){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                listDuke(listTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String[] inputParts \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    if (inputParts[0].equals(DONE)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        doneDuke(inputString, listTasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else if (inputParts[0].equals(TODO)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        addToDoDuke(listTasks, inputString);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else if (inputParts[0].equals(DEADLINE)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        addDeadlineDuke(listTasks, inputString);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else if (inputParts[0].equals(EVENT)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        addEventDuke(listTasks, inputString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else if (inputParts[0].equals(DELETE)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        deleteTaskDuke(listTasks, inputString);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else if (inputParts[0].equals(FIND)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        findTaskDuke(listTasks, inputString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                        throw new InvalidDukeInputException(); // define what to do for DukeException"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (InvalidDukeInputException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\" + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (ToDoEmptyException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\" + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (DeadlineEmptyException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\" + \"\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (EventEmptyException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! The description of a event cannot be empty.\" + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (DeleteInvalidException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! Please enter the valid number of a Task.\" + \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } catch (FindEmptyException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(\"â˜¹ OOPS!!! Please enter a valid search word.\" + \"\\n\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Print a line."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void printLine(String str) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Actions to be taken upon initialising Duke"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void greetDuke() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(LOGO);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(GREETING);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static ArrayList\u003cTask\u003e readFileDuke() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        ArrayList\u003cTask\u003e listTasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        File file \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            Scanner sc1 \u003d new Scanner(file);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            while (sc1.hasNextLine()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                String fileString \u003d sc1.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                String[] fileParts \u003d fileString.split(\" \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                Scanner sc2 \u003d new Scanner(fileString);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                sc2.next();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                if (fileParts[0].equals(TODO)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    ToDo newToDo \u003d new ToDo(sc2.nextLine());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    listTasks.add(newToDo);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } else if (fileParts[0].equals(DEADLINE)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String restOfString \u003d sc2.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String[] parts \u003d restOfString.split(\"/by\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String description \u003d parts[0].trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String byString \u003d parts[1].trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(description, byString);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    listTasks.add(newDeadline);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                } else if (fileParts[0].equals(EVENT)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String restOfInput \u003d sc2.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String[] parts \u003d restOfInput.split(\"/at\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String description \u003d parts[0].trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String[] dateAndTime \u003d parts[1].trim().split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String date \u003d dateAndTime[0].trim();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    String time \u003d dateAndTime[1].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    Event newEvent \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    listTasks.add(newEvent);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            sc1.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return listTasks;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Actions to be taken before exiting Duke"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void exitDuke(ArrayList\u003cTask\u003e listTasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(FILEPATH);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            for (Task eachTask: listTasks) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                writer.println(eachTask.getTaskType());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(BYE_STRING + \"\\n\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Add todos to list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void addToDoDuke(ArrayList\u003cTask\u003e arr, String input) throws ToDoEmptyException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        sc.next(); // ignore todo_word"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            ToDo newToDo \u003d new ToDo(sc.nextLine());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            arr.add(newToDo);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(ADD_STRING);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int pos \u003d arr.size();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(arr.get(pos - 1).toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(\"Now you have \" + pos + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            throw new ToDoEmptyException();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Add deadlines to list."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void addDeadlineDuke(ArrayList\u003cTask\u003e arr, String input) throws DeadlineEmptyException {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        sc.next(); // ignore deadline word"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String restOfInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String[] parts \u003d restOfInput.split(\"/by\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String description \u003d parts[0].trim();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String byString \u003d parts[1].trim();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, byString);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            arr.add(newDeadline);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int pos \u003d arr.size();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(ADD_STRING);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(arr.get(pos - 1).toString());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(\"Now you have \" + pos + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            throw new DeadlineEmptyException();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // Add tasks to list."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void addEventDuke(ArrayList\u003cTask\u003e arr, String input) throws EventEmptyException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        sc.next(); // ignore event word"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String restOfInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String[] parts \u003d restOfInput.split(\"/at\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String description \u003d parts[0].trim();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String[] dateAndTime \u003d parts[1].trim().split(\" \");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String date \u003d dateAndTime[0].trim();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String time \u003d dateAndTime[1].trim();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            Event newEvent \u003d new Event(description, date, time);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            arr.add(newEvent);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int pos \u003d arr.size();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(ADD_STRING);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(arr.get(pos - 1).toString());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(\"Now you have \" + pos + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            throw new EventEmptyException();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void deleteTaskDuke(ArrayList\u003cTask\u003e arr, String input) throws DeleteInvalidException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        sc.next(); // ignore delete word"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        if (sc.hasNextInt()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int taskIdx \u003d sc.nextInt() - 1;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(DELETE_STRING);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(arr.get(taskIdx).toString());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            arr.remove(taskIdx);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(TASK_NUM_STRING_1 + arr.size() + TASK_NUM_STRING_2);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            throw new DeleteInvalidException();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void findTaskDuke(ArrayList\u003cTask\u003e arr, String input) throws FindEmptyException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        Scanner sc \u003d new Scanner(input);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        sc.next(); // ignore find word"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        if (sc.hasNext()) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            String searchWord \u003d sc.nextLine();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(FIND_STRING);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int countFound \u003d 0;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            for (Task eachTask : arr) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                if (eachTask.toString().contains(searchWord)) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    countFound++;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                    printLine(countFound + \".\" + eachTask);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            if (countFound \u003d\u003d 0) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "                printLine(NONE_FOUND);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            throw new FindEmptyException();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    // List out all the tasks."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void listDuke(ArrayList\u003cTask\u003e listTasks) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        for (int a \u003d 0; a \u003c listTasks.size(); a++) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            int displayNum \u003d a + 1;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            printLine(displayNum + \". \" + listTasks.get(a) + \"\\n\");"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    static void doneDuke(String inputString, ArrayList\u003cTask\u003e listTasks) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        String[] tokens \u003d inputString.split(\" \");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        int taskNum \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        int index \u003d taskNum - 1; // list is zero-indexed while user sees a one-indexed list"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        listTasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(DONE_STRING);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(listTasks.get(index) + \"\\n\");"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        printLine(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class InvalidDukeInputException extends Exception {}"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class ToDoEmptyException extends Exception {}"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class EventEmptyException extends Exception {}"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class DeadlineEmptyException extends Exception {}"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class DeleteInvalidException extends Exception {}"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "class FindEmptyException extends Exception {}"
      }
    ],
    "authorContributionMap": {
      "yueyeah": 281,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected String date_string;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected String time_string;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public Event(String description, String date, String time) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.date_string \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.time_string \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            this.date \u003d formatter.parse(date_string + \" \" + time_string);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "            System.out.println(\"â˜¹ OOPS!!! Please enter your date and time for your event in the following format: dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"event \" + this.description + \" /at \" + this.date_string + \" \" + this.time_string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"[E]\" + getStatusIcon() + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yueyeah": 31
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"task\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yueyeah": 28
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"todo \" + this.description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yueyeah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "        return \"[T]\" + getStatusIcon() + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yueyeah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yueyeah": 15
    }
  }
]

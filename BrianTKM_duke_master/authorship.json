[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    mainClassName \u003d \"main\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "run{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 4,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private Date dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public Deadline(String taskDetail, Date dueDate){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        super(taskDetail);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getDetails(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        DateFormat printDateTime \u003d new SimpleDateFormat(\"dd MMMM yyyy HH:mma\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return \"[D]\" + super.getDetails() + \" (by: \" + printDateTime.format(this.dueDate) + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private static final String FILE_PATH \u003d \"data.txt\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    List taskList \u003d new List();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        greetUser();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        taskList.initializeList();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        //startup"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public int executeCommand(String command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] commandAction \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        switch (commandAction[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    taskList.addNewToDo((command.substring(4)).trim());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    taskList.addNewDeadline((command.substring(8)).trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    taskList.addNewEvent((command.substring(5)).trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                taskList.finishTask(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                taskList.deleteTask(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                taskList.findTask(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    taskList.viewTasks(commandAction);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    this.bye(commandAction);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    return 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void bye(String[] commandAction) throws DukeExceptions{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(commandAction.length !\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The \\\"bye\\\" command cannot be used with other arguments.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        taskList.saveList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 74,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class DukeExceptions extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public DukeExceptions(String errorMessage){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return \"\\u2639 OOPS!!! \" + this.errorMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private Date eventStartDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private Date eventEndDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public Event(String taskDetail, Date eventStartDate, Date eventEndDate){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        super(taskDetail);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.eventStartDate \u003d eventStartDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.eventEndDate \u003d eventEndDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getDetails(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        DateFormat printDateTime \u003d new SimpleDateFormat(\"dd MMMM yyyy HH:mma\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return \"[E]\" + super.getDetails() + \" (at: \" + printDateTime.format(this.eventStartDate) + \" - \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + printDateTime.format(this.eventEndDate)+ \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 21
    }
  },
  {
    "path": "src/main/java/List.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private static final String FILE_PATH \u003d \"data.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private int parseTaskNumber(String command) throws DukeExceptions{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] executeCommand \u003d command.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(executeCommand[0].equals(\"done\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            command \u003d command.substring(4);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } else if(executeCommand[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            command \u003d command.substring(6);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(command.length() \u003c 1){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The task number cannot be blank\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            int correctTaskNumber \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(taskList.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"There are 0 tasks in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            else if((correctTaskNumber \u003c\u003d taskList.size()) \u0026\u0026 (correctTaskNumber \u003e 0)){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                correctTaskNumber--;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                if(executeCommand[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    if (taskList.get(correctTaskNumber).getStatusIcon().equals(\"Y\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                        throw new DukeExceptions(\"Task has already been completed.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    return correctTaskNumber;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"Incorrect task number. Please enter one task number from within the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch(NumberFormatException e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect task number. Please enter one task number from within the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private void successfulAddTask(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + taskList.get(taskList.size() - 1).getDetails());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(taskList.size() \u003d\u003d 1){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void addNewToDo(String details) throws DukeExceptions{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(details.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Task newTodo \u003d new ToDo(details);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        successfulAddTask();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void addNewDeadline(String details) throws DukeExceptions{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(details.length() \u003d\u003d 0 || details.equals(\"/by\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The description and deadline of a task cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(details.length() \u003c 3 || details.substring(details.length()-4).equals(\" /at\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The task must have a deadline.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(!details.contains(\" /by \")){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(details.contains(\"/by \") \u0026\u0026 details.split(\"/by \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    \u0026\u0026 details.split(\"/by \")[0].length() \u003c 1){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"The task must have a description.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The task must have a deadline.\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Command format:\\nevent \u003ctask description\u003e /by \u003cdeadline\u003e\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] deadlineDetails \u003d details.split(\" /by \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] eventTime \u003d deadlineDetails[deadlineDetails.length-1].split(\" \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(eventTime.length \u003c 2){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect date/time format.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Format should be dd/MM/yyyy HHmm (24h format).\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String dateAndTime \u003d eventTime[0] + \" \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + deadlineDetails[deadlineDetails.length-1].substring(eventTime[0].length()).trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        DateFormat temp \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Date dateTime;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        temp.setLenient(false);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            dateTime \u003d temp.parse(dateAndTime);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(dateTime.compareTo(new Date()) \u003c\u003d 0){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"Deadline entered is before now.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect time format. Please enter a valid dd/MM/yyyy HHmm(24h) format.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Task newDeadline \u003d new Deadline("
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                details.substring(0,details.length()-deadlineDetails[deadlineDetails.length-1].length()-5),dateTime);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        successfulAddTask();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void addNewEvent(String details) throws DukeExceptions{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(details.length() \u003d\u003d 0 || details.equals(\"/at\")){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The description and time of an event cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(details.length() \u003c 3 || details.substring(details.length()-4).equals(\" /at\")){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The event must have a date and time.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(!details.contains(\" /at \")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if (details.contains(\"/at \") \u0026\u0026 details.split(\"/at \").length \u003d\u003d 2"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    \u0026\u0026 details.split(\"/at \")[0].length() \u003c 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"The event must have a description.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The event must have a date and time.\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Command format:\\nevent \u003cevent description\u003e /at \u003cdate and time\u003e\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] eventDetails \u003d details.split(\" /at \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] eventDates \u003d eventDetails[eventDetails.length-1].split(\"-\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(eventDates.length !\u003d 2){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect event period.\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Event period format is dd/mm/yyyy HHmm - dd/mm/yyyy HHmm\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] eventStartTime \u003d eventDates[0].split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String[] eventEndTime \u003d eventDates[1].split(\" \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(eventStartTime.length \u003c 2 || eventEndTime.length \u003c 2){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect date/time format.\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Format should be dd/MM/yyyy HHmm (24h format).\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String startDateAndTime \u003d eventStartTime[0] + \" \""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + eventDates[0].substring(eventStartTime[0].length()).trim();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        String endDateAndTime \u003d eventEndTime[0] + \" \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                + eventDates[1].substring(eventEndTime[0].length()).trim();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        DateFormat temp \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Date startDateTime;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Date endDateTime;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        temp.setLenient(false);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            startDateTime \u003d temp.parse(startDateAndTime);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            endDateTime \u003d temp.parse(endDateAndTime);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(startDateTime.compareTo(new Date()) \u003c\u003d 0){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"Event entered is before now.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(endDateTime.compareTo(startDateTime) \u003c\u003d 0){"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                throw new DukeExceptions(\"Event end date is before start date\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch (ParseException e){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Incorrect time format.\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    + \" Please enter a valid dd/MM/yyyy HHmm(24h) format.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Task newEvent \u003d new Event("
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                details.substring(0,details.length()-eventDetails[eventDetails.length-1].length()-5),startDateTime"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                ,endDateTime);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        successfulAddTask();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void viewTasks(String[] commandAction) throws DukeExceptions{"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(commandAction.length !\u003d 1){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"The \\\"list\\\" command cannot be used with other arguments.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(taskList.size() \u003c 1){"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"There are 0 tasks in the list.\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        for(int i \u003d 0; i \u003c taskList.size();i++)"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println((i+1) + \". \" + (taskList.get(i)).getDetails());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void finishTask(String command){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            int taskNumber \u003d parseTaskNumber(command);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            taskList.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(taskList.get(taskNumber).getDetails());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void deleteTask(String command){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            int taskNumber \u003d parseTaskNumber(command);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            Task temp \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(temp.getDetails());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            temp \u003d null;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            Task.totalTasks--;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(Task.totalTasks !\u003d 1) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                System.out.println(\"Now you have \" + Task.totalTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                System.out.println(\"Now you have \" + Task.totalTasks + \" task in the list.\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void saveList(){"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            FileOutputStream fos \u003d new FileOutputStream(FILE_PATH);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            oos.writeObject(taskList);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            oos.close();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            fos.close();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(\"\\u2639 OOPS!!! We are unable to save your task list :-(\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void initializeList(){"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        File dataFile \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(dataFile.exists()) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                FileInputStream fis \u003d new FileInputStream(FILE_PATH);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                taskList \u003d (ArrayList\u003cTask\u003e) ois.readObject();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                ois.close();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                fis.close();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                Task.totalTasks \u003d taskList.size();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                System.out.println(\"\\u2639 OOPS!!! We are unable to load your task list :-(\");"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            } catch (ClassNotFoundException c) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                //ignore"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private void searchForTask(String keyword) throws DukeExceptions{"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(keyword.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"Keyword cannot be empty.\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(Task.totalTasks \u003d\u003d 0){"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"There are 0 tasks in the list.\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        for(int i \u003d 0; i \u003c Task.totalTasks; i++)"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            if(taskList.get(i).getTaskDetail().contains(keyword)){"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                if(counter \u003d\u003d 0){"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                System.out.println(counter+1 + \". \" + taskList.get(i).getDetails());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        if(counter \u003d\u003d 0){"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            throw new DukeExceptions(\"There are no tasks that match your keyword.\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void findTask(String command){"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        command \u003d command.substring(4);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        command \u003d command.trim();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            searchForTask(command);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        } catch (DukeExceptions errorMessage){"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            System.out.println(errorMessage.toString());"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 272
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    static int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private String taskDetail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public Task(String taskDetail){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.taskDetail \u003d taskDetail;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        totalTasks +\u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        //return Yes or No"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getTaskDetail(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return this.taskDetail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getDetails(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + this.taskDetail);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public ToDo(String taskDetail){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        super(taskDetail);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public String getDetails(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        return \"[T]\" + super.getDetails();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 10
    }
  },
  {
    "path": "src/main/java/main.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "public class main{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        int endProg \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        while(endProg \u003d\u003d 0 \u0026\u0026 input.hasNextLine()){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            command \u003d command.trim();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "            endProg \u003d duke.executeCommand(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "BrianTKM"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "BrianTKM": 14
    }
  }
]

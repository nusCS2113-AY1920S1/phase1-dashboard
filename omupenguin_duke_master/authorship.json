[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class AddCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String taskDescription; // The input line after the command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String dateTrigger;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String MissingDescriptionString \u003d \"Please specify the task you want to add!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public AddCommand(String taskDescription) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // If an error occurs while splitting the array, return false."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public boolean splitDescTime() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String[] data \u003d taskDescription.split(dateTrigger + \" \"); // data[0] os description, data[1] is the time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            time \u003d Time.readTime(data[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            taskDescription \u003d data[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Please add \u0027\" + dateTrigger + \" \u003cdate\u003e\u0027 after your task to specify the event date.\" );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }  catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Please use the format \u0027DD/MM/YYYY HHmm\u0027!\" );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 35
    }
  },
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public AddDeadlineCommand(String taskDescription) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(taskDescription); // taskDescription includes the task info and date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        time \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dateTrigger \u003d \"/by\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (!splitDescTime()) return; // If error occurs, stop the method!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Task newTask \u003d new Deadline(taskDescription, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.echoAdd(newTask, tasks.size());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 17
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public AddEventCommand(String taskDescription) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(taskDescription); // taskDescription includes the task info and date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        time \u003d null;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        dateTrigger \u003d \"/at\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (!splitDescTime()) return; // If error occurs, stop the method!"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Task newTask \u003d new Event(taskDescription, time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.echoAdd(newTask, tasks.size());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 16
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "   public AddTodoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (taskDescription.length() \u003d\u003d 0) { // TODO: Exception handling?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    MissingDescriptionString"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Task newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.echoAdd(newTask, tasks.size());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 25
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public abstract void execute(TaskList task) throws Exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public int stringToInt(String str) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int newInt \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            newInt \u003d Integer.parseInt(str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(str + \" is not a number. Please use a number instead!\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return newInt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void extractDesc(String inputLine) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 25
    }
  },
  {
    "path": "src/main/java/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class CompleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String taskNumStr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public CompleteCommand(String taskNumStr) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        this.taskNumStr \u003d taskNumStr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        int taskNumInt \u003d stringToInt(taskNumStr);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        if (taskNumInt \u003d\u003d 0) return; // don\u0027t do anything if task number is invalid"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        Task currTask;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            currTask \u003d tasks.getFromList(taskNumInt-1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.add(taskNumInt + \" is not associated to any task number.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.add(\"Use \u0027list\u0027 to check the tasks that are here first!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            throw new Exception(\"Task number not in list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        if (currTask.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.add(\"Task \" + taskNumInt + \" is already completed! :)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            currTask.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.add(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            msg.add(\"  \" + currTask.getTask());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 2,
      "-": 35
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Deadline(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.by \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getDate () {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String byStr \u003d timeToString(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"(by: \" + byStr + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String formatDateSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String byStr \u003d timeToString(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \" | \" + byStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 24
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tasks \u003d new TaskList(Storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//        Ui.showWelcome(); // inside Storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Scanner input \u003d new Scanner(System.in); // TODO: Add to Ui instead?"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        while (isExit \u003d\u003d false) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (input.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String inputLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                if (inputLine.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    isExit \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Parser.exit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Command c \u003d Parser.handleInput(inputLine, tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    c.execute(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Storage.save(tasks.list);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void main(String[] args) throws Exception { // Exception needs to be handled?"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 36,
      "-": 3
    }
  },
  {
    "path": "src/main/java/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ErrorCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return; // Don\u0027t do anything"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Event(String description, LocalDateTime date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.at \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String atStr \u003d timeToString(at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"(at: \" + atStr + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String formatDateSave() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String atStr \u003d timeToString(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \" | \" + atStr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 24
    }
  },
  {
    "path": "src/main/java/FindStringCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class FindStringCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String inputLine;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public FindStringCommand(String inputLine) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.inputLine \u003d inputLine;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.commandName \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String searchStr \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            searchStr \u003d inputLine.substring(commandName.length()+1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Please use the format \u0027find \u003cstring\u003e\u0027\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        // Find tasks that match the searchStr and add into itemsFound"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e itemsFound \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (Task currTask : tasks.list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String taskStr \u003d currTask.getTask();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            if (taskStr.indexOf(searchStr) !\u003d -1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                itemsFound.add(taskStr);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (itemsFound.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"There are no matching tasks in your list :(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            for (int i \u003d 0; i \u003c itemsFound.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                msg.add( (i+1) + \".\"  + itemsFound.get(i) );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static Command handleInput(String inputLine, TaskList tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String[] inputArray \u003d inputLine.split(\" \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String command \u003d inputArray[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new ShowListCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                    return new CompleteCommand(inputArray[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                    ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                            \"Please use the format \u0027done \u003cnumber\u003e\u0027!\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                    Ui.printMsg(msg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case \"remove\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    return new RemoveCommand(inputArray[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                            \"Please use the format \u0027remove \u003cnumber\u003e\u0027!\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    ));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    Ui.printMsg(msg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return new FindStringCommand(inputLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                return addToList(command, inputLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return new ErrorCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static Command addToList(String command, String inputLine) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Command commandToRun \u003d new ErrorCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            taskDescription \u003d inputLine.substring(command.length()+1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    commandToRun \u003d new AddTodoCommand(taskDescription);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    commandToRun \u003d new AddEventCommand(taskDescription);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    commandToRun \u003d new AddDeadlineCommand(taskDescription);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    \"Invalid command given!\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return commandToRun;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        //Storage.save(tasks); // Don\u0027t need to save since any previous commands are already saved"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 67,
      "-": 11
    }
  },
  {
    "path": "src/main/java/RemoveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class RemoveCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String taskNumStr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public RemoveCommand(String taskNumStr) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.taskNumStr \u003d taskNumStr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        int taskNumInt \u003d stringToInt(taskNumStr);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        if (taskNumInt \u003d\u003d 0) return; // don\u0027t do anything if task number is invalid"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            tasks.getFromList(taskNumInt-1); // Check if the task exists first"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"  \" + tasks.getFromList(taskNumInt-1).getTask());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            tasks.removeFromList(taskNumInt-1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(taskNumInt + \" is not associated to any task number.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Use \u0027list\u0027 to check the tasks that are here first!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 33
    }
  },
  {
    "path": "src/main/java/ShowListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Task currTask \u003d tasks.getFromList(i);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                msg.add( (i+1) + \".\"  + currTask.getTask() );"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Ui.printMsg(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 17
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"Hello! I\u0027m Duke! I help keep track of your tasks!\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"What can I do for you?\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            FileReader inFile \u003d new FileReader(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            BufferedReader inStream \u003d new BufferedReader(inFile);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Your save data has been loaded :)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            String inLine;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//            System.out.println(\"Trying to load file now...\"); // DEBUG"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            while ((inLine \u003d inStream.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String[] inArray \u003d inLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//                System.out.println((\"Adding a task...\")); // DEBUG"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//                System.out.println(Arrays.toString(inArray)); // DEBUG"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String type \u003d inArray[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    newTask \u003d new ToDo(inArray[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    newTask \u003d new Event(inArray[2], Time.readTime(inArray[3])); //TODO: Update readTime"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    newTask \u003d new Deadline(inArray[2], Time.readTime(inArray[3]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                if (inArray[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                    newTask.markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                list.add(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//            System.out.println(\"*** File not found :( ***\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            msg.add(\"Looks like it\u0027s your first time, let me create a save file for you :)\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            System.out.println(\"*** there was an error reading duke.txt ***\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            Parser.exit(); // TODO: Find out what is supposed to happen here"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Ui.printMsg(msg);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try(FileWriter file \u003d new FileWriter(\"./data/duke.txt\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            for (Task currTask : list) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                String fileContent \u003d currTask.formatSave();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                file.write(fileContent);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                file.write(System.lineSeparator());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//            System.out.println(\"saved\"); // DEBUG"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            System.out.println(\"***Error writing to duke.txt***\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 72
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//        return (isDone ? \"\\u2713\" : \"\\u2718\"); // returns ✓ or X"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); // returns O or X"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String timeToString(LocalDateTime time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String timeStr \u003d time.format(formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return timeStr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"[\" + type + \"][\" + getStatusIcon() + \"] \" + description + getDate();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String formatDateSave() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public String formatSave() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        return type + \" | \" + (isDone ? 1 : 0) + \" | \" + description + formatDateSave();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 45
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e importTaskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        this.list \u003d importTaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void add(Task newTask) { list.add(newTask); }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public int size() { return list.size(); }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public Task getFromList(int index) { return list.get(index); }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void removeFromList(int index) { list.remove(index); }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 17
    }
  },
  {
    "path": "src/main/java/Time.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Time {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static LocalDateTime readTime(String timeStr) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            LocalDateTime time \u003d LocalDateTime.parse(timeStr, formatter);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "//            System.out.println(time);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            return time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 16
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 8
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    protected ArrayList\u003cString\u003e messageArray;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void showWelcome() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Print out message with formatting already done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void printMsg(ArrayList\u003cString\u003e msg) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        for (String outputMsg : msg) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            System.out.println(\"     \" + outputMsg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    // Echoes when an item is added"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void echoAdd(Task currTask, int listSize) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ArrayList\u003cString\u003e msg \u003d new ArrayList\u003cString\u003e(Arrays.asList("
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"Got it. I\u0027ve added this task: \","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"  \" + currTask.getTask(),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "                \"Now you have \" + listSize + \" task(s) in the list.\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        printMsg(msg);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 39
    }
  },
  {
    "path": "src/test/java/CompleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "public class CompleteCommandTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute_indexInBounds_success() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        Task sampleTodo \u003d new ToDo(\"Sample Task\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        tasks.add(sampleTodo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        new CompleteCommand(\"1\").execute(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        assertEquals(true, tasks.getFromList(0).isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "omupenguin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    public void execute_indexOutOfBounds_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            TaskList tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            new CompleteCommand(\"1\").execute(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "            assertEquals(\"Task number not in list\", e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "omupenguin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "omupenguin": 29
    }
  }
]

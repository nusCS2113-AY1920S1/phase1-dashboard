[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 22,
      "-": 18
    }
  },
  {
    "path": "src/main/java/DateTimeFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "class DateTimeFormat {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public DateTimeFormat(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String[] line \u003d message.split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        date \u003d dateFormat(line[0]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        time \u003d timeFormat(line[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String dateFormat(String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //date will be in the form 2/12/2019"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        int day \u003d Integer.parseInt(date.substring(0, date.indexOf(\"/\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter format \u003d new DateTimeFormatterBuilder().appendPattern(\"d/MM/yyyy\").toFormatter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        LocalDate parsedDate \u003d LocalDate.parse(date, format);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + getDayNumberSuffix(day) + \" of \" + \"\u0027MMMM yyyy\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //new date will be in the form 2nd of December 2019"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String newDate \u003d dtf.format(parsedDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return newDate;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String timeFormat(String time) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter format \u003d new DateTimeFormatterBuilder().appendPattern(\"HHmm\").toFormatter();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        LocalTime parsedTime \u003d LocalTime.parse(time,format);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String newTime \u003d dtf.format(parsedTime);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return newTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String getDayNumberSuffix(int day) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        switch (day % 10) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 66
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //Scans first command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        Scanner command \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //Create handler for the 3 different commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        Handler handle \u003d new Handler();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //Load previous list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        HardDisk hd \u003d new HardDisk();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        noOfTasks \u003d hd.load(tasks,noOfTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        while (!cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (!cmd.equals(\"list\") \u0026\u0026 !cmd.contains(\"done\") \u0026\u0026 !cmd.contains(\"find\") \u0026\u0026 !cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.add(noOfTasks, handle.manage(cmd));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String toPrint \u003d \"       \" + tasks.get(noOfTasks).toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(toPrint);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    noOfTasks++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Now you have \" + noOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    //traverse through the whole list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    while ((count - 1) \u003c noOfTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        System.out.print(\"     \" + count + \".\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        System.out.println(tasks.get(count - 1).toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (cmd.contains(\"done\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    int num \u003d Integer.parseInt(cmd.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"       \" + tasks.get(num - 1).toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    hd.done(num);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (cmd.contains(\"delete\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    int num \u003d Integer.parseInt(cmd.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"       \" + tasks.get(num - 1).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    noOfTasks--;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Now you have \" + noOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.remove(num-1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    hd.delete(num);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (cmd.contains(\"find\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    //get keyword from query"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String word \u003d cmd.substring(cmd.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    for(Task itr : tasks) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        if(itr !\u003d null \u0026\u0026 itr.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                            System.out.println(\"     \" + count + \".\" + itr.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                            count++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (cmd.equals(\"todo\") || cmd.equals(\"deadline\") || cmd.equals(\"event\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a \" + cmd + \" cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 99,
      "-": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 18
    }
  },
  {
    "path": "src/main/java/Handler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Handler {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Task manage(String cmd) throws IOException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if (cmd.contains(\" \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get the first word"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String firstWord \u003d cmd.substring(0, cmd.indexOf(\" \"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String description \u003d cmd.substring(cmd.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String type \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String by \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                write(type,0, description, by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return new Todo(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String description \u003d cmd.substring(cmd.indexOf(\" \") + 1, cmd.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String by \u003d cmd.substring(cmd.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                DateTimeFormat format \u003d new DateTimeFormat(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                by \u003d format.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String type \u003d \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String by1 \u003d \" | \" + by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    write(type,0, description, by1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    return new Deadline(description, by);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String type \u003d \"E\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String by1 \u003d \" | \" + by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    write(type,0, description, by1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    return new Event(description, by);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    //adding task to text file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public static void write(String type, int done, String description, String by) throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        FileWriter fw \u003d new FileWriter(textFile,true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String line \u003d (type + \" | \" + done + \" | \" + description + by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 48
    }
  },
  {
    "path": "src/main/java/HardDisk.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class HardDisk {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    //editing task as complete in text file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    void done(int num) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get path of text file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File parentDir \u003d textFile.getParentFile();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //if file does not exist, create parent file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (!parentDir.exists()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                parentDir.mkdirs();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(textFile);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int currentNo \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get current info in the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (currentNo \u003d\u003d num-1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    command[1] \u003d \"1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        list.add(command[0] + \" | \" + command[1] + \" | \" + command[2]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        list.add(command[0] + \" | \" + command[1] + \" | \" + command[2] + \" | \" + command[3]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    list.add(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currentNo++;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(textFile);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            for (String line : list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    //removing task in text file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    void delete(int num) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get path of text file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File parentDir \u003d textFile.getParentFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //if file does not exist, create parent file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (!parentDir.exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                parentDir.mkdirs();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(textFile);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int currentNo \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get current info in the file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (currentNo !\u003d num-1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    list.add(message);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currentNo++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(textFile);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            for (String line : list) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    //loading the text file when duke starts up"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    int load(ArrayList\u003cTask\u003e tasks, int noOfTasks) throws IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get path of text file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File parentDir \u003d textFile.getParentFile();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //if file does not exist, create parent file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (!parentDir.exists()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                parentDir.mkdirs();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(textFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String firstWord \u003d message.substring(0, message.indexOf(\" \"));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (firstWord.equals(\"T\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.add(noOfTasks, new Todo(command[2]));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        tasks.get(noOfTasks).isDone \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (firstWord.equals(\"D\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.add(noOfTasks, new Deadline(command[2], command[3]));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        tasks.get(noOfTasks).isDone \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (firstWord.equals(\"E\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.add(noOfTasks, new Event(command[2], command[3]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        tasks.get(noOfTasks).isDone \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                noOfTasks++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return noOfTasks;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return noOfTasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 122
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or cross symbol"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void markAsDone () {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 13
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 22,
      "-": 18
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where tasks are added. It applies to todo, deadline, or events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Initializes input of the command to the actual full command given."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * If the description of the command is empty, return error."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param command Type of the command (i.e. todo/deadline/event)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param fullCommand Entire input given by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If no description is found"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public AddCommand(Type command, String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        input \u003d fullCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        boolean isEmpty \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if(!fullCommand.contains(\" \")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            isEmpty \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if(command \u003d\u003d Type.TODO) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if(isEmpty) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                throw new DukeException (\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            type \u003d command;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (command \u003d\u003d Type.DEADLINE) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if(isEmpty) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            type \u003d command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (command \u003d\u003d Type.EVENT) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if(isEmpty) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                throw new DukeException(\"     ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            type \u003d command;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the different operations of each type of the 3 commands and prints out correspondingly."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * A new task is also added to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If command is not of the 3 types"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws IOException If file does not exist"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String toAddTask \u003d \"     Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String toShowTask \u003d \"     Now you have \" + (tasks.size() + 1) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String description \u003d getInput().substring(getInput().indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                Storage.write(\"T\",0, description, \"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                Task currTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                tasks.getTasks().add(currTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String toPrintTask \u003d \"       \" + tasks.get(tasks.size()-1).toString() +\"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showMessage(toAddTask + toPrintTask + toShowTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                description \u003d getInput().substring(getInput().indexOf(\" \") + 1, getInput().indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String by \u003d getInput().substring(getInput().indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                DateTimeFormat format \u003d new DateTimeFormat(by);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                by \u003d format.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                Storage.write(\"D\",0, description, \" | \" + by);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currTask \u003d new Deadline(description,by);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                tasks.getTasks().add(currTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                toPrintTask \u003d \"       \" + tasks.get(tasks.size()-1).toString() +\"\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showMessage(toAddTask + toPrintTask + toShowTask);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                description \u003d getInput().substring(getInput().indexOf(\" \") + 1, getInput().indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                by \u003d getInput().substring(getInput().indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                format \u003d new DateTimeFormat(by);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                by \u003d format.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                Storage.write(\"E\",0, description, \" | \" + by);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currTask \u003d new Event(description,by);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                tasks.getTasks().add(currTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                toPrintTask \u003d \"       \" + tasks.get(tasks.size()-1).toString() +\"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showMessage(toAddTask + toPrintTask + toShowTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                throw new DukeException(\"     Unknown command!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 94
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents the different type of commands that can be inputted into Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected Type type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        EXIT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        LIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        TODO,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DONE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        FIND,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DELETE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the different operations for each type of the commands."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If command is not of the type"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws IOException If file does not exist"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to get the type of command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return type Type of the command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Ends the program if the command if of type Exit"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return bool True denotes the end of the program, otherwise false"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return this.getType() \u003d\u003d Type.EXIT;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to get input given by the user"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return input Input given by user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 59
    }
  },
  {
    "path": "src/main/java/DateTimeFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Helps to convert date and time to a standard format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "class DateTimeFormat {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public DateTimeFormat(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String[] line \u003d message.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        date \u003d dateFormat(line[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        time \u003d timeFormat(line[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return date + \" \" + time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Returns standard format of the date."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param date Date of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return newDate Updated format of date of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String dateFormat(String date) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //date will be in the form 2/12/2019"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        int day \u003d Integer.parseInt(date.substring(0, date.indexOf(\"/\")));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter format \u003d new DateTimeFormatterBuilder().appendPattern(\"d/MM/yyyy\").toFormatter();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        LocalDate parsedDate \u003d LocalDate.parse(date, format);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"d\u0027\" + getDayNumberSuffix(day) + \" of \" + \"\u0027MMMM yyyy\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        //new date will be in the form 2nd of December 2019"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String newDate \u003d dtf.format(parsedDate);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return newDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Returns standard format of the time."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param time Time of task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return newTime Updated format of time of task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String timeFormat(String time) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter format \u003d new DateTimeFormatterBuilder().appendPattern(\"HHmm\").toFormatter();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        LocalTime parsedTime \u003d LocalTime.parse(time,format);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"h:mma\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String newTime \u003d dtf.format(parsedTime);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return newTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Returns the suffix after the day in the date of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param day Day of task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return suffix Suffix of the day"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private String getDayNumberSuffix(int day) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if (day \u003e\u003d 11 \u0026\u0026 day \u003c\u003d 13) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        switch (day % 10) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 87
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Specific class for tasks involving deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Converts the task into a string for printing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return toString String of the task to be printed out"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 26
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where specific tasks are deleted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public DeleteCommand(String index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        type \u003d Type.DONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        input \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the command and deletes the specific task from the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If the number is not an integer (e.g a string)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int num \u003d Integer.parseInt(input.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String toDeleteTask \u003d \"     Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String toPrintTask \u003d \"       \" + tasks.get(num - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            tasks.delete(num - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            storage.delete(num);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String toShowTask \u003d \"     Now you have \" + tasks.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showMessage(toDeleteTask + toPrintTask + toShowTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            throw new DukeException(\"     Not a valid number! Task does not exist, please try again.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 34
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where tasks are marked as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public DoneCommand(String index) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        type \u003d Type.DONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        input \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the command and marks the specific task as done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If the number is not an integer (e.g a string)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int num \u003d Integer.parseInt(input.replaceAll(\"\\\\D+\", \"\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if(num \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (!tasks.get(num - 1).isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    tasks.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    storage.done(num);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String toPrintDone \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String toPrintTask \u003d \"     \" + tasks.get(num - 1).toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    ui.showMessage(toPrintDone + toPrintTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    ui.showError(\"     This task is already done!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showError(\"     Task does not exist, please try again.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            throw new DukeException(\"     Not a number! Task does not exist, please try again.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Starts loading the text file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param filePath The path where text file is stored"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If path is not found"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Duke(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Executes the entire duke process"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        while (!isExit) try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 41,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents the errors encountered, and handles exceptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Specific class for tasks involving event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Converts the task into a string for printing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return toString String of the task to be printed out"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 26
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where the program ends."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        type \u003d Type.EXIT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the command and closes the entire program"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        ui.showMessage(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 20
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where tasks of specific keywords are found"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public FindCommand(String word) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        type \u003d Type.DONE;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        input \u003d word;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the command and find tasks that matches the specific keyword."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Returns error messages if no tasks are found."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String word \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String toFindTask \u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        boolean isMatch \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        for (Task itr : tasks.getTasks()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (itr !\u003d null \u0026\u0026 itr.getDescription().contains(word)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String toPrintTask \u003d \"     \" + count + \".\" + itr.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showMessage(toFindTask + toPrintTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                isMatch \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if(!isMatch \u0026\u0026 tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showMessage(\"     There are no matching keywords in your list!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showMessage(\"     Your list is empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "termehlee": 41
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents a type of command, where the list of tasks are shown"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        type \u003d Command.Type.LIST;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Handles the command, and prints the tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Returns an error message if no tasks are found"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param ui User interface"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param storage Storing of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showMessage(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            for (Task task: tasks.getTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                ui.showMessage(\"     \" + count++ + \".\" + task.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ui.showError(\"     There are no tasks in your list yet!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Helps to parse through the command and identify the type of command input by the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Parses through the first word to create the corresponding command types"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param fullCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return the different types of commands after parsing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If the command is not recognised"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String firstWord \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if(fullCommand.contains(\" \")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            firstWord \u003d fullCommand.substring(0, fullCommand.indexOf(\" \"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new AddCommand(Command.Type.TODO,fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new AddCommand(Command.Type.DEADLINE,fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new AddCommand(Command.Type.EVENT,fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            throw new DukeException(\"     ☹ OOPS!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 40
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Handles the any changes to the text file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private static ArrayList\u003cTask\u003e info \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Helps make sense of the text file, and creates the corresponding tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param filePath The path where text file is stored"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws DukeException If the file is not found"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Storage(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                String firstWord \u003d message.substring(0, message.indexOf(\" \"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (firstWord.equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    info.add(new Todo(command[2]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        info.get(info.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (firstWord.equals(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    info.add(new Deadline(command[2], command[3]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        info.get(info.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else if (firstWord.equals(\"E\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    info.add(new Event(command[2], command[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        info.get(info.size() - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            throw new DukeException(\"     File not found\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Marking the corresponding task as done by rewriting the entire text file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param num The specific number of the task to be marked as done"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    void done(int num) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get path of text file"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File parentDir \u003d textFile.getParentFile();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //if file does not exist, create parent file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (!parentDir.exists()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                parentDir.mkdirs();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(textFile);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int currentNo \u003d 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get current info in the file"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (currentNo \u003d\u003d num - 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    String[] command \u003d message.split(\" \\\\| \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    command[1] \u003d \"1\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    if (command[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        list.add(command[0] + \" | \" + command[1] + \" | \" + command[2]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                        list.add(command[0] + \" | \" + command[1] + \" | \" + command[2] + \" | \" + command[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    list.add(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currentNo++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(textFile);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            for (String line : list) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Helps to add a new task to the text file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param type Type of command (i.e. todo/deadline/event)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param done Represents if the task is done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param description Description of the task (without the type of command)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param by Date for task to be done by"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @throws IOException If file is not found"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public static void write(String type, int done, String description, String by) throws IOException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        FileWriter fw \u003d new FileWriter(textFile, true);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String line \u003d (type + \" | \" + done + \" | \" + description + by);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Helps to delete a specific task in the text file"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param num The specific number of the task to be deleted"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    void delete(int num) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get path of text file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File textFile \u003d new File(System.getProperty(\"user.dir\") + File.separator + \"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            File parentDir \u003d textFile.getParentFile();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //if file does not exist, create parent file"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            if (!parentDir.exists()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                parentDir.mkdirs();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileReader fr \u003d new FileReader(textFile);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            String message;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            int currentNo \u003d 0;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            //get current info in the file"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            while ((message \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                if (currentNo !\u003d num - 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                    list.add(message);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                currentNo++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            FileWriter fw \u003d new FileWriter(textFile);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            for (String line : list) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                fw.append(line).append(String.valueOf(\u0027\\n\u0027));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "termehlee"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Loads up the tesxt file when program is first started"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return info List of tasks stored previously"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return info;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 156
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents the different types of tasks that can be inputted by the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Shows a tick or a cross to represent if task is done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or cross symbol"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to get the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return description Description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Marks the task as done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void markAsDone () {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Converts the task into a string for printing"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return toString String of the task to be printed out"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 47
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents the list of all the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to access the tasks in the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return tasks Tasks in the list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to return the number of tasks in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return size Size of the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to access a specific task in the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param index The index of specific task wanted in the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return the task at the specific index"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Constructor to delete a specific task in the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param index The index of specific task to delete in the list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 53
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Specific class for tasks involving todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Converts the task into a string for printing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return toString String of the task to be printed out"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "termehlee"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "termehlee"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "termehlee"
        },
        "content": " * Represents the user interface and interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "termehlee"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "termehlee"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Prints the welcome message upon starting Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "termehlee"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Prints an error when there are no tasks available"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"There are no tasks to be found!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Prints the boundary line"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(\"     ---------------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Helps to read in the user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @return cmd Input by the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        Scanner command \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        String cmd \u003d command.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        return cmd;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Prints error message"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param error Error shown by the system"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "termehlee"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * Prints wanted message"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     * @param message Message customised accordingly"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "termehlee"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "termehlee"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "termehlee"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "termehlee"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "termehlee": 67
    }
  }
]

[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents \u003ccode\u003eDuke\u003c/code\u003e, a Personal Assistant Chatbot that helps a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * person to keep track of various things."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * A Duke constructor to initialize objects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * A \u003ccode\u003eUi\u003c/code\u003e object that deals with interactions with the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * A \u003ccode\u003eStorage\u003c/code\u003e object that deals with loading tasks from a local"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * file and saving tasks in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /** A \u003c\u003eParser\u003c/\u003e object that deals with parsing of inputs"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * into pieces of useful information"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /** A \u003c\u003eTaskList\u003c/\u003e object that can perform operations such as"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * add and delete on the tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of program logic"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * Shows Welcome message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String day;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String userInput \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        while(!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            /** return a string array with commands and description+time */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String[] firstBox \u003d parser.firstFilter(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String commands \u003d firstBox[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String descriptionWithTime \u003d firstBox[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String[] secondBox;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String timeBeforeFormat;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String timeInString;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": "             * A switch statement that determine which operation to carry out"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": "             * depending on the command provided the user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": "             * @throws DukeException if no command match the case token"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "             */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                switch (commands) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        ui.showTaskList(tasks.getTaskList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! Please enter the task index number that you would like to mark as done. E.g. done 2\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                tasks.runDone(userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }catch(DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            storage.save();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! Please enter the task index number that you would like to delete. E.g. delete 2\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                tasks.runDelete(userInput);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }catch(DukeException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            storage.save();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! Please enter the keyword that you would like me to search in the list. E.g. find book\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                tasks.runFind(userInput);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }catch(DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                     * Execute todo operation"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                     * @throws DukeException if no description is provided."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                tasks.runToDo(firstBox[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }catch(DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            storage.save();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                secondBox \u003d parser.secondFilter(descriptionWithTime , \"deadline\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                day \u003d parser.dayExtractor(secondBox);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                description \u003d secondBox[0];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                timeBeforeFormat \u003d secondBox[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                if (timeBeforeFormat.contains(\"/\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    timeInString \u003d parser.timeFormatter(timeBeforeFormat.trim() , day);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    tasks.runDeadline(description , timeInString);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                }else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    tasks.runDeadline(description , timeBeforeFormat);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }catch(DukeException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            storage.save();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            if (descriptionWithTime.isBlank()){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            }else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                secondBox \u003d parser.secondFilter(descriptionWithTime , \"event\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                day \u003d parser.dayExtractor(secondBox);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                description \u003d secondBox[0];"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                timeBeforeFormat \u003d secondBox[1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                if (timeBeforeFormat.contains(\"/\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    timeInString \u003d parser.timeFormatter(timeBeforeFormat , day);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    tasks.runEvent(description , timeInString);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                }else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                    tasks.runEvent(description , timeBeforeFormat);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }catch(DukeException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }finally{"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            storage.save();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }catch(DukeException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }finally {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                userInput \u003d ui.readUserInput().trim();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         * Print Exit messages"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "qjie7"
        },
        "content": "         */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of the main program"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 201,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public DukeException(){}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a \u003ccode\u003eDukeException\u003c/code\u003e with a specific string."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param message A string that specifies the problem associated with the"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *              exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a \u003ccode\u003eParser\u003c/code\u003e that parses user input into a specific"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * type of \u003ccode\u003eCommand\u003c/code\u003e. The \u003ccode\u003eParser\u003c/code\u003e also parses tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * related to the command, and checks for illegal instructions."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private static final String WHITESPACE \u003d \" \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Parse and extract useful informations from loaded file and then added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * into \u003ccode\u003eTaskList\u003c/code\u003e ."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param input The inputs that loaded from the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void loadParse(ArrayList\u003cTask\u003e taskList , String input) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String[] arr \u003d  input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String taskType \u003d arr[0].trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String taskStatus \u003d arr[1].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String taskDescription \u003d arr[2].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String taskTime \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            Task todo \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            if (taskStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            taskList.add(todo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            taskTime \u003d arr[3].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            Task deadline \u003d new Deadline(taskDescription , taskTime);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            if (taskStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            taskList.add(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            taskTime \u003d arr[3].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            Task event \u003d new Event(taskDescription , taskTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            if (taskStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            taskList.add(event);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Extract time information from the secondBox"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param secondBox a string of information which consist of task description and time only."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return time a string of time information extracted from secondBox."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String dayExtractor(String[] secondBox) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String time \u003d secondBox[1].trim().split(\"/\")[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Enable Duke to understand date information from a given string in the format of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param timeBeforeFormat a string of date information in the format of dd/mm/yyyy hhmm"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return a string of time information in the form of \"d\u0027st of\u0027 MMMM yyyy , ha\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String timeFormatter(String timeBeforeFormat , String day) throws ParseException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        DateFormat parser \u003d new SimpleDateFormat(\"dd/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        DateFormat stFormatter \u003d new SimpleDateFormat(\"d\u0027st of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        DateFormat ndFormatter \u003d new SimpleDateFormat(\"d\u0027nd of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        DateFormat rdFormatter \u003d new SimpleDateFormat(\"d\u0027rd of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        DateFormat thFormatter \u003d new SimpleDateFormat(\"d\u0027th of\u0027 MMMM yyyy , ha\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Date convertedDate \u003d parser.parse(timeBeforeFormat);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        if (day.equals(\"1\")){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            output \u003d stFormatter.format(convertedDate);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else if (day.equals(\"2\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            output \u003d ndFormatter.format(convertedDate);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else if (day.equals(\"3\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            output \u003d rdFormatter.format(convertedDate);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            output \u003d thFormatter.format(convertedDate);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * First Level filter of the information input by the user to extract information into various pieces"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param userInput a string of information that input by the user"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return an array of string that extracted the command out , at the same time , saving the remaining information."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String[] firstFilter(String userInput) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String[] filter \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String firstWord \u003d filter[0];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        StringBuilder str \u003d new StringBuilder();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        for (int i \u003d 1 ; i \u003c filter.length ; i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            str.append(filter[i]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            str.append(WHITESPACE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String[] result \u003d {firstWord , str.toString().trim()};"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Second level filter of the information input by the user to extract information into various pieces"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param newString a string of information that input by the user"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param firstWord this is basically the command/very first word of the input by the user"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return an array of string that stores user input description and time"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String[] secondFilter(String newString , String firstWord) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String[] filter;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        if (firstWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            filter \u003d newString.split(\" /by \");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            filter \u003d newString.split(\" /at \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return filter;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 135
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that deals with loading tasks from"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * a file and saving tasks in the file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * An internal \u003ccode\u003eArrayList\u003c/code\u003e structure to store and manipulate"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * the tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Create a Parser object in this class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Loads tasks from the file into a \u003ccode\u003eArrayList\u003c/code\u003e of"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A \u003ccode\u003eArrayList\u003c/code\u003e of tasks as recorded in the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @throws DukeException If file is not found."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        File file \u003d new File(\"/Users/qianjie/Desktop/duke/src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        FileReader fileReader \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        BufferedReader bufferedReader \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            while (input !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                parser.loadParse(taskList , input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }finally {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                if (fileReader !\u003d null) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    fileReader.close();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                if (bufferedReader !\u003d null) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedReader.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Saves tasks from a \u003ccode\u003eTaskList\u003c/code\u003e to the local file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @throws DukeException If writing to the local file failed."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void save () {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        BufferedWriter bufferedWriter \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            File file \u003d new File(\"/Users/qianjie/Desktop/duke/src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            fileWriter \u003d new FileWriter(file , false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                String taskType \u003d t.getType();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                String taskStatus \u003d t.getStatusIcon();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                String taskDescription \u003d t.getDescription();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                String taskTime \u003d t.getTime();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedWriter.write(taskType + \" | \" + taskStatus + \" | \" + taskDescription);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedWriter.write(taskType + \" | \" + taskStatus + \" | \" + taskDescription + \" | \" + taskTime);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedWriter.newLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                bufferedWriter.flush();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                if (fileWriter !\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    fileWriter.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                if (bufferedWriter !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                    bufferedWriter.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 117
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a list of \u003ccode\u003eTask\u003c/code\u003e that can perform operations such as"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * add and delete on the tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public TaskList() {}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e in this class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList this is the taskList passed down from other class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * An internal \u003ccode\u003eArrayList\u003c/code\u003e structure to store and manipulate"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * the tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * to create an Ui object within this class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    //Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a new \u003ccode\u003eTaskList\u003c/code\u003e in this class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return an \u003ccode\u003eArrayList\u003c/code\u003e of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"done\" command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param userInput a string of information that input by the user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runDone(String userInput) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Task chosenTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        chosenTask.markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showDone(taskList , index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //storage.save();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"delete\" command"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param userInput a string of information that input by the user"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runDelete(String userInput) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        int index \u003d Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showDelete(taskList , index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showTaskListSize(taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //storage.save();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"find\" command"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param userInput a string of information that input by the user"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runFind(String userInput) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        int index \u003d 0 ;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ArrayList\u003cTask\u003e searchResults \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String keyword \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                searchResults.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showMatchTasks(searchResults , index);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"find\" command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description a string of description of the task entered by the user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runToDo(String description) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Task toDoTask \u003d new ToDo(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        taskList.add(toDoTask);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showAddTodoTask(taskList , toDoTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //storage.save();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"deadline\" command"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description a string of deadline task description of the task entered by the user"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param time a string of time in the format of dd/mm/yyyy hhmm entered by the user"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runDeadline(String description , String time) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Task deadlineTask \u003d new Deadline(description , time);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        taskList.add(deadlineTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showAddDeadlineTask(taskList , deadlineTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //storage.save();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Execution of \"event\" command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description a string of event task description of the task entered by the user"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param time a string of time in the format of dd/mm/yyyy hhmm entered by the user"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void runEvent(String description , String time) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Task eventTask \u003d new Event(description , time);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        taskList.add(eventTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ui.showAddEventTask(taskList , eventTask);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //storage.save();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 116
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a system that deals with user interaction, such as asking for user inputs"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * and displaying messages"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /** A \u003ccode\u003eScanner\u003c/code\u003e used to read user input. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a \u003ccode\u003eUi\u003c/code\u003e object and initializes the"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * \u003ccode\u003eScanner\u003c/code\u003e to read user input from the system."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Reads one line of user instruction."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A string that represents the user instruction."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Shows Duke logo and welcome message, and prompts user to type instructions."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Displays all tasks currently stored in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Shows bye message to user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display messages when user mark tasks as completed"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showDone(ArrayList\u003cTask\u003e taskList , int index) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(taskList.get(index - 1));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display messages when user removed tasks from the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showDelete(ArrayList\u003cTask\u003e taskList , int index) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(taskList.get(index - 1));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display amount of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showTaskListSize(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display amount of tasks in the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param searchResults The \u003ccode\u003eList\u003c/code\u003e used to store results from searching"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *                      over specific keyword from the \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param index The numbering bullets for the output"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showMatchTasks(ArrayList\u003cTask\u003e searchResults , int index) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        for (Task results : searchResults) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "qjie7"
        },
        "content": "            System.out.println(index + \".\" + results);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display messages when user added todo tasks into \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param todoTask new todo task added by the user"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showAddTodoTask(ArrayList\u003cTask\u003e taskList , Task todoTask) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(todoTask);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display messages when user added deadline tasks into \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used to store tasks."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param deadlineTask new deadline task added by the user"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showAddDeadlineTask(ArrayList\u003cTask\u003e taskList , Task deadlineTask) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(deadlineTask);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Display messages when user added event tasks into \u003ccode\u003eTaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param eventTask new event task added by the user"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showAddEventTask(ArrayList\u003cTask\u003e taskList , Task eventTask) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(eventTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        //showLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Shows contents of an error."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param message a string that represents the content of the error."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showError (String message) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"☹ OOPS!!!\" + message);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Shows a straight line to show separation of display output."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 171
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a task with a deadline. The \u003ccode\u003eDeadline\u003c/code\u003e class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          content of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param time A string that specifies the deadline of the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public Deadline(String description , String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns a string representation of the task to be printed upon user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A string representation of the task that displays the type,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          status icon , description and deadline of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.description + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 32
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents an event that occurs at a specific time. The \u003ccode\u003eEvent\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * class inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          content of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param time A string that specifies the time of the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public Event(String description , String time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns a string representation of the task to be printed upon user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A string representation of the task that displays the type,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          status icon , description and deadline of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return \"[\" + this.type +\"][\" + this.getStatusIcon() + \"] \" + this.description + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 34
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a task.  \u003ccode\u003eTask\u003c/code\u003e is an abstract class that can not be"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * instantiated, but it has many child classes to represent different types of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public abstract class Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * A String that represents the specific content of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * A boolean that represents the status of completion of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Type of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Time information of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Initialises the minimum fields required to setup a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * All new tasks are uncompleted by default."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description A string that represents the specific activity"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *                  associated with the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.type \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.time \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns an icon that represents the status of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return Tick if completed, cross if uncompleted."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return type of the task in string."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A string that represents the specific activity associated with"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns the time element of the task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return time element in string ."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * An abstract class that overrides the \u003ccode\u003etoString()\u003c/code\u003e method"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * in \u003ccode\u003eObject\u003c/code\u003e class to output a string representation of the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *  @return A string representation of the task that displays the status"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          and description of the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "qjie7": 87
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * Represents a normal task without a deadline or a specific time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": " * inherits from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Constructs a \u003ccode\u003eToDo\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @param description A string that describes the specific"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *        content of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * Returns a string representation of the task to be printed upon user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * inquiry."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     * @return A string representation of the task that displays the type and"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     *          description of task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 30
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 10
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"[D]\" + \"[\\u2718]\" + \" \" + \"I need to test the code (by: tonight)\", newDeadline.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2718\", newDeadline.getStatusIcon());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(\"I need to test the code\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        newDeadline.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2713\", newDeadline.getStatusIcon());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 25
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"[E]\" + \"[\\u2718]\" + \" \" + \"project meeting (at: 7th May)\", newEvent.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2718\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        Event newEvent \u003d new Event(\"project meeting\", \"20/11/2019 1800\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        newEvent.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2713\", newEvent.getStatusIcon());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 25
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "qjie7"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "qjie7"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "qjie7"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ToDo newTodo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"[T]\" + \"[\\u2718]\" + \" \" + \"I need to test the code\" , newTodo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ToDo newToDo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2718\", newToDo.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "qjie7"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        ToDo newToDo \u003d new ToDo(\"I need to test the code\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        newToDo.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "qjie7"
        },
        "content": "        assertEquals(\"\\u2713\", newToDo.getStatusIcon());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "qjie7"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "qjie7"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "qjie7": 26
    }
  }
]

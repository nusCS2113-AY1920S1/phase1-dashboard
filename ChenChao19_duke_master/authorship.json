[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Deadline Class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * inherits from Task Class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Has constructor and methods for the Deadline object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This constructor \"Deadline\" is used to construct the Deadline object when its created upon user input of \"deadline xxx /by d/M/yyyy HHmm\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param description This is a string of description of the task by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param by This is a LocalDateTime of the deadline input by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"getBy\" is used to get the due date of the object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the due date of the object in a String"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"toString\" is used to return the relevant attributes to be printed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the relevant attributes to be printed in a String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Duke program"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Takes in an input from the user and executes the command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * result is shown as the output on the console"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * @author Chen Chao"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * @version Phase 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * @since 2019-09-09"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This Constructor \"Duke\" instantiates the necessary data structures on startup"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        storage \u003d new Storage(\"D:/Desktop/duke/src/main/\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        storage.readingFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        list \u003d new TaskList(storage.returnList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"run\" is used to continuously scan for user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * user input is passed into \"Parser\" to process the input to execute the corresponding action"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        ui.DukeInitialize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if(in.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    Parser P \u003d new Parser(storage, ui, list);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (input.equals(\"bye\")) break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    P.parse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.IDoNotUnderStand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.DateFormatError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        ui.DukeBye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 59,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the DukeException Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * outputs custom exception messages specific to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Event Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * inherits from Task Class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Has constructor and methods for the Event object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This constructor \"Event\" is used to construct the Event object when its created upon user input of \"event xxx /at xxx\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param description This is a string of description of the task by the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param at This is a string of timing of the event input by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"toString\" is used to return the relevant attributes to be printed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the relevant attributes to be printed in a String"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " *This is the Parser Class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Handles user input and executes the corresponding command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This Constructor \"Parser\" instantiates the necessary variables to be used in Class \"Parser\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param store This is the object that handles reading and writing of the Duke.txt file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param interact This is the object that handles the interaction with the User"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param tasks This is the task lists that stores the tasks from the user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Parser(Storage store, Ui interact, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.storage \u003d store;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.ui \u003d interact;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.list \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"parse\" is used to execute the correct command based on user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param input This is the user command to be executed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void parse(String input) throws DukeException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        if (input.length() \u003d\u003d 0 | input.startsWith(\" \")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.TaskEmptyError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            if (list.getTask().isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.ListEmptyError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                for (int i \u003d 0; i \u003c list.getTask().size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(i + 1 + \".\" + list.getTask().get(i));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (input.equals(\"todo\"))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    ui.TodoEmptyError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    ui.TodoEmptyError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                Task todo_temp \u003d new Todos(split[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                list.getTask().add(todo_temp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                storage.addToFile(todo_temp);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.ShowAdding(todo_temp, list);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (input.equals(\"event\"))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    ui.EventEmptyError();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                String[] split \u003d input.split(\" \", 2); //remove event from the rest"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    ui.EventEmptyError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                String[] event_split \u003d split[1].split(\" /at \"); //remove /at from the rest"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                Task event_temp \u003d new Event(event_split[0], event_split[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                list.addTask(event_temp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                storage.addToFile(event_temp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.ShowAdding(event_temp, list);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            if (input.equals(\"deadline\"))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.DeadlineEmptyError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                ui.DeadlineEmptyError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            String[] deadline_split \u003d split[1].split(\" /by \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            LocalDateTime formatDateTime \u003d LocalDateTime.parse(deadline_split[1], formatter);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            Task deadline_temp \u003d new Deadline(deadline_split[0], formatDateTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            list.addTask(deadline_temp);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            storage.addToFile(deadline_temp);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.ShowAdding(deadline_temp, list);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            int value \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            list.getTask().get(value - 1).Done();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            storage.updateFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.ShowDone(value, list);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            int value \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            Task temp \u003d list.getTask().get(value - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            list.deleteTask(value - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            storage.updateFile();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.ShowDelete(temp, list);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.ShowFind(split[1], list);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            ui.MeaningError();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 108
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Storage Class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Saved data stored in TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Retrieves data saved in Duke.txt"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Repopulates TaskList with data retrieved from Duke.txt"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private String pathName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This Constructor \"Storage\" instantiates the necessary variables to be used in Class \"Storage\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param filePath This is the filePath to Duke.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.pathName \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"returnList\" is used to clone objects from TaskList to list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return ArrayList\u003cTask\u003e This is the ArrayList of objects to be cloned to List"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public ArrayList\u003cTask\u003e returnList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"writeFile\" is used to write a String to Duke.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param task This is the tasks from the user that will be saved in Duke.txt"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void addToFile(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File saveFile \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"updateFile\" is used to update Duke.txt every time there is a change"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void updateFile() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File saveFile \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            for(Task task : list) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                fileWriter.write(task.toString() + \" \\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"readingFile\" is used to read data from Duke.txt"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void readingFile(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File file \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        if(file.exists()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                List\u003cString\u003e temp \u003d Files.lines(file.toPath()).collect(Collectors.toList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                for(String string : temp) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    Task curr;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (string.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Todos(string.substring(7));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } else if (string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        DateTimeFormatter temp_formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        LocalDateTime temp_LocalDateTime \u003d LocalDateTime.parse(string.substring(string.indexOf(\"(by: \") + 5, string.indexOf(\")\", string.length() - 2)), temp_formatter);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Deadline(string.substring(7, string.indexOf(\"(by: \") - 1), temp_LocalDateTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } else { // contains \"[E]\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Event(string.substring(7, string.indexOf(\"(at: \") - 1), string.substring(string.indexOf(\"(at: \") + 5, string.length() - 1));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if(string.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr.Done();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    list.add(curr);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Task Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Has constructor and methods for the Task object"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This constructor \"Task\" is used to instantiate the attributes of the Task Object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param description This is a string of description of the task by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"toString\" is used to return the relevant attributes to be printed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the relevant attributes to be printed in a String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"Done\" is used to mark the Task as done upon completion of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * changes the isDone attribute to true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public void Done() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"getStatusIcon\" is used to get the tick or cross icon based on if the task is done or not"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the icon"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 41
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the TaskList Class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * contains the TaskList for Duke as well as the constructors and methods for TaskList"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected ArrayList\u003cTask\u003e DukeTaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This constructor \"TaskList\" is used to instantiate the attributes of the TaskList Object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param temp This is a ArrayList\u003cTask\u003e that stores the tasks by the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e temp) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.DukeTaskList \u003d temp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"getTask\" is used to return the relevant attributes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return ArrayList\u003cTask\u003e This returns the task list of the user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public ArrayList\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return DukeTaskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"addTask\" is used to add Tasks into the list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param temp This is a Task that is needed to be stored in the list of task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public void addTask(Task temp) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        DukeTaskList.add(temp);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"deleteTask\" is used to delete Tasks from the list of tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param value This is the index of the task to be deleted from the list of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public void deleteTask(int value) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        DukeTaskList.remove(value);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 41
    }
  },
  {
    "path": "src/main/java/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the ToDo Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * inherits from Task Class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * Has constructor and methods for the ToDo object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This constructor \"ToDo\" is used to construct the ToDo object when its created upon user input of \"todo xxx\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @param description This is a string of description of the task by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Todos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * This method \"toString\" is used to return the relevant attributes to be printed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     * @return String This returns the relevant attributes to be printed"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * This is the Ui Class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " * contains message to interact with the user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void DukeInitialize() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void ShowAdding(Task temp, TaskList list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Got it, I have added this task:\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(temp.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Now you have \" + list.getTask().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void ShowDelete(Task temp, TaskList list) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(temp);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Now you have \" + list.getTask().size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void ShowDone(int value, TaskList list) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"[\" + list.getTask().get(value - 1).getStatusIcon() + \"] \" + list.getTask().get(value - 1).description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void ShowFind (String temp, TaskList list) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        boolean flag \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println((\"Here are the matching tasks in your list:\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        for (Task i : list.getTask()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            if (i.description.contains(temp)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.print(index + \".\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(i.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                flag \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        if (!flag) throw new DukeException(\"OOPS!!! Cannot find any Task containing \" + temp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void TaskEmptyError() throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! The task cannot be is empty!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void ListEmptyError() throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! The list is empty!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void TodoEmptyError() throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void DeadlineEmptyError() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void EventEmptyError() throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void MeaningError() throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void IDoNotUnderStand() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void DateFormatError() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Please enter in the format d/M/yyyy/ HHmm\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    void DukeBye() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 85
    }
  }
]

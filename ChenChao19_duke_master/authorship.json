[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private static String pathName \u003d \"D:/Desktop/duke/src/main/\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private static List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        readingFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (input.length() \u003d\u003d 0 | input.startsWith(\" \"))"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The task cannot be is empty!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                if (input.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else if (input.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (list.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The list is empty!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                            System.out.println(i + 1 + \".\" + list.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        if (input.equals(\"todo\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        Task todo_temp \u003d new Todos(split[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        list.add(todo_temp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        addToFile(todo_temp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(\"Got it, I have added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(todo_temp.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        if (input.equals(\"event\"))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        String[] split \u003d input.split(\" \", 2); //remove event from the rest"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        String[] event_split \u003d split[1].split(\" /at \"); //remove /at from the rest"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        Task event_temp \u003d new Event(event_split[0], event_split[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        list.add(event_temp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        addToFile(event_temp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(\"Got it, I have added this task:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(event_temp.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (input.equals(\"deadline\"))"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (split[1].startsWith(\" \") || split[1].length() \u003d\u003d 0)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    String[] deadline_split \u003d split[1].split(\" /by \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(deadline_split[1], formatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    Task deadline_temp \u003d new Deadline(deadline_split[0], formatDateTime);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    list.add(deadline_temp);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    addToFile(deadline_temp);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(\"Got it, I have added this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(deadline_temp.toString());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    String[] split \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    int value \u003d Integer.parseInt(split[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    list.get(value - 1).Done();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    updateFile();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    System.out.println(\"[\" + list.get(value - 1).getStatusIcon() + \"] \" + list.get(value - 1).description);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(\"Please enter in the format d/M/yyyy/ HHmm\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private static void addToFile(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File saveFile \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile, true);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private static void updateFile() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File saveFile \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile, false);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            for(Task task : list) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                fileWriter.write(task.toString() + \" \\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    private static void readingFile(){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        File file \u003d new File(pathName + \"duke.txt\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        if(file.exists()) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                List\u003cString\u003e temp \u003d Files.lines(file.toPath()).collect(Collectors.toList());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                for(String string : temp) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    Task curr;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if (string.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Todos(string.substring(7));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } else if (string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        DateTimeFormatter temp_formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        LocalDateTime temp_LocalDateTime \u003d LocalDateTime.parse(string.substring(string.indexOf(\"(by: \") + 5, string.indexOf(\")\", string.length() - 2)), temp_formatter);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Deadline(string.substring(7, string.indexOf(\"(by: \") - 1), temp_LocalDateTime);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    } else { // contains \"[E]\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr \u003d new Event(string.substring(7, string.indexOf(\"(at: \") - 1), string.substring(string.indexOf(\"(at: \") + 5, string.length() - 1));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    if(string.contains(\"[✓]\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                        curr.Done();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                    list.add(curr);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 155,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 12
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public void Done() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 21
    }
  },
  {
    "path": "src/main/java/Todos.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public Todos(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChenChao19"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChenChao19": 10
    }
  }
]

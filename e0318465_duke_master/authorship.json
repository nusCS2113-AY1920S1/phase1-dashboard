[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "test {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Allows users to set Deadline for their tasks,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * input to be in the format: \u003ccode\u003e /by \u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * to represent the task and date respectively."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Date can also be formatted to a preferred style"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    //Save the format as a String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected String dateFormat;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    //Date format for output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd MMMMM yyyy h:mm a\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Creates a new task under deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param description explanation of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param date the date and time that the task is suppose to be completed by"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public Deadline(String description, Date date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        //Converts the date input to output in a certain style"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        dateFormat \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Overrides toString to print in a preferred format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the String description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dateFormat + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Returns Duke on the screen as a welcome page and promotes input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Run duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        //Date format which user needs to input as"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        tasks \u003d Storage.loadTask(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        //curList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        ui.dukeMsg();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        parser.scanInput();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        while(!parser.firstCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            switch (parser.firstCommand()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Lists all the task available"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    taskList.list();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Marks task as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (parser.secondCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.errorMsg(\"done\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    taskList.done(parser.secondCommand());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Adds a new task into list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (parser.secondCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.errorMsg(\"todo\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    taskList.todo(parser.secondCommand());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Adds a new deadline to list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (parser.secondCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.errorMsg(\"deadline\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (!parser.secondCommand().contains(\"/\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.slashErrorMsg();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        Date due \u003d simpleDateFormat.parse(parser.secondDay());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        Task deadlineDate \u003d new Deadline(parser.firstTaskBy(), due);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        tasks.add(deadlineDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        System.out.println(deadlineDate);   //Auto called Task toString (we override toString to give output we want)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        Storage.saveTask(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    } catch (ParseException except) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        System.out.println(\"☹ Deadline to be in this format: DD/MM/YYYY HHmm\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Adds a new event to list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (parser.secondCommand().equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.errorMsg(\"event\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    if (!parser.secondCommand().contains(\"/\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        ui.slashErrorMsg();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    Task event \u003d new Event(parser.firstEvent(), parser.time2());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \\n\" + event.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    Storage.saveTask(tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Deleted a task from list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    taskList.delete(parser.deleteTask());   //delete task according to number"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    Storage.saveTask(tasks);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                //Finds a keyword in the list"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    taskList.find(parser.secondCommand());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    ui.defaultErrorMsg();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            parser.scanInput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        ui.byeMsg();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 114,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Allows users to set Event for their schedule,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * input to be in the format: \u003ccode\u003e /at \u003c/code\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * to represent the event and time respectively."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Creates a new task under event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param description elaborate on the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param date day and time of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public Event(String description, String date) {   //eventBy[0], time[1]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Overrides toString to print in a preferred format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the String description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + date + \")\";   //[E]\u003ctask toString\u003e (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Captures the input by users and split it"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * according to the command, description and time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected Scanner scan \u003d new Scanner( System.in );"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Takes in user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the full input keyed in by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String scanInput(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return this.input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the user input to obtain the first word."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * First word may consist of deadline, event, list, etc."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the first word of the input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String firstCommand(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] command \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return command[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the user input to obtain everything else apart from the first word."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return description of input"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String secondCommand(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] command \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return command[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the description for tasks assigned to deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * The task assigned to deadline may be things like"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * \"return book\"."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the description for task assigned to deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String firstTaskBy(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] taskBy \u003d secondCommand().split(\"/by \", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return taskBy[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the description for tasks assigned to deadline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * The date and time assigned to deadline may look like,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * \"2/12/2019 1800\"."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the date and time for task assigned to deadline"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String secondTaskBy(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] taskBy \u003d secondCommand().split(\"/by\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return taskBy[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the date and time for tasks assigned to deadline."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Date will be in this format, \"2/12/2019\"."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the date for task assigned to deadline"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String firstDay(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] day \u003d secondTaskBy().split(\" \", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return day[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the date and time for tasks assigned to deadline."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Time will be in this format, \"1800\"."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the time for task assigned to deadline"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String secondDay(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] day \u003d secondTaskBy().split(\" \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return day[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the event to description and day. This returns the"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * description of the event, for example, \"project meeting\"."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the description of event"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String firstEvent(){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] eventBy \u003d secondCommand().split(\"/at\", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return eventBy[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the event to description and day. This returns the"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * day and time of the event, for example, \"Mon 2-4pm\"."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the day and time of event"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String secondEvent(){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] eventBy \u003d secondCommand().split(\"/at\", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return eventBy[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the day and time of event. This returns the"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * day of the event, for example, \"Mon\"."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the day of event"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String time1(){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] time \u003d secondEvent().split(\" \", 2);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return time[0];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Splits the day and time of event. This returns the"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * time of the event, for example, \"2-4pm\"."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the time of event"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String time2(){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String[] time \u003d secondEvent().split(\" \", 2);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return time[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Delete task according to number."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Converts string to integer"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the task number"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public int deleteTask(){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return Integer.parseInt(secondCommand());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 141
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Loads task list from ./dukeDate"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * If there are no files found, it creates a new file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the loaded taskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public static ArrayList\u003cTask\u003e loadTask(ArrayList\u003cTask\u003e log) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            FileInputStream fileIn \u003d new FileInputStream(\"./dukeData\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            ObjectInputStream objectIn \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            //Writes into data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            log \u003d (ArrayList\u003cTask\u003e) objectIn.readObject();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            objectIn.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            fileIn.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        //Creates a new file if there are none found"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        catch (FileNotFoundException f) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            File file \u003d new File(\"./dukeData\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        catch (IOException i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            System.out.println(\"IO Exception detected\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        catch (ClassNotFoundException c) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            System.out.println(\"Class Not Found\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            c.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return log;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Saves file into ./dukeData"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param taskList the list that is to be saved"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public static void saveTask(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(\"./dukeData\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            ObjectOutputStream objectOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            objectOut.writeObject(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            objectOut.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        catch (IOException i) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            System.out.println(\"IO Exception detected\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            i.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 58
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * The main class for the multiple subclasses."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Creates a task from input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param description saves the description into task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Gets the symbol which represents whether"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * a task is completed or not."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return a tick or cross"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Marks the item as done, giving it a tick"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * when getStatusIcon is called."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Overrides toString to print in a preferred format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the String description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 46
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Methods to implement functions like add, delete, find and list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    protected ArrayList\u003cTask\u003e doTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Gets the list from task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param curList task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e curList){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.doTask \u003d curList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Adds a task and prints the details."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param addTask task to be added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void add(Task addTask) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.doTask.add(addTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(addTask.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Now you have \" + doTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Deletes a task and prints the details.."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param deleteTask task to be deleted"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void delete(int deleteTask) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(doTask.get(deleteTask-1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        this.doTask.remove(deleteTask-1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Now you have \" + doTask.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Finds a keyword in task and prints the details."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param command keyword to be searched in taskList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void find(String command){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        for (Task curTask : doTask){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            if(curTask.description.contains(command))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                searchResult.add(curTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        for (Task search : searchResult) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            System.out.print(count + \".\" + search + \"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Prints the details."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        for (Task thisTask : doTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            System.out.println((i + 1) + \".\" + thisTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0318465"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Marks a task as done and prints the details."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param secondCommand the task number"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void done(String secondCommand) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        int choice \u003d Integer.parseInt(secondCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        doTask.get(choice - 1).markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(doTask.get(choice - 1).toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        Storage.saveTask(doTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Adds a new task to be done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param secondCommand the description of the task to be done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void todo(String secondCommand) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        Task todo \u003d new Todo(secondCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        add(todo);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        Storage.saveTask(doTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 96
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Creates a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Creates a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @param description task to be completed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public Todo(String description) {   //command[1]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Overrides toString to print in a preferred format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * @return the String description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        return \"[T]\" + super.toString();    //[T]\u003ctask toString\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Outputs the welcome message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void dukeMsg(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0318465"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Outputs the error message."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void errorMsg(String taskType){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of a \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Outputs the error message for missing \"/\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void slashErrorMsg(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description needs a \u0027/\u0027\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Outputs the error message for invalid user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void defaultErrorMsg(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     * Outputs the goodbye message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0318465"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void byeMsg(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 48
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0318465"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0318465"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0318465"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0318465"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0318465"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0318465"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0318465": 10
    }
  }
]

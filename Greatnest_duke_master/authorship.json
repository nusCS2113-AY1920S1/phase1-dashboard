[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "run {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src/main/java/Commands\u0027,\u0027src/main/java\u0027,\u0027src/main/java/Classes\u0027]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Greatnest": 8,
      "-": 13
    }
  },
  {
    "path": "src/main/java/Classes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateToString(by) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String dateToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 22
    }
  },
  {
    "path": "src/main/java/Classes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateToString(at) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String dateToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 23
    }
  },
  {
    "path": "src/main/java/Classes/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new AddToDoCommand(false, input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new AddEventCommand(false, input);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new AddDeadLineCommand(false, input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new MarkTaskAsDoneCommand(false, input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ListTaskCommand(false, \"\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }  else if (input.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new FindTaskCommand(false, input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.startsWith(\"delete \")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new DeleteTaskCommand(false, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return new ExitCommand(true, \"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 28
    }
  },
  {
    "path": "src/main/java/Classes/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.FileAlreadyExistsException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (Files.isRegularFile(Paths.get(this.filePath))) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                List\u003cString\u003e input \u003d Files.readAllLines(Paths.get(this.filePath));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                if (input.isEmpty()) throw new DukeException(\"\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                for (String value : input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    String[] splitInput \u003d value.split(\" \\\\| \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    if (value.charAt(0) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Event newEvent \u003d new Event(splitInput[2], parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            newEvent.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        taskList.add(newEvent);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else if (value.charAt(0) \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        ToDo newToDo \u003d new ToDo(splitInput[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            newToDo.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        taskList.add(newToDo);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    } else if (value.charAt(0) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(splitInput[2], parseDate(splitInput[3]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        if (splitInput[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                            newDeadline.markAsDone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                throw new DukeException(\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            createFileAndDirectory();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private void createFileAndDirectory() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Files.createDirectory(Paths.get(\"data\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Files.createFile(Paths.get(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch(FileAlreadyExistsException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                createFileAndDirectory();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDateTime parseDate(String dateToParse) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            System.out.println(\"Invalid date read from file.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private String unparseDate(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return dateTime.format(formatter);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void saveToFile() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String toSave \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        createFileAndDirectory();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getSize(); ++i) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Task value \u003d TaskList.getTask(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String taskType \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String className \u003d value.getClass().getSimpleName();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            int isDone \u003d 0;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String description \u003d value.description;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            String newDate \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (className \u003d\u003d \"ToDo\") {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                taskType \u003d \"T\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (className \u003d\u003d \"Deadline\") {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                taskType \u003d \"D\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                newDate \u003d unparseDate(((Deadline) value).by);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else if (className \u003d\u003d \"Event\") {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                taskType \u003d \"E\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                newDate \u003d unparseDate(((Event) value).at);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (value.isDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isDone \u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isDone \u003d 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (newDate !\u003d \"\") {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                toSave +\u003d taskType + \" | \" + Integer.toString(isDone) + \" | \" + description + \" | \" + newDate + \"\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                toSave +\u003d taskType + \" | \" + Integer.toString(isDone) + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Files.writeString(Paths.get(this.filePath), toSave);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 121
    }
  },
  {
    "path": "src/main/java/Classes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 29
    }
  },
  {
    "path": "src/main/java/Classes/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.taskList \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void addToArrayList(Task value) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.taskList.add(value);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Task deleteFromArrayList(int num) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return this.taskList.remove(num);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public static Task getTask(int num) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return taskList.get(num);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 30
    }
  },
  {
    "path": "src/main/java/Classes/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 11
    }
  },
  {
    "path": "src/main/java/Classes/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        return inputScanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showGoodByeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(\"☹ OOPS!!! File not found or is empty. Creating a new task list!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showError(String s) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(\"Error: \" + s);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void printException(DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void showMessage(String s) { System.out.println(s); }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void printList() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int taskListSize \u003d TaskList.getSize();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (TaskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            showMessage(\"You have no tasks in your list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int start \u003d 1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputString +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c taskListSize; ++i) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (start \u003d\u003d taskListSize) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputString +\u003d start + \".\" + TaskList.getTask(i).toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputString +\u003d start + \".\" + TaskList.getTask(i).toString() + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                start++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        showMessage(outputString);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 65
    }
  },
  {
    "path": "src/main/java/Commands/AddDeadLineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class AddDeadLineCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public AddDeadLineCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(9);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int dateIndex \u003d input.indexOf(\"/by \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please indicate the deadline after \\\"/by\\\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String by \u003d input.substring(dateIndex+4);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String task \u003d input.substring(0, dateIndex-1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDateTime byValue \u003d parseDate(by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (byValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Deadline toAdd \u003d new Deadline(task, byValue);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        taskList.addToArrayList(toAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveToFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDateTime parseDate(String dateToParse) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please format your date and time in this format \\\"20/12/2019 1859\\\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 43
    }
  },
  {
    "path": "src/main/java/Commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public AddEventCommand(Boolean isExit, String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (this.input.length() \u003c 7) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(6);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int dateIndex \u003d input.indexOf(\"/at \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (dateIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please indicate the event timing after \\\"/at\\\"\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String task \u003d input.substring(0, dateIndex-1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String at \u003d input.substring(dateIndex+4);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        LocalDateTime atValue \u003d parseDate(at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (atValue \u003d\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Event toAdd \u003d new Event(task, atValue);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        taskList.addToArrayList(toAdd);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveToFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private LocalDateTime parseDate(String dateToParse) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return LocalDateTime.parse(dateToParse, formatter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Please format your date and time in this format \\\"20/12/2019 1859\\\".\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Greatnest": 46
    }
  },
  {
    "path": "src/main/java/Commands/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class AddToDoCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public AddToDoCommand(Boolean isExit, String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ToDo toAdd \u003d new ToDo(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        taskList.addToArrayList(toAdd);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showMessage(\"Got it. I\u0027ve added this task: \\n  \" + toAdd.toString() + \"\\nNow you have \" + taskList.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveToFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 21
    }
  },
  {
    "path": "src/main/java/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 16
    }
  },
  {
    "path": "src/main/java/Commands/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class DeleteTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public DeleteTaskCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 8) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task to delete cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            taskNumber \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showError(\"Please enter a number.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (taskNumber \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"You have entered a number larger than the number of tasks.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Task toDelete \u003d taskList.deleteFromArrayList(taskNumber-1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showMessage(\"Noted. I\u0027ve removed this task: \\n  \" + toDelete.toString() + \"\\nNow you have \" + taskList.getSize() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveToFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 26
    }
  },
  {
    "path": "src/main/java/Commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ExitCommand extends  Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ExitCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 11
    }
  },
  {
    "path": "src/main/java/Commands/FindTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class FindTaskCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public FindTaskCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task to find cannot be empty.\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        input \u003d input.substring(5);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"You have no tasks in your list\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int start \u003d 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean exists \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        outputString +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); ++i) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            Task value \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            if (value.description.contains(input)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                outputString +\u003d start + \".\" + value.toString() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                start++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                exists \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (exists) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            outputString \u003d outputString.substring(0, outputString.length() - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showMessage(outputString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showMessage(\"There are no matching tasks in your list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 37
    }
  },
  {
    "path": "src/main/java/Commands/ListTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class ListTaskCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public ListTaskCommand(Boolean isExit, String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.printList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 11
    }
  },
  {
    "path": "src/main/java/Commands/MarkTaskAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class MarkTaskAsDoneCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public MarkTaskAsDoneCommand(Boolean isExit, String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task to be marked as done cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            taskNumber \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showError(\"Please enter a number.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (taskNumber \u003e taskList.getSize())  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"The task number is larger than the number of tasks in the list\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        Task item \u003d taskList.getTask(taskNumber-1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        if (item.getIsDone()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            throw new DukeException(\"Task is already done.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        item.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showMessage(\"Nice! I\u0027ve marked this task as done: \\n  \" + item.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage.saveToFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 33
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Greatnest"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 33,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Greatnest"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Greatnest": 5
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "run {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 20,
      "-": 15
    }
  },
  {
    "path": "src/main/java/ChangeDateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.Calendar;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class ChangeDateFormat {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of ChangeDateFormat"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param date the date/timing of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public ChangeDateFormat (String date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method changes the date format from eg 18/08/1997 1900 to the format in textfile of 18th August 1997 7pm."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param date date/time of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return the new date in the format of the textfile"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String NewFormat(String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        SimpleDateFormat sdf \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Date newDate \u003d new Date();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            newDate \u003d sdf.parse(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        //convert input string into the specific date format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        int hour \u003d Integer.parseInt(new SimpleDateFormat(\"h\").format(newDate));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        int min \u003d Integer.parseInt(new SimpleDateFormat(\"m\").format(newDate));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String period \u003d (new SimpleDateFormat(\"a\").format(newDate)).toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String formatTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        if (min \u003e 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            formatTime \u003d hour + \".\" + min + period;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            formatTime \u003d hour + period;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Calendar calendar \u003d Calendar.getInstance();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        calendar.setTime(newDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        int day \u003d calendar.get(Calendar.DATE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        //get the suffix for the date format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        if (!((day \u003e 10) \u0026\u0026 (day \u003c 19)))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            switch (day % 10) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                case 1:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027st\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                case 2:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027nd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                case 3:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027rd\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return new SimpleDateFormat(\"d\u0027th\u0027 \u0027of\u0027 MMMM yyyy\").format(newDate) + \", \" + formatTime;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 58
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method calls out the add and save class and print out the format when you input a ToDo command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage Call out the storage class so that can input into the TaskList class as a param."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param tasklist Call out the TaskList class to add \u0026 save the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void ToDoCommand (ArrayList\u003cTask\u003e arr, Ui ui, Storage storage, TaskList tasklist) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String agenda \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        for (int i \u003d 1; i \u003c ui.splitString.length; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            agenda +\u003d ui.splitString[i] + \" \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        ToDo todo \u003d new ToDo(agenda);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        tasklist.Add_Save(arr,todo,storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\t  \" + todo.getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method calls out the add and save class and print out the format when you input a Deadline command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param tasklist Call out the TaskList class to add \u0026 save the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void DeadlineCommand (ArrayList\u003cTask\u003e arr, Ui ui, Storage storage, TaskList tasklist, ChangeDateFormat cdf) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String agenda \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        for (int i \u003d 1; i \u003c ui.splitString.length; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            if (!ui.splitString[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                agenda +\u003d ui.splitString[i] + \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                while ((i + 1) \u003c ui.splitString.length) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    time +\u003d \" \" + ui.splitString[i + 1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    i +\u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(agenda, cdf.NewFormat(time));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        tasklist.Add_Save(arr,newDeadline,storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\t  \" + newDeadline.getDescription());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method calls out the add and save class and print out the format when you input a Event command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param tasklist Call out the TaskList class to add \u0026 save the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void EventCommand (ArrayList\u003cTask\u003e arr, Ui ui, Storage storage, TaskList tasklist, ChangeDateFormat cdf) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String agenda \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        for (int i \u003d 1; i \u003c ui.splitString.length; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            if (!ui.splitString[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                agenda +\u003d ui.splitString[i] + \" \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                while ((i + 1) \u003c ui.splitString.length) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    time +\u003d \" \" + ui.splitString[i + 1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    i +\u003d 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Event newEvent \u003d new Event(agenda, cdf.NewFormat(time));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        tasklist.Add_Save(arr,newEvent,storage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\t  \" + newEvent.getDescription());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 76
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of Deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param description describe the Deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param by the timing/date of Deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Intellij"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return the list format in Intellij"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"[D]\" + super.getDescription() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Textfile"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return list format in Textfile"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"D | \" + super.getStatusIcon2() + \" | \" + super.getOnlyDescription() + \"|\" + by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": " * Main class of Duke project"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        TaskList tasks  \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Ui ui\u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Parser parse \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        ChangeDateFormat cdf;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        ui.StartUp(); //welcome message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        storage.ReadFile(arr); //read the file load from the disk"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        ui.statement \u003d \" \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        while(!ui.statement.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            ui.Inputcommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            cdf \u003d new ChangeDateFormat(ui.statement);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            parse.Parse(arr, tasks, ui, storage, cdf, command);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 21,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of DukeException"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of Todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param description describe the Event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param at the timing/date of Event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Intellij"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return the list format in Intelli"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"[E]\" + super.getDescription() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Textfile"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return list format in Textfile"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"E | \" + super.getStatusIcon2() + \" | \" + super.getOnlyDescription() + \"|\" + at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 31
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This methods will decipher the command by the user and execute the necessary methods base on the command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param tasklist Calling the class TaskList to..."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui Caslling the class UI to ..."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage Calling the class Storage to..."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param cdf Calling the class ChangeDateFormat to change the date format to textfile"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param command Calling the class Command to ..."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void Parse (ArrayList\u003cTask\u003e arr,TaskList tasklist, Ui ui, Storage storage, ChangeDateFormat cdf, Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String agenda \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        if(ui.statement.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            ui.End();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            tasklist.List(arr);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            tasklist.Done(arr,ui,storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            tasklist.Delete(arr,ui,storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        //added find function"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            tasklist.Find(arr,ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if (ui.splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            command.ToDoCommand(arr,ui,storage,tasklist);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            command.DeadlineCommand(arr,ui,storage,tasklist,cdf);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        else if(ui.splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            command.EventCommand(arr,ui,storage,tasklist,cdf);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 43
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method writes the content into the Textfile(if not created, it will create a text file) and update it with the textfile"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * format by using the getFormat() function."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void SaveTxtFile(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        File file \u003d new File(\"D:\\\\duke\\\\MyDukeTask.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            PrintWriter output \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            for (Task x : arr) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                output.println(x.getFormat());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            System.out.print(\"ERROR: Not Available\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method will read and extract the task in the textfile and put into the array. Also, it will conver the format back"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * to the original Intellij list format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void ReadFile(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        BufferedReader br \u003d null;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            FileReader fr \u003d new FileReader(\"D:\\\\duke\\\\MyDukeTask.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            while((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                String[] splitter \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                for(int i \u003d 0; i \u003c splitter.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    splitter[i] \u003d splitter[i].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                if(splitter[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    Deadline newD \u003d new Deadline(splitter[2] + \" \", \" \" + splitter[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    if(splitter[1] \u003d\u003d \" 0\") {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newD.isDone \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    else if(splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newD.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    arr.add(newD);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                else if(splitter[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    Event newE \u003d new Event(splitter[2] + \" \", \" \" + splitter[3]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    if(splitter[1] \u003d\u003d \" 0\") {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newE.isDone \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    else if(splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newE.isDone \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    arr.add(newE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    ToDo newT \u003d new ToDo(splitter[2]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    if(splitter[1] \u003d\u003d \"0\") {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newT.isDone \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    else if(splitter[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        newT.isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    arr.add(newT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 80
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of Task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param var1 description of the Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public Task(String var1) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.description \u003d var1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * The method returns a tick icon if the boolean isDone is True and it returns a cross icon if isDone is False."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return a tick icon if the boolean isDone is True and it returns a cross icon if isDone is False."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * The method returns a \"1\" if the boolean isDone is True and it returns a \"0\" if isDone is False."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return a \"1\" if the boolean isDone is True and it returns a \"0\" if isDone is False."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getStatusIcon2() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Change the boolean express isDone to be true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void markasDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getOnlyDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"x\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 48
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   protected ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method print out the list (all the task in the list)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the taks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   public void List(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       for(int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           System.out.println(\"\\t\" + (i+1) + \".\"  + arr.get(i).getDescription());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method add and save the task to the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param task the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage to update the Duke textfile(save function)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   public void Add_Save(ArrayList\u003cTask\u003e arr, Task task, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        storage.SaveTxtFile(arr);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method removes the Task the from the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage to update the Duke textfile(save function)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   public void Delete(ArrayList\u003cTask\u003e arr ,Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       int to_delete \u003d Integer.parseInt(ui.splitString[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\t  \" + arr.get(to_delete).getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       arr.remove(to_delete);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\tNow you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       storage.SaveTxtFile(arr);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method mark the the particular task in the list as done(changing the boolean expression isDone to be true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param storage to update the Duke textfile(save function)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   public void Done(ArrayList\u003cTask\u003e arr ,Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       int num_to_tick \u003d Integer.parseInt(ui.splitString[1]) - 1; //convert the string to number"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       arr.get(num_to_tick).markasDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\t  \" + arr.get(num_to_tick).getDescription());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       storage.SaveTxtFile(arr);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method finds the keyword from the list and it shows you the tasks that contains the keyword."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param arr List of all the tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param ui get the splitString array that we did in InputCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   public void Find(ArrayList\u003cTask\u003e arr,Ui ui) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       String wordtofind \u003d \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       for(int i \u003d 1; i \u003c ui.splitString.length; i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           if(i \u003c ui.splitString.length - 1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "               wordtofind +\u003d ui.splitString[i] + \" \";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "               wordtofind +\u003d ui.splitString[i];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       ArrayList\u003cInteger\u003e contain_index \u003d new ArrayList\u003cInteger\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       for(int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           if(arr.get(i).getDescription().contains(wordtofind)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "               System.out.println(\"\\t\" + (i+1) + \".\" + arr.get(i).getDescription());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "           }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "       }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "   }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 80
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Constructor of ToDo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @param description describes the task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Intellij"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return the list format"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"[T]\" + super.getDescription();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Method for the list format in Textfile"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * @return list format in Textfile"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public String getFormat() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        return \"T | \" + super.getStatusIcon2() + \" | \" + super.getOnlyDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 28
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected String[] splitString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    protected String statement;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * Firstly, the method will firstly receive an input(statement). Secondly, the method will check if the input is an empty task or"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * an incorrect input. If it is, the method will throw a new exception which will print the message according to the error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void Inputcommand () {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            statement \u003d input.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            splitString \u003d statement.split(\" \");//split the string into individual words"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                if (statement.equals(\"todo\") || statement.equals(\"deadline\") || statement.equals(\"event\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    throw new DukeException(\"\\t☹ OOPS!!! The description of a \" + splitString[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                } else if (!statement.equals(\"list\") \u0026\u0026 !(splitString[0].equals(\"done\") \u0026\u0026 splitString.length !\u003d 1) \u0026\u0026 !(statement.equals(\"bye\")) \u0026\u0026"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                        !splitString[0].equals(\"todo\") \u0026\u0026 !splitString[0].equals(\"deadline\") \u0026\u0026 !splitString[0].equals(\"event\") \u0026\u0026 !splitString[0].equals(\"delete\") \u0026\u0026 !splitString[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    throw new DukeException(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method called when the user start up the program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void StartUp() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     * This method is called when the user types bye and it will end the program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    public void End() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 48
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    Deadline testD \u003d new Deadline(\"borrow books \", \"12/12/2019 1900\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testDeadlinegetD() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testD.getDescription(), \"[D][\\u2718] borrow books (by:12/12/2019 1900)\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testDeadlinegetF() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testD.getFormat(),\"D | 0 | borrow books |12/12/2019 1900\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    ToDo testT \u003d new ToDo(\"borrow books\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testToDogetD() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testT.getDescription(),\"[T][\\u2718] borrow books\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testToDogetF() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testT.getFormat(),\"T | 0 | borrow books\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    Event testE \u003d new Event(\"borrow books \", \"12/12/2019 1900\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testEventgetD() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testE.getDescription(), \"[E][\\u2718] borrow books (at:12/12/2019 1900)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    void testEventgetF(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "        assertEquals(testE.getFormat(),\"E | 0 | borrow books |12/12/2019 1900\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JasonLeeWeiHern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JasonLeeWeiHern": 34
    }
  }
]

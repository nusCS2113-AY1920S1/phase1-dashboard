[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Exceptions.DukeExceptions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import static main.java.Storage.Storage.save;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import static main.java.Storage.Storage.update;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    private static ArrayList\u003cTask\u003e texts \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        update(texts);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        String myString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        //as long as command is not bye"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        while (!myString.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            String[] splitter1 \u003d myString.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //commands have no description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                if (myString.equals(\"todo\") || myString.equals(\"event\") || myString.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    throw new DukeExceptions(\"â˜¹ OOPS!!! The description of a \" + myString + \" cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is delete"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(splitter1[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"\\t\" + texts.get(taskNumber-1).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    texts.remove(taskNumber-1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Now you have \" + texts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    save(texts);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (myString.equals(\"list\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    for (int i \u003d 0; i \u003c texts.size(); i++){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                        System.out.print(i + 1 + \". \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                        System.out.println(texts.get(i).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is find"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"find\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    int counter \u003d 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String findThis \u003d splitter1[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    for (int i\u003d0; i \u003c texts.size(); i++){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                        if(texts.get(i).contains(findThis)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                            counter++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                            System.out.println(counter + \". \" + texts.get(i).toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is done"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(splitter1[1]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    texts.get(taskNumber - 1).setDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"\\t\" + texts.get(taskNumber-1).toString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    save(texts);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is deadline"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String[] deadlineInputs \u003d myString.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(deadlineInputs));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    listInputs.remove(0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String description \u003d String.join(\" \", listInputs);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String[] dayInput \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(dayInput[1], formatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(\"1\", dayInput[0], formatDateTime.format(formatter));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"\\t\" + \"[D]\" + \"[âœ—] \" + dayInput[0] + \" (by: \" + dayInput[1] + \")\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    texts.add(newDeadline);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    save(texts);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Now you have \" + texts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is event"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String[] eventInputs \u003d myString.split(\" \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(eventInputs));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    listInputs.remove(0);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String description \u003d String.join(\" \", listInputs);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String[] dayInput \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HH:mm\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(dayInput[1], formatter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    Event newEvent \u003d new Event(\"1\", dayInput[0], formatDateTime.format(formatter));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"\\t\" + \"[E]\" + \"[âœ—] \" + dayInput[0] + \" (at: \" + dayInput[1] + \")\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    texts.add(newEvent);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    save(texts);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Now you have \" + texts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //command is todos"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else if (splitter1[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String[] todoInputs \u003d myString.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    List\u003cString\u003e listInputs \u003d new ArrayList\u003c\u003e(Arrays.asList(todoInputs));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    listInputs.remove(0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    String description \u003d String.join(\" \", listInputs);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    ToDos newToDos \u003d new ToDos(description);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"\\t\" + \"[T]\" + \"[âœ—] \"  + newToDos.getDescription());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    texts.add(newToDos);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    save(texts);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    System.out.println(\"Now you have \" + texts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                //random commands that isn\u0027t any of the above"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                    throw new DukeExceptions(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            } catch (DukeExceptions ex) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            //scans next user input"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            myString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        //command is bye"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "AmirAzhar": 146
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class DukeExceptions extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public DukeExceptions (String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 7
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import main.java.Types.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    private ArrayList\u003cTask\u003e saveText;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    public Storage(ArrayList\u003cTask\u003e txt) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//        this.saveText \u003d txt;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e arr) throws FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        File readThis \u003d new File(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\dukeData.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        PrintWriter output \u003d new PrintWriter(readThis);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        for (Task x : arr) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            output.println(x.getFormat());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        output.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public static void update(ArrayList\u003cTask\u003e texts) throws FileNotFoundException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        File readThis \u003d new File(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\dukeData.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        Scanner scannedFile \u003d new Scanner(readThis);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        while (scannedFile.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            String line \u003d scannedFile.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            String[] splitStr \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            if(splitStr[0].equals(\"T\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                texts.add(new ToDos(splitStr[1], splitStr[2]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            else if(splitStr[0].equals(\"E\"))"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                texts.add(new Event(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            else if(splitStr[0].equals(\"D\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                texts.add(new Deadline(splitStr[1], splitStr[2], splitStr[3]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "                texts.add(new Task(splitStr[1]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 49
    }
  },
  {
    "path": "src/main/java/Types/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public Deadline(String i, String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getFormat(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"D | \" + isDone + \" | \" + super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 26
    }
  },
  {
    "path": "src/main/java/Types/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public Event (String i, String description, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getFormat(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"E | \" + isDone + \" | \" + super.getDescription() + \" | \"  + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 26
    }
  },
  {
    "path": "src/main/java/Types/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getFormat(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"x\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public boolean contains(String string) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        if (this.description.contains(string))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 39
    }
  },
  {
    "path": "src/main/java/Types/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Types;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public ToDos(String i, String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        this.isDone \u003d i.equals(\"1\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    public String getFormat(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "        return \"T | \" + isDone + \" | \" + super.getDescription();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 23
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "package main.java.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AmirAzhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AmirAzhar": 4
    }
  }
]

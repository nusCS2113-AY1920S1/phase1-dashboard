[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    private static ArrayList\u003cTask\u003e texts \u003d new ArrayList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        String myString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        //as long as command is not bye"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        while(!myString.equals(\"bye\")){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            String[] splitter1 \u003d myString.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //commands have no description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                if (myString.equals(\"todo\") || myString.equals(\"event\") || myString.equals(\"deadline\")){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    throw new DukeExceptions(\"â˜¹ OOPS!!! The description of a \" + myString + \" cannot be empty.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //command is list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else if (myString.equals(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    readFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "//                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "//                    for (int i \u003d 0; i \u003c texts.size(); i++)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "//                        System.out.println((i + 1) + \". \" + texts.get(i).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //command is done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else if (splitter1[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(splitter1[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    texts.get(taskNumber - 1).setDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"[\" + texts.get(texts.size() - 1).getStatusIcon() + \"] \" + texts.get(texts.size() - 1).description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //command is deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else if (splitter1[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    String D \u003d myString.substring(9); // after 9 letters"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    String[] splitterD \u003d D.split(\"/by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(splitterD[1], formatter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    Task deadline \u003d new Deadline(splitterD[0], formatDateTime.format(formatter));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    texts.add(deadline);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    addTaskToFile(\"[D][âœ—] \" + splitterD[0] + \" (at: \" + formatDateTime.format(formatter) + \")\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    int l \u003d lineCounter();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + texts.get(texts.size() - 1).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Now you have \" + l + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //command is event"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else if (splitter1[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    String E \u003d myString.substring(6); // after 6 letters"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    String[] splitterE \u003d E.split(\"/at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(splitterE[1], formatter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    Task deadline \u003d new Deadline(splitterE[0], formatDateTime.format(formatter));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    Task event \u003d new Event(splitterE[0], formatDateTime.format(formatter));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    texts.add(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    addTaskToFile(\"[E][âœ—] \" + splitterE[0] + \" (at: \" + formatDateTime.format(formatter) + \")\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    int l \u003d lineCounter();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + texts.get(texts.size() - 1).toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Now you have \" + l + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //command is todos"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else if (splitter1[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    String tempT \u003d myString.substring(5);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    Task todo \u003d new ToDos(tempT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    texts.add(todo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    addTaskToFile(\"[T][âœ—] \" + tempT);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    int l \u003d lineCounter();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + texts.get(texts.size() - 1).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    System.out.println(\"Now you have \" + l + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                //random commands that isn\u0027t any of the above"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                    throw new DukeExceptions(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            catch (DukeExceptions | IOException ex){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            //scans next user input"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            myString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        //command is bye"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public static void readFile()throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        try (BufferedReader br1 \u003d new BufferedReader(new FileReader(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\main\\\\dukeData.txt\"))){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        int lines \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        while (br1.readLine() !\u003d null)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            lines++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        BufferedReader br2 \u003d new BufferedReader(new FileReader(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\main\\\\dukeData.txt\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            for (int i\u003d1; i \u003c\u003d lines; i++){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                line \u003d br2.readLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "                System.out.println(i + \". \" + line);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public static void addTaskToFile(String s) throws IOException{"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        try (FileWriter fWriter \u003d new FileWriter(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\main\\\\dukeData.txt\", true)){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            fWriter.write(s + \"\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public static int lineCounter() throws IOException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        FileReader fr \u003d new FileReader(\"C:\\\\Users\\\\itoot\\\\Desktop\\\\duke\\\\src\\\\main\\\\dukeData.txt\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        LineNumberReader lnr \u003d new LineNumberReader(fr);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        int linenumber \u003d 0;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        while (lnr.readLine() !\u003d null){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "            linenumber++;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        lnr.close();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return linenumber;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 130,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "public class DukeExceptions extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public DukeExceptions (String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 22
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Amir Azhar"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Amir Azhar": 11
    }
  }
]

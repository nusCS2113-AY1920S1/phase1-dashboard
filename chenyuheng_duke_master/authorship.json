[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 23,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    /***\u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * Main method of the entire project.\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        answer(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            String input \u003d in.next();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String output \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                for (int i \u003d 0;i \u003c taskList.size();i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    output +\u003d \"\\n\" + (i + 1) + \".\" + taskList.get(i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                answer(output);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                answer(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else if (input.equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String indexstr \u003d in.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    index \u003d Integer.parseInt(indexstr) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! The index of task is not in integer number format.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    taskList.get(index).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! The index of task is out of range.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                answer(\"Nice! I\u0027ve marked this task as done: \\n\" + taskList.get(index));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else if (input.equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                if (line.isBlank()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                taskList.add(new ToDo(line));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else if (input.equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                if (line.isBlank()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! The description of event cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String[] splites \u003d line.split(\" /at \",2);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    taskList.add(new Events(splites[0],splites[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! Please enter the right event time after \\\" /at \\\".\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else if (input.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                if (line.isBlank()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! The description of todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                String[] spllites \u003d line.split(\" /by \",2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    taskList.add(new Deadline(spllites[0], spllites[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    answer(\"☹ OOPS!!! Please enter the right deadline time after \\\" /by \\\".\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                answer(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            answer(\"Got it. I\u0027ve added this task: \\n\\t\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                    + taskList.get(taskList.size() - 1) + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    /***\u003cp\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * This is a method to print the message Duke said, automatically add"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * horizontal lines and indentations to the original message and print them."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * A sample output is:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     *     ____________________________________________________________"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     *      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     *      What can I do for you?"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     *     ____________________________________________________________\u003c/p\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * @param toPrint the message need to be printed"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public static void answer(String toPrint) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        String horizontalLine \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        toPrint \u003d \"\\t\" + toPrint;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        for (int i \u003d 0;i \u003c toPrint.length();i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            if (toPrint.charAt(i) \u003d\u003d \u0027\\n\u0027) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                toPrint \u003d toPrint.substring(0, i + 1) + \"\\t\" + toPrint.substring(i + 1, toPrint.length());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        System.out.println(toPrint);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 102,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Events.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        return (isDone ?  \"V\" : \"x\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 10
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    /***\u003cp\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * Main method of the test project.\u003c/p\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     * @param args command line arguments"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "        System.out.println(\"Test Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chenyuheng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chenyuheng": 14
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "// group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 4,
      "-": 13
    }
  },
  {
    "path": "src/main/java/DateAndTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class DateAndTime {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String Day;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String Month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String Year;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String Time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String startTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String endTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public DateAndTime(String dateAndTime, int eventType) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (eventType \u003d\u003d 0) { // deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (dateAndTimeChecker(dateAndTime, eventType)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String date \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String time \u003d dateAndTime.split(\" \")[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Day \u003d setDay(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Month \u003d setMonth(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Year \u003d setYear(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Time \u003d setTime(time);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } else { // event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (dateAndTimeChecker(dateAndTime, eventType)) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String date \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String startTime \u003d dateAndTime.split(\" \")[1].split(\"-\",2)[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String endTime \u003d dateAndTime.split(\" \")[1].split(\"-\",2)[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Day \u003d setDay(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Month \u003d setMonth(date);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Year \u003d setYear(date);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.startTime \u003d setTime(startTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.endTime \u003d setTime(endTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public DateAndTime(String dateAndTime, int eventType, int dummy) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.Day \u003d dateAndTime.split(\" \")[0];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.Month \u003d dateAndTime.split(\" \")[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.Year \u003d dateAndTime.split(\" \")[3].substring(0, dateAndTime.split(\" \")[3].length() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (eventType \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.Time \u003d dateAndTime.split(\" \")[4];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.startTime \u003d dateAndTime.split(\" \")[4].split(\"-\",2)[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                this.endTime \u003d dateAndTime.split(\" \")[4].split(\"-\",2)[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean dateAndTimeChecker(String dateAndTime, int eventType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (eventType \u003d\u003d 0) { // deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if ((dateAndTime.split(\" \")).length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String[] date \u003d (dateAndTime.split(\" \")[0]).split(\"/\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String time \u003d dateAndTime.split(\" \")[1];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (dateChecker(date) \u0026\u0026 timeChecker(time)) return true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } else { // event"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if ((dateAndTime.split(\" \")).length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String[] date \u003d (dateAndTime.split(\" \")[0]).split(\"/\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String startTime \u003d dateAndTime.split(\" \")[1].split(\"-\",2)[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String endTime \u003d dateAndTime.split(\" \")[1].split(\"-\",2)[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (dateChecker(date) \u0026\u0026 validTimesChecker(startTime,endTime)) return true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean dateChecker(String[] date) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (date.length \u003d\u003d 3 \u0026\u0026 Integer.parseInt(date[0]) \u003e\u003d 1 \u0026\u0026 Integer.parseInt(date[0]) \u003c\u003d 31"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 Integer.parseInt(date[1]) \u003e\u003d 1 \u0026\u0026 Integer.parseInt(date[1]) \u003c\u003d 12"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 Integer.parseInt(date[2]) \u003e\u003d 1"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 dayOfMonthChecker(Integer.parseInt(date[0]), Integer.parseInt(date[1]))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean timeChecker(String time) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (time.length() \u003d\u003d 4 \u0026\u0026 Integer.parseInt(time.substring(0, 2)) \u003e\u003d 0"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 Integer.parseInt(time.substring(0, 2)) \u003c 24 \u0026\u0026 Integer.parseInt(time.substring(2, 4)) \u003e\u003d 0"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 Integer.parseInt(time.substring(2, 4)) \u003c\u003d 59) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean validTimesChecker(String startTime, String endTime) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (timeChecker(startTime) \u0026\u0026 timeChecker(endTime)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                \u0026\u0026 Integer.parseInt(endTime)\u003e\u003dInteger.parseInt(startTime)) return true;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean dayOfMonthChecker(int day, int month) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        switch(month) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 1: case 3: case 5: case 7: case 8: case 10: case 12:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                return (day\u003e\u003d1 \u0026\u0026 day\u003c\u003d31);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                return (day\u003e\u003d1 \u0026\u0026 day\u003c\u003d28);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                return (day\u003e\u003d1 \u0026\u0026 day\u003c\u003d30);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getDateAndTime(int eventType) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (eventType \u003d\u003d 0) return this.Day+\" of \"+this.Month+\" \"+this.Year+\", \"+this.Time;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else return this.Day+\" of \"+this.Month+\" \"+this.Year+\", \"+this.startTime+\"-\"+this.endTime;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String setDay(String x) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        int count \u003d Integer.parseInt(x.split(\"/\")[0]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (count\u003e\u003d10\u0026\u0026count\u003c\u003d20) return count+\"th\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        switch(count%10) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 1: return count+\"st\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 2: return count+\"nd\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 3: return count+\"rd\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            default: return count+\"th\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String setMonth(String x) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        int count \u003d Integer.parseInt(x.split(\"/\")[1]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        switch(count) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 1: return \"January\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 2: return \"February\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 3: return \"March\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 4: return \"April\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 5: return \"May\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 6: return \"June\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 7: return \"July\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 8: return \"August\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 9: return \"September\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 10: return \"October\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            case 11: return \"November\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            default: return \"December\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String setYear(String x) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return x.split(\"/\")[2];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String setTime(String x) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        int hours \u003d Integer.parseInt(x.substring(0,2));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        int minutes \u003d Integer.parseInt(x.substring(2,4));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String AM_PM \u003d (hours\u003e\u003d12) ? \"pm\": \"am\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return ((hours \u003d\u003d 0) ? \"12\" : ((hours\u003e12) ? (hours-12) : hours))+"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                ((minutes \u003d\u003d 0) ? \"\" : (\":\"+x.substring(2,4)))+AM_PM;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 146
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected DateAndTime date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        DateAndTime tempDate \u003d new DateAndTime(date,0);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (tempDate.dateAndTimeChecker(date,0)) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.date \u003d tempDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            super.format \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Deadline(String description, boolean isDone, String date) { // when reading from file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.date \u003d new DateAndTime(date,0,0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"[D]\"+super.getItem()+\" (by: \"+date.getDateAndTime(0)+\")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private TaskList listOfTasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks \u003d storage.load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void runDuke() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ui.welcomeDuke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (ui.byeDuke(input)) break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                parser.parseInput(input, listOfTasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                ui.printDuke(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            storage.update(listOfTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        storage.update(listOfTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        new Duke(\"src/main/data/duke.txt\").runDuke();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 32,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 5
    }
  },
  {
    "path": "src/main/java/ErrorMessages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class ErrorMessages {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String notRecognized() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String taskDescriptionEmpty(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! The description of a \"+task+\" task cannot be empty.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String taskDateAndTimeEmpty(String task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! The date and time component of a \"+task+\" task cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String taskWrongFormat(String task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! The format of the \"+task+\" task is invalid.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String invalidIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! The list index of the task entered is invalid.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String invalidDateAndTime() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! The date and time entered is invalid.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String fileNotFound() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"☹ OOPS!!! There was an error in opening the contents of the file.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 29
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected DateAndTime date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        DateAndTime tempDate \u003d new DateAndTime(date,1);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (tempDate.dateAndTimeChecker(date,1)) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            this.date \u003d tempDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            super.format \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Event(String description, boolean isDone, String date) { // when reading from file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.date \u003d new DateAndTime(date, 1,0);;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"[E]\"+super.getItem()+\" (at: \"+date.getDateAndTime(1)+\")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private static ErrorMessages errorMessages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        errorMessages \u003d new ErrorMessages();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void parseInput(String input, TaskList listOfTasks) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (input.length() \u003d\u003d 4 \u0026\u0026 input.equals(\"list\")) listOfTasks.printList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"done \")) listOfTasks.markDone(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 7 \u0026\u0026 input.substring(0, 7).equals(\"delete \")) listOfTasks.markDelete(input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"todo \")) listOfTasks.markToDo(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 9 \u0026\u0026 input.substring(0, 9).equals(\"deadline \")) listOfTasks.markDeadline(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"event \")) listOfTasks.markEvent(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"find \")) listOfTasks.printMatchingTasks(input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        else ui.printDuke(errorMessages.notRecognized());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 20
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected ErrorMessages errorMessages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        errorMessages \u003d new ErrorMessages();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String[] line \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                boolean status \u003d (Integer.parseInt(line[1])\u003d\u003d1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (line[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    taskList.markToDo(line[2],status);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                else if (line[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    taskList.markDeadline(line[2],status,line[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                else if (line[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    taskList.markEvent(line[2],status,line[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            errorMessages.fileNotFound();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void update(TaskList taskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            PrintWriter writer \u003d new PrintWriter(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            writer.print(taskList.writeListToFile());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            errorMessages.fileNotFound();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    protected boolean format;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.format \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        this.format \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 25
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private final String SPACE \u003d \"\\t    \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private ErrorMessages errorMessages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        errorMessages \u003d new ErrorMessages();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user input \"done ...\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markDone(String input) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String[] newInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if(newInput.length \u003d\u003d 1) throw new DukeException(errorMessages.taskDescriptionEmpty(\"done\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int i \u003d Integer.parseInt(newInput[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (i \u003c 0 || i \u003e listOfTasks.size()) throw new DukeException(errorMessages.invalidIndex());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            listOfTasks.get(i - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            ui.printDuke(\"Nice! I\u0027ve marked this task as done:\\n\" + SPACE + listOfTasks.get(i - 1).getItem());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            throw new DukeException(errorMessages.taskWrongFormat(\"done\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user input \"delete ...\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markDelete(String input) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String[] newInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if(newInput.length \u003d\u003d 1) throw new DukeException(errorMessages.taskDescriptionEmpty(\"delete\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int i \u003d Integer.parseInt(newInput[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (i \u003c 0 || i \u003e listOfTasks.size()) throw new DukeException(errorMessages.invalidIndex());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String numberOfTasks \u003d ((listOfTasks.size() - 1) !\u003d 1) ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int count \u003d listOfTasks.size() - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            ui.printDuke(\"Noted. I\u0027ve removed this task:\\n\" + SPACE + listOfTasks.get(i - 1).getItem()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    + \"\\n\\t Now you have \" + count + \" \" + numberOfTasks + \" in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            listOfTasks.remove(i - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            throw new DukeException(errorMessages.taskWrongFormat(\"delete\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user entry \"todo ...\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markToDo(String input) throws DukeException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String newInput \u003d input.substring(5);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (newInput.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"todo\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task x \u003d new ToDo(newInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks.add(x);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        acknowledgment();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // reading from database"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task x \u003d new ToDo(description,isDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks.add(x);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user entry \"deadline ...\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markDeadline(String input) throws DukeException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String newInput \u003d input.substring(9);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (newInput.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"deadline\"));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int lastOccurrence \u003d newInput.lastIndexOf(\" /by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String description \u003d newInput.substring(0,lastOccurrence);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String dateAndTime \u003d newInput.substring(lastOccurrence+5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (description.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"deadline\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (dateAndTime.trim().isEmpty()) throw new DukeException(errorMessages.taskDateAndTimeEmpty(\"deadline\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Task x \u003d new Deadline(description, dateAndTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (!x.format) throw new DukeException(errorMessages.invalidDateAndTime());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                listOfTasks.add(x);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                acknowledgment();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            throw new DukeException(errorMessages.taskWrongFormat(\"deadline\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // reading from database"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markDeadline(String description, boolean isDone, String date) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task x \u003d new Deadline(description,isDone,date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks.add(x);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user entry \"event ...\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markEvent(String input) throws DukeException{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String newInput \u003d input.substring(6);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (newInput.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"event\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int lastOccurrence \u003d newInput.lastIndexOf(\" /at \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String description \u003d newInput.substring(0,lastOccurrence);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String dateAndTime \u003d newInput.substring(lastOccurrence+5);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (description.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"event\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (dateAndTime.trim().isEmpty()) throw new DukeException(errorMessages.taskDateAndTimeEmpty(\"event\"));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            Task x \u003d new Event(description, dateAndTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (!x.format) throw new DukeException(errorMessages.invalidDateAndTime());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                listOfTasks.add(x);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                acknowledgment();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            throw new DukeException(errorMessages.taskWrongFormat(\"event\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // reading from database"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void markEvent(String description, boolean isDone, String date) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        Task x \u003d new Event(description,isDone,date);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        listOfTasks.add(x);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user input \"find ...\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void printMatchingTasks(String input) throws DukeException{"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String newInput \u003d input.substring(5);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (newInput.trim().isEmpty()) throw new DukeException(errorMessages.taskDescriptionEmpty(\"find\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String[] descriptions \u003d listOfTasks.get(i).description.split(\" \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            for (int j \u003d 0; j \u003c descriptions.length; j++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                if (newInput.equals(descriptions[j])) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                    matchingTasks.add(listOfTasks.get(i)); break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (matchingTasks.isEmpty()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            ui.printDuke(\"There are no matching tasks in the list.\"); return;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(\"\\t Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        for (int i \u003d 0 ; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int count \u003d i+1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            System.out.println(\"\\t \"+count+\". \"+matchingTasks.get(i).getItem());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // for user input \"list\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (listOfTasks.isEmpty()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            ui.printDuke(\"There are no tasks in the list.\"); return;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        for (int i \u003d 0 ; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            int count \u003d i+1;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            System.out.println(\"\\t \"+count+\". \"+listOfTasks.get(i).getItem());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(ui.HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // to update database with new list"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public StringBuilder writeListToFile() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        for (int i \u003d 0 ; i \u003c listOfTasks.size(); i++) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            String task \u003d listOfTasks.get(i).getItem().substring(1,2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            output.append(task+\" | \"+((listOfTasks.get(i).isDone) ? \"1\":\"0\")+\" | \"+listOfTasks.get(i).description);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            if (task.equals(\"D\") || task.equals(\"E\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                String[] temp \u003d listOfTasks.get(i).getItem().split(\": \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                output.append(\" | \"+temp[1].substring(0,temp[1].length()-1));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            output.append(\"\\n\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    // acknowledgement upon adding task to the list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    private void acknowledgment() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String numberOfTasks \u003d (listOfTasks.size()!\u003d1) ? \"tasks\":\"task\";"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        ui.printDuke(\"Got it. I\u0027ve added this task:\\n\" + SPACE + listOfTasks.get(listOfTasks.size()-1).getItem()"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                + \"\\n\\t Now you have \" + listOfTasks.size() + \" \" + numberOfTasks + \" in the list.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 175
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String getItem() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return \"[T]\"+super.getItem();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 14
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public String HORIZONTAL_LINE \u003d \"\\t___________________________________________________________________________\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void welcomeDuke() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String tab \u003d \"\\t \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        String logo \u003d tab+\" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                +tab+ \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                +tab+ \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                +tab+ \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "                +tab+\"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        printDuke(\"Hello! I\u0027m Duke\\n\\t What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public void printDuke(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(\"\\t \"+input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    public boolean byeDuke(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        if (input.length()\u003d\u003d3 \u0026\u0026 input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            printDuke(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iamabhishek98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iamabhishek98": 28
    }
  }
]

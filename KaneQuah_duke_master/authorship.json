[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public AddCommand(String x){};"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 3
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    private String com;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public abstract Command execute();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    protected String type \u003d \"D\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Deadline(String description) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        String[] split \u003d description.split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        if(split.length \u003c 2)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            throw new DukeException(\"Please use /by to indicate date\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        else if(split.length \u003e 2)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            throw new DukeException(\"Too many /by in String\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.description \u003d split[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.dueDate \u003d split[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    this.toList() +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    \"\\nNow you have \" + this.numTasksCreated() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Deadline(String bool, String description, String dueDate)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.isDone \u003d (1 \u003d\u003d Integer.parseInt(bool));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String toList(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return \"[D][\" + this.getStatusIcon() + \"] \" + this.getDescription() +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                \" (by: \" + this.getDueDate() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getType(){ return \"D\";}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 40
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        String command \u003d new String();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        URL path \u003d Duke.class.getResource(\"list.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        File f \u003d new File(path.getFile());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        try(BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(f))) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            while(line !\u003d null) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                String split[] \u003d line.split(\"\\\\s*\\\\|\\\\s*\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                if(split[0].equals(\"T\"))"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    list.add(new Todo(split[1], split[2]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                else if(split[0].equals(\"D\"))"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    list.add(new Deadline(split[1], split[2], split[3]));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                else if(split[0].equals(\"E\"))"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    list.add(new Event(split[1], split[2], split[3]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                else"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    System.out.println(\"incorect file format parsed\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            System.out.println(\"file not found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        while(sc.hasNextLine() \u0026\u0026 !command.equalsIgnoreCase(\"bye\"))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            command \u003d sc.next();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            boolean inputExists \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            input \u003d input.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                if(input.equals(\"\") \u0026\u0026 command.matches(\"todo|deadline|event|done\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                inputExists \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                if(input.equals(\"\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    if(list.size()\u003d\u003d 0)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(\"Whoops, there doesn\u0027t seem to be anything here at the moment\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        int counter \u003d 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        for (Task task : list) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            System.out.println(counter++ + \". \" + task.toList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    throw new DukeException(\"List should not have any other arguments (whitespace acceptable\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            catch(DukeException e)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    } else"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        throw new DukeException(\"Bye should not have any other arguments (whitespace acceptable\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }catch(DukeException e){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            else if(inputExists) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    list.add(new Todo(input));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    Deadline temp \u003d null;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        temp \u003d new Deadline(input);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    catch(DukeException e){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    finally {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        if(temp !\u003d null)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            list.add(temp);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    Event temp \u003d null;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        temp \u003d new Event(input);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    catch(DukeException e){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    finally {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        if(temp !\u003d null)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            list.add(temp);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    try{"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        int request \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        request -\u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        if(request \u003c 0 || request \u003e\u003d list.size())"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! This index is not within the list\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            list.get(request).markDone();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                                    \"  \" + list.get(request).toList());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    catch(DukeException e)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    catch(NumberFormatException e)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(\"That is NOT a valid integer\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        System.out.println(e.getLocalizedMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        try(BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(f))) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            for(Task task:list) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                String fileContent \u003d task.getType() + \" | \" +"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                        (task.checkCompletion() ? \"1\": \"0\") + \" | \"+ task.getDescription();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                if(task.getType().matches(\"D|E\"))"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    fileContent +\u003d \" | \" + task.getDueDate();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                bufferedWriter.write(fileContent);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            // exception handling"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            System.out.println(\"Write Failed\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 158,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public DukeException(String ErrorMessage)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        // Call constructor of parent Exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        super(ErrorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    private String type \u003d \"E\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Event(String description) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        String[] split \u003d description.split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        if (split.length \u003c 2) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            throw new DukeException(\"Please use /at to indicate date\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        else if (split.length \u003e 2) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            throw new DukeException(\"Too many /at in String\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.description \u003d split[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.dueDate \u003d split[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    this.toList() +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                    \"\\nNow you have \" + this.numTasksCreated() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Event(String bool, String description, String dueDate)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.isDone \u003d (1 \u003d\u003d Integer.parseInt(bool));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String toList(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return \"[E][\" + this.getStatusIcon() + \"] \" + this.getDescription() +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                \" (by: \" + this.getDueDate() + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getType(){ return \"E\";}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 42
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public static long counter \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        counter++;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public long numTasksCreated(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return counter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public boolean checkCompletion() {return this.isDone;}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getType(){ return \"G\";}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getDueDate() { return this.dueDate; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String toList(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return \"[?][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 38
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    protected String type \u003d \"T\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "                this.toList() +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        \"\\nNow you have \"+ this.numTasksCreated() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public Todo(String bool, String description){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        this.isDone \u003d (1 \u003d\u003d Integer.parseInt(bool));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String toList(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "    public String getType(){ return \"T\";}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KaneQuah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KaneQuah": 19
    }
  }
]

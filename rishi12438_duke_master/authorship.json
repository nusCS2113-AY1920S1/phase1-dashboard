[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "checkstyle{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "   toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 12,
      "-": 18
    }
  },
  {
    "path": "src/main/java/DatePattern.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "class DatePattern {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    enum TimePatternType { "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        DAY_OF_WEEK,DATE_TIME,DATE, TIME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    } "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private String pattern; "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private ParseTime.TimePatternType type; "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    DatePattern(String Pattern, ParseTime.TimePatternType type_date )  { "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        pattern \u003d Pattern; "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        type  \u003d type_date; "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public ParseTime.TimePatternType get_type(){ "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return type; "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_pattern(){ "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return pattern; "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 17
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected LocalDateTime date_1; "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected boolean date \u003d false; "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Deadline(boolean to_add_status,String description, LocalDateTime by,String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(to_add_status,description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        date_1 \u003d by; "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        date \u003d true; "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.by \u003d command.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Deadline(boolean to_add_status,String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(to_add_status,description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_type() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(date \u003d\u003d false){ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + date_1 + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //return \"[D]\" + super.toString().trim() + \" (by: \" + by.trim() + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }   "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_attrib(){ "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"D\" + super.get_attrib()+\"^\"+by.trim(); "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 37
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public static void print_list(List\u003cTask\u003e list1){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        for (Task temp : list1) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.print(i+1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.print(\".\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(temp);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            i +\u003d1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        ui \u003d new Ui();        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(storage.load().get(0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"error for loading file\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch (FileNotFoundException e){ "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"error for loading file\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch(Exception e){ "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            tasks \u003d new TaskList(); "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void run(){ "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //List\u003cTask\u003e l1 \u003d new ArrayList\u003cTask\u003e(); "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try{ "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Parser analyser \u003d new Parser(tasks,storage); "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            StringParser parse_string \u003d new StringParser(analyser,storage,tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            while(true){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                if(input.hasNextLine()){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                   "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    String end \u003d  \"bye\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    if(end.equals(command)){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                            storage.serial(tasks.get_list());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        catch (Exception e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                            System.out.println(e);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        analyser.bye();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        input.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        return; "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    else{ "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        //System.out.println(\"hello1221\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        parse_string.get_info(command);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(\"hdahhda\"); "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        storage.serial(tasks.get_list());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    input.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch(Exception e){ "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"error\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 112,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 6
    }
  },
  {
    "path": "src/main/java/DukeTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class DukeTimeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public DukeTimeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 5
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected String end;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected LocalDateTime end_date; "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected boolean date \u003d false; "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected String start; "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    protected LocalDateTime start_date; "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_type() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Events(boolean to_add_status,String description, LocalDateTime start_d,LocalDateTime end_d, String command_start, String command_end) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(to_add_status,description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        end_date \u003d end_d; "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        start_date \u003d start_d; "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        date \u003d true; "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.end \u003d command_end.trim();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.start \u003d command_start.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Events(boolean to_add_status,String description, String start, String end) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(to_add_status,description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        this.start \u003d start; "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(date \u003d\u003d false){ "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + start.trim() + \" to \" + end.trim() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + start_date + \" to \"+end_date+ \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_attrib(){ "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(super.get_attrib());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"E\" + super.get_attrib()+\"^\"+start.trim()+\"^\"+end.trim();   "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 43
    }
  },
  {
    "path": "src/main/java/ParseTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.temporal.TemporalAccessor;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "class ParseTime {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    enum TimePatternType { "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        DAY_OF_WEEK,DATE_TIME,DATE, TIME"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    } "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    LocalDateTime parseStringToDate(String line) throws DukeTimeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        Task[] j \u003d {new Task(false, \"hello\")};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //String[] patterns \u003d { new DatePattern(\"[\u0027next \u0027][\u0027this \u0027]E\",TimePatternType.DAY_OF_WEEK ), \"[\u0027this \u0027][\u0027next \u0027]EEEE\", \"dd/MM/yyyy HHmm\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //                    \"dd/MM/yy HHmm\",\"d/MM/yyyy HHmm\", \"HHmm\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //                    \"dd/MM/yy\", \"yyyy-MM-dd\u0027T\u0027HH:mm[:ss.n]\"};"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        DatePattern[] patterns \u003d { new DatePattern(\"[\u0027next \u0027][\u0027this \u0027]E\",TimePatternType.DAY_OF_WEEK ), new DatePattern(\"[\u0027this \u0027][\u0027next \u0027]EEEE\",TimePatternType.DAY_OF_WEEK ),new DatePattern(\"dd/MM/yyyy HHmm\",TimePatternType.DATE_TIME) ,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        new DatePattern(\"dd/MM/yy HHmm\",TimePatternType.DATE_TIME ),new DatePattern(\"d/MM/yyyy HHmm\",TimePatternType.DATE_TIME ),new DatePattern( \"HHmm\",TimePatternType.TIME ),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        new DatePattern(\"dd/MM/yy\",TimePatternType.DATE ), new DatePattern(\"yyyy-MM-dd\u0027T\u0027HH:mm[:ss.n]\",TimePatternType.DATE_TIME )};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        /*TimePatternType[] types \u003d {TimePatternType.DAY_OF_WEEK, TimePatternType.DAY_OF_WEEK,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            TimePatternType.DATE_TIME, TimePatternType.DATE_TIME, TimePatternType.DATE_TIME, TimePatternType.TIME, TimePatternType.DATE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            TimePatternType.DATE_TIME};*/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        for (int i \u003d 0; i \u003c patterns.length;) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                TemporalAccessor accessor \u003d DateTimeFormatter.ofPattern(patterns[i].get_pattern()).parse(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                if(patterns[i].get_type()\u003d\u003d  TimePatternType.DAY_OF_WEEK){ "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    LocalDateTime localDateTime \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    return localDateTime.with(TemporalAdjusters.nextOrSame(DayOfWeek.from(accessor)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else if(patterns[i].get_type() \u003d\u003d TimePatternType.DATE_TIME){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    return LocalDateTime.from(accessor);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else if(patterns[i].get_type()\u003d\u003dTimePatternType.TIME){ "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    LocalDate localDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    return localDate.atTime(LocalTime.from(accessor));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else if(patterns[i].get_type() \u003d\u003d TimePatternType.DATE){ "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    LocalTime localTime \u003d LocalTime.now();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    return localTime.atDate(LocalDate.from(accessor));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                i+\u003d1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        throw new DukeTimeException(\"invalid format!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 50
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Parser  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    //private ArrayList\u003cTask\u003e l1;  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private ArrayList\u003cTask\u003e temp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private TaskList task_1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private Storage writer; "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String delete(int index) throws DukeException, Exception{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d task_1.get_size()){ "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Task deleted \u003d task_1.get_index(index-1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_1.delete(index); "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String message \u003d  \"Noted. I\u0027ve removed this task: \\n  \"+ deleted +\"\\n\"+get_end_message(task_1.get_size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                   "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            serial();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(\"Please give a valid task index to delete!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Parser(TaskList t1,Storage writer1) throws FileNotFoundException,IOException,DukeException{"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        task_1 \u003d t1; "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        writer \u003d writer1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //deserial();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"jjdaj\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public static String get_end_message(Integer num){ "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String task_num;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(num\u003d\u003d1){ "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_num \u003d \"task\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_num \u003d \"tasks\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"Now you have \" + Integer.toString(num)+ \" \" + task_num+ \" in the list.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void print_list(){ "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        task_1.print_list();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String find(String keyword){ "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "       return task_1.find(keyword);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void bye(){ "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void done(int index) throws DukeException{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(index \u003c\u003d 0 || index \u003e task_1.get_size()){ "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String message \u003d \"☹ OOPS!!! The index doesnt exists! Please check again!:(\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"  [✓] \"+task_1.get_index(index-1).get_name());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_1.change_status(index-1,true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }   "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public static String get_end_message(int num){ "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String task_num;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(num\u003d\u003d1){ "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_num \u003d \"task\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_num \u003d \"tasks\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"Now you have \" + Integer.toString(num)+ \" \" + task_num+ \" in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void create_todo(String command) throws DukeException{ "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String[] command_list \u003d command.split(\" \",2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"inside create todo\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(command.split(\" \",2).length\u003e\u003d 2 \u0026\u0026 !(command_list[1].trim().equals(\"\")) ){ "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            command \u003d command.split(\" \",2)[1];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Task c1 \u003d new Todo(false,command);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_1.add_items(c1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(\"inside create todo after splitting\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\"+\"     \"+c1.toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(get_end_message(task_1.get_size()));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String message \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(message); "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void create_events(String work) throws DukeException{ "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String[] tasks \u003d work.split(\"\\\\/at\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(tasks.length \u003e\u003d2 \u0026\u0026 !(tasks[1].trim().equals(\"\")) ){ "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String task_to_be_done \u003d tasks[0];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String deadline_time \u003d tasks[1];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Task c1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            try{ "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //LocalDateTime date_type \u003d new ParseTime().parseStringToDate(deadline_time.trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(\"Before : \" + date_type);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                String [] timing_list\u003d deadline_time.split(\"-\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                if(timing_list.length \u003e\u003d 2 \u0026\u0026 !(timing_list[1].trim().equals(\"\"))){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(Arrays.toString(timing_list)); "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                   // System.out.println(Arrays.toString(timing_list)); "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    String[] string_list \u003d {task_to_be_done,task_to_be_done,deadline_time};"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    c1 \u003d writer.get_first_e(string_list, false);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    task_1.add_items(c1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(c1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else{ "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    throw new DukeException(\"Please enter the start and end time\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            catch (DukeTimeException e){ "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(e.getMessage()); "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "               throw e; "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //LocalDateTime dt \u003d LocalDateTime.parse(deadline_time.trim(),formatter);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(\"Before : \" + dt);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "           "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\"+\"     \"+c1.toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(get_end_message(task_1.get_size()));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String message \u003d \"☹ OOPS!!! The description of a events should have a time! \";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(message); "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void create_deadline(String work) throws DukeException{ "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String[] tasks \u003d work.split(\"\\\\/by\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(Arrays.toString(tasks)+tasks[1].trim());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(tasks.length\u003e\u003d 2 \u0026\u0026 !(tasks[1].trim().equals(\"\"))){ "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(\"hello1\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String task_to_be_done \u003d tasks[0];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String deadline_time \u003d tasks[1];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //Task c1 \u003d new Deadline(false,task_to_be_done,deadline_time);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            Task c1;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            try{ "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                LocalDateTime date_type \u003d new ParseTime().parseStringToDate(deadline_time.trim());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(\"Before : \" + date_type);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                c1 \u003d new Deadline(false,task_to_be_done,date_type,deadline_time.trim());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            catch (DukeTimeException e){ "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                c1 \u003d new Deadline(false,task_to_be_done,deadline_time);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            task_1.add_items(c1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\"+\"     \"+c1.toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(get_end_message(task_1.get_size()));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String message \u003d \"☹ OOPS!!! The description of a deadline should have a deadline timing! \";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(message); "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "       "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void serial(){ "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try{ "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            writer.serial(task_1.get_list());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch(Exception e){ "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 173
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private String file_path; "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private ArrayList\u003cTask\u003e l1 \u003d new ArrayList\u003cTask\u003e();  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public  Task get_first_e(String[] string_list,boolean t) throws DukeException{ "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        Task c1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"help me\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"here \"+Arrays.toString(string_list));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try{ "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String[] timing \u003d string_list[2].split(\"-\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            if(timing.length\u003e\u003d 2 \u0026\u0026 !(timing[1].trim().equals(\"\")) ){ "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(Arrays.toString(timing)); "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                LocalDateTime start_date \u003d new ParseTime().parseStringToDate(timing[0].trim());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                LocalDateTime end_date \u003d  new ParseTime().parseStringToDate(timing[1].trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(\"Before : \" + date_type);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                c1 \u003d new Events(t,string_list[1],start_date,end_date,timing[0],timing[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else{ "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                throw new DukeException(\"Please give a starting and ending time!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }       "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch (DukeTimeException e){ "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String[] timing \u003d string_list[2].split(\"-\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            if(timing.length\u003e\u003d 2 \u0026\u0026 !(timing[1].trim().equals(\"\")) ){ "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                c1 \u003d new Events(t,string_list[1],timing[0],timing[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else{ "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                throw new DukeException(\"Please give a starting and ending time!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return c1; "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void deserial() throws  FileNotFoundException,IOException,DukeException{ "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try{ "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            FileInputStream fstream \u003d new FileInputStream(file_path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new InputStreamReader(fstream));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String strLine;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            while ((strLine \u003d br.readLine()) !\u003d null)   {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(strLine);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                String[] string_list \u003d strLine.split(\"\\\\^\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(Arrays.toString(string_list)); "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                if(string_list[0].equals(\"T\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    boolean t; "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    if(string_list[1].equals(\"1\")){ "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t\u003d true; "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    } "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    else{ "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(\"hello\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    Task temp \u003d new Todo(t,string_list[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    l1.add(temp); "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else if(string_list[0].equals(\"E\")){ "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    boolean t; "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    if(string_list[1].equals(\"1\")){ "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t\u003d true; "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    } "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    else{ "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t \u003d false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    Task c1; "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    try{ "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        String[] name_list \u003d {string_list[1],string_list[2],string_list[3]+\"-\"+string_list[4]};"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        l1.add(get_first_e(name_list,t));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (DukeException e) { "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        throw e; "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //Task temp \u003d new Events(t,string_list[2],string_list[3]); "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //l1.add(c1); "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                else if(string_list[0].equals(\"D\")){ "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    boolean t; "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    if(string_list[1].equals(\"1\")){ "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t\u003d true; "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    } "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    else{ "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        t \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    Task c1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    try{ "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        LocalDateTime date_type \u003d new ParseTime().parseStringToDate(string_list[3].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        //System.out.println(\"Before : \" + date_type);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        c1 \u003d new Deadline(t,string_list[2],date_type,string_list[3]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    catch (DukeTimeException e){ "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                        c1 \u003d new Deadline(t,string_list[2],string_list[3]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //Task temp \u003d new Events(t,string_list[2],string_list[3]); "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    l1.add(c1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            fstream.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch (FileNotFoundException e){ "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(\"no file found\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    } "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Storage(String file_path_1)  {   "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            file_path \u003d file_path_1; "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException,IOException,DukeException{ "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        deserial();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(file_path);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(l1.get(0));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return l1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void serial(ArrayList\u003cTask\u003e l1) throws Exception{ "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        try{ "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            PrintWriter out \u003d new PrintWriter(\"tasks.txt\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String serialized \u003d \"\"; "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            for (Task temp : l1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(\"PRINTING \" );"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                //System.out.println(temp.get_attrib());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                serialized +\u003d temp.get_attrib() +\"\\n\"; "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(serialized);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            out.println(serialized);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            out.close ();    "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        catch (Exception e){ "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw e; "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rishi12438"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "rishi12438": 143
    }
  },
  {
    "path": "src/main/java/StringParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class StringParser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private Parser analyser; "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public StringParser(Parser analyser_1,Storage storage_1,TaskList tasks_1){ "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        analyser \u003d analyser_1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        storage \u003d storage_1; "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        tasks \u003d tasks_1; "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void get_info(String command){ "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String end \u003d  \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String show_data \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String done \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String deadline \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String todo \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String events \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String remove \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String find \u003d \"find\"; "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(show_data.equals(command.trim())){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            analyser.print_list();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(l1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String[] values \u003d command.trim().split(\" \",2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //marking as done"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(Arrays.toString(values));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            if(remove.equals(values[0])){ "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{ "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(analyser.delete( Integer.parseInt(values[1].trim())));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (NumberFormatException e){ "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(\"please enter a valid number\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (ArrayIndexOutOfBoundsException e){ "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(\"please give a second value!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch(DukeException e){ "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch(Exception e){ "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else if(find.equals(values[0])){ "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{                            "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(analyser.find(values[1]));     "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch(ArrayIndexOutOfBoundsException e){ "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(\"Please enter a keyword\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else if(done.equals(values[0])){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                int index;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{ "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    index \u003d  Integer.parseInt(values[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    analyser.done(index);  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    storage.serial(tasks.get_list());                                    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch(NumberFormatException nfe){ "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(\"Sorry, you dint enter a valid index number!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }                            "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else if(todo.equals(values[0])){ "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{ "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(\"todo caaled\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    analyser.create_todo(command);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    //System.out.println(\"todo caaled after create\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    storage.serial(tasks.get_list());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                } "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (DukeException e){ "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (Exception e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else if(events.equals(values[0])){ "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{ "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    analyser.create_events(values[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    storage.serial(tasks.get_list());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                } "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (DukeException e){ "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (Exception e){ "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else if(deadline.equals(values[0])){ "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                String work \u003d values[1];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                try{ "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    analyser.create_deadline(work);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    storage.serial(tasks.get_list());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                } "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (DukeException e){ "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                catch (Exception e){ "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");  "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}   "
      }
    ],
    "authorContributionMap": {
      "rishi12438": 161
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "//this is the Task class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Task implements Serializable{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private boolean status;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Task(boolean to_add_status, String name_to_add){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        status \u003d to_add_status;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        name \u003d name_to_add;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void change_status(boolean to_change_status){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        status  \u003d to_change_status;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void change_task(String to_change_task){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        name \u003d to_change_task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public boolean get_status(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_name(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_type(){ "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(status \u003d\u003d true){ "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String name_1 \u003d  \"[✓] \"+get_name().trim(); "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return name_1; "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            String name_1 \u003d  \"[✗] \"+get_name().trim(); "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return name_1; "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_attrib(){ "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String type; "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(status\u003d\u003dtrue){ "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            type \u003d \"1\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            type \u003d \"0\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"^\"+type+\"^\"+name ; "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 48
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    private ArrayList\u003cTask\u003e l1 ;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public TaskList(){     "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        l1 \u003d new ArrayList\u003cTask\u003e(); "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e temp ){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"tasklist temp\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        l1 \u003d temp;  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void add_items(Task temp){ "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        //System.out.println(\"added items to list sucessfully\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        l1.add(temp);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public ArrayList\u003cTask\u003e get_list(){ "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return l1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Task get_index(int num){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return l1.get(num);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public int get_size(){ "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return l1.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void print_list(){ "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        for (Task temp : l1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.print(i+1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.print(\".\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //boolean status \u003d temp.get_status();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            System.out.println(temp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            i +\u003d1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String find(String keyword){ "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        int num \u003d 1; "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        for (Task temp : l1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(\"PRINTING \" );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            //System.out.println(temp.get_attrib());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            if(temp.get_name().contains(keyword)){ "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                if(num\u003d\u003d1){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                    message +\u003d\"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                } "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                message +\u003dString.valueOf(num)+\".\"+ temp+\"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                num+\u003d1; "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(message \u003d\u003d \"\"){ "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return \"No such keyword found!\"; "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            return message; "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void delete(int index) throws DukeException, Exception{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        if(index \u003e\u003d 1 \u0026\u0026 index \u003c\u003d l1.size()){ "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            l1.remove(index-1); "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "                "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        else{ "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "            throw new DukeException(\"Please give a valid task index to delete!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void change_status(int index,boolean val){ "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        l1.get(index-1).change_status(val);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "rishi12438": 72
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Todo(boolean to_add_status,String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        super(to_add_status,description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"[T]\" + super.toString().trim() ;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public String get_attrib(){ "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        return \"T\" + super.get_attrib(); "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rishi12438": 15
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public Ui(){     "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "        System.out.println(\"Error in Loading of file\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rishi12438"
        },
        "content": "} "
      }
    ],
    "authorContributionMap": {
      "rishi12438": 8
    }
  }
]

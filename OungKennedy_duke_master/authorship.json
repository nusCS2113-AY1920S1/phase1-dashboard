[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 28,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    Tasktype tasktype \u003d Tasktype.DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[D]|\" + String.format(isDone ? \"1\" : \"0\") + \"|\" + description + \"|\" + by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 20
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * Dialog Box for Duke GUI."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Set up dialog box parameters."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.getChildren().addAll(text,displayPicture);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * DialogBox for user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Dialog box for duke. Flipped from user dialogBox."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 60
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * this is the main function for duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // create scanner object"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String userInput \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            handle_input(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Handles user input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static void handle_input(String userInput) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        boolean byeSignal \u003d false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String firstWord \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e dukeReply \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dukeReply.add(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            byeSignal \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ArrayList\u003cString\u003e taskList \u003d TaskMaster.listTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dukeReply.addAll(taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else if (firstWord.equals(\"done\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // get index of task to mark as done, as an integer."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            Integer taskIndex \u003d Integer.parseInt(userInput.substring(userInput.length() - 1)) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            ArrayList\u003cString\u003e tempReply \u003d TaskMaster.resolveTask(taskIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dukeReply.addAll(tempReply);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                dukeReply.addAll(TaskMaster.addTask(userInput));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            } catch (EmptyDescriptionException | InvalidTaskTypeException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                dukeReply.add(ex.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Add border to front and back of dukeReply."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String border \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dukeReply.add(0,border);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dukeReply.add(border);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeReply.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String paddedString \u003d dukeReply.get(i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            paddedString \u003d \"    \" + paddedString;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            // print out each line."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            System.out.println(paddedString);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dukeReply.set(i, paddedString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (byeSignal) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            TaskMaster.savetoFile();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Creating the GUI with JavaFX - Excercise 2."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Step 1. Setting up required components."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Scene scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Step 2. Formatting the window to look as expected."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane,1.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton,1.0);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput,1.0);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Scroll down to the end every time the dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        // Add functionality to handle user input."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param text String containing text to add."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return a label with the specified text that has the word wrap enabled."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /** Iteration 2:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Creates 2 dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Duke response to user input."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 203,
      "Jeffry Lum": 2,
      "-": 8
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * Exception method for empty description in user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    Tasktype tasktype \u003d Tasktype.EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[E]|\" + String.format(isDone ? \"1\" : \"0\") + \"|\" + description + \"|\" + at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 20
    }
  },
  {
    "path": "src/main/java/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class InvalidTaskTypeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public InvalidTaskTypeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "/** A launcher class to workaround classpath issues. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 8
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static int totalTasks \u003d 0; // should do something with this."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public enum Tasktype {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        TODO"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return (isDone ? \u0027[\u0027 + \"\\u2713\" + \u0027]\u0027 : \u0027[\u0027 + \"\\u2718\" + \u0027]\u0027); // Return tick or X symbol."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public abstract String toSaveData();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * function that forms response string for \"list\" command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return String containing one sentence description of Task along with status icon."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 35
    }
  },
  {
    "path": "src/main/java/TaskMaster.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " * handles all the tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "class TaskMaster {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    static ArrayList\u003cString\u003e addTask(String userInput) throws EmptyDescriptionException, InvalidTaskTypeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e addTaskArrayList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        addTaskArrayList.add(\"Got it. I\u0027ve added this task\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String[] inputDetails \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        String taskType \u003d inputDetails[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        if (inputDetails.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new EmptyDescriptionException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            description \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            taskList.add(newTodo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            addTaskArrayList.add(newTodo.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            description \u003d userInput.split(\" \", 2)[1].split(\" /.. \")[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            time \u003d userInput.split(\" \", 2)[1].split(\" /.. \")[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            taskList.add(newDeadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            addTaskArrayList.add(newDeadline.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            description \u003d userInput.split(\" \", 2)[1].split(\" /.. \")[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            time \u003d userInput.split(\" \", 2)[1].split(\" /.. \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            Event newEvent \u003d new Event(description, time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            taskList.add(newEvent);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            addTaskArrayList.add(newEvent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            throw new InvalidTaskTypeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        addTaskArrayList.add(String.format(\"Now you have %d tasks in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return addTaskArrayList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /** Function that inserts task description and status icon into an ArrayList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return an array list of (Strings) tasks."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    static ArrayList\u003cString\u003e listTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e taskarrayList \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        taskarrayList.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (Task t: taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            taskarrayList.add(t.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return taskarrayList;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Sets task as done, and return array list of replies to handle_input function."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @param taskIndex : Integer representing index of task to mark as done."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @return reply : an ArrayList of Strings containing the replies to return to handle_input function."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    static ArrayList\u003cString\u003e resolveTask(Integer taskIndex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        ArrayList\u003cString\u003e reply \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        reply.add(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        Task doneTask \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        reply.add(String.format(\"%s✓] %s\", \u0027[\u0027, doneTask.description));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        taskList.set(taskIndex, doneTask);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * Function to save task information to file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public static void savetoFile() throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(\"C:/Users/oungk/OneDrive/Documents/School Work/CS2113/duke/data/duke.txt\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i +\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            String tasksaveData \u003d taskList.get(i).toSaveData();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "            writer.write(tasksaveData);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 94
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    Tasktype tasktype \u003d Tasktype.TODO;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toSaveData() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[T]|\" + String.format(isDone ? \"1\" : \"0\") + \"|\" + description + \"|\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "OungKennedy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "OungKennedy": 18
    }
  }
]

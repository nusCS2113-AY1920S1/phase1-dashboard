[
  {
    "path": "src/main/java/ca/demo/terminal/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    This class is an extension of the class Task, wherein it takes in the description of the Task(Deadline) and by when it is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    supposed to be done. This then returns a string which contains the information of the type of task it is, whether"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    it is done or not and by when it is supposed to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param description description or what the deadline is"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param by when the deadline is due"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return a string in the format with which it is stored in the dynamic arraylist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (\"[D][\" + super.getStatusIcon() + \"] \" + super.description()  + \" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 27
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/DeleteItems.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "This class is used to delete items from the list upon user input and also make the likewise changes to the text file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class DeleteItems {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    File file \u003d new File(filename);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e lines;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    Duke dj \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    ArrayList\u003cTask\u003e mytasks1 \u003d Duke.getTasks(); //obtains the dynamic array list to store tasks from the main class - Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        This function adds the word REMOVED on the line in which the particular task to be deleted is found. It will then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        not be processed for further calculations. It takes in the description of the task as a parameter and if the"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        3rd part of the split string in the file is the same as the parameter, the word REMOVED is then tagged along."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param imp description of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return newLines the line in the text file which is modified is returned"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e AddRemoved(String imp){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        List\u003cString\u003e newLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        for(String line: lines){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String [] vals \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if(vals[2].equals(imp)){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                if(vals[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    newLines.add(vals[0] + \"-\" + vals[1] + \"-\" + vals[2] + \"-\" + \"REMOVED\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                if(vals[0].equals(\"D\") || vals[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    newLines.add(vals[0] + \"-\" + vals[1] + \"-\" + vals[2] + \"-\" + vals[3] + \"-\" + vals[4] + \"-\" + \"REMOVED\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                newLines.add(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return newLines;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* This function obtains the number in the inputString i.e. the number of the task in the list that is to be removed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        The index is then located in mylists1 and deleted."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param inputString the input entered by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public void processing(String inputString) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        char[] chars \u003d inputString.toCharArray();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        for (char c : chars) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (Character.isDigit(c)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                sb.append(c);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        int result \u003d Integer.parseInt(String.valueOf(sb)); //converts the digit in the form of a character to integer"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String imp \u003d mytasks1.get(result - 1).description(); //the description of the task at the corresponding index is stored"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        lines \u003d Files.readAllLines(file.toPath(), Charset.defaultCharset());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        AddRemoved(imp); //the description of the task is passed onto the AddRemoved method which has been described above."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Files.write(file.toPath(), AddRemoved(imp), Charset.defaultCharset());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"Noted I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(mytasks1.get(result - 1));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        mytasks1.remove(result - 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"Now you have \" + mytasks1.size() + \" tasks in your list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 73
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\"; //name of the texxt file in which the list is stored"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e lines;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static ArrayList\u003cTask\u003e mytasks \u003d new ArrayList\u003cTask\u003e(); //a dynamic array to store the different types of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return mytasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        HandleFile hdf \u003d new HandleFile(); //creates a new instance of the class HandleFile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        hdf.ReadFile(); //calls a function from this class to read the existing tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Ui ui \u003d new Ui(); //creates a new instance of the class Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        ui.TakeInput(); //calls a function to take user input regarding the tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 25
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/ErrorHandling.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class ErrorHandling {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* The method error_handling throws MyException should it encounter an error. The type of errors are defined in the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        method. If any other word apart from the ones mentioned in the \u0027if\u0027 condition are used, it throws MyException"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        with the message that the particular word entered is unknown. Moreover, if the words todo, deadline, event,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        done, delete, or find are entered without specifying anything else, MyException can be thrown again saying tht"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        the description cannot be empty"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param input  the input string of the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    static void error_handling(String input) throws MyException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String first \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        if (first.equals(\"todo\") || first.equals(\"deadline\") || first.equals(\"event\") || first.equals(\"done\") || first.equals(\"list\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                || first.equals(\"bye\") || first.equals(\"delete\") || first.equals(\"find\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\") || input.equals(\"done\") || input.equals(\"delete\") || input.equals(\"find\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                throw new MyException(\"OOPS!!! The description of a \" + input + \" cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            throw new MyException((\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        This function returns an integer based on whether there is an error or not. After the error_handling method is"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        carried out, if there is an error, the integer 1 is returned. If not, 0 is returned, for further processing."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param inputString the input string entered by the user"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return 0 or 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public Integer handle_error(String inputString) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            error_handling(inputString); //the method error_handling is called"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        } catch (MyException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 42
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    This class is an extension of the class Task, wherein it takes in the description of the Task(Event) and  when it is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    at. This then returns a string which contains the information of the type of task it is, whether it is done or not"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    and by when it is supposed to be done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String event_at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param description describes what the event is"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param event_at when the event is going to be held"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public Event(String description, String event_at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.event_at \u003d event_at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return the string which contains all the details of the event in the format it has to be entered in the arraylist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (\"[E][\" + super.getStatusIcon() + \"] \" + super.description() + \" (at: \" + event_at + \")\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "manaswini05": 29
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/HandleFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class HandleFile {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\"; //text file that stores all the information"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    File file \u003d new File(filename);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    Duke dj \u003d new Duke(); //new instance of the main class Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    ArrayList\u003cTask\u003e mytasks1 \u003d Duke.getTasks(); //gets the dynamic array from Duke to add tasks to it"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* The public void function ReadFile reads the text file using the BufferedReader method."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        The string is split at the character \u0027-\u0027 to read the different details of the task in hand and add it to the mytasks1 Array List."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        This is because this is the format in which it is stored in the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Depending on the first letter of each line, the type of task i.e. ToDo/Event/Deadline is created and stored."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        The length of the split string is analysed as some of the tasks in the list might be marked by REMOVED if they have been deleted"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        public void ReadFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String st;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                while ((st \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    String[] data \u003d st.split(\"-\"); //splitting the string at \u0027-\u0027 as that is the format with which it is stored"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    if (data[0].equals(\"T\")) { //checks if it is a ToDo"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        if (data.length \u003c 4) { //if it is not REMOVED"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            ToDo t \u003d new ToDo(data[2]); //a new Todo is created"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                t.isDone \u003d true; //checks if the task is done as the task being done is denoted by \u00271\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                t.isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            mytasks1.add(t); //added to the dynamic array"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    if (data[0].equals(\"D\")) { //checks if it is a Deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        if (data.length \u003c 6) { //if it is not REMOVED"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String deadline_date \u003d data[3]; // the date on which the deadline is due is the 4th part of the split string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String deadline_time \u003d data[4]; // the time at which it is due is the 5th part of the split string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String deadline \u003d data[2]; //the description of the deadline is the 2nd part of the split string"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            Deadline d \u003d new Deadline(deadline, deadline_date + \" -\" + deadline_time); //a new deadline is created"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                d.isDone \u003d true; //checks if it is done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                d.isDone \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            mytasks1.add(d);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    if (data[0].equals(\"E\")) { //checks if it is an Event"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        if (data.length \u003c 6) { //if it is not REMOVED"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String event_date \u003d data[3]; // the date on which the event is on is the 4th part of the split string"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String event_time \u003d data[4]; // the time of the event is the 5th part of the split string"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            String event \u003d data[2]; //the description of the event is the 2nd part of the split string"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            Event e \u003d new Event(event, event_date + \" \" + event_time); // a new event is created"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                e.isDone \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                e.isDone \u003d false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                            mytasks1.add(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } catch ("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 75
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/MyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    MyException extends the Java Exception class and throws a message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @return message the error to be thrown"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class MyException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public MyException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 13
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/ProcessCommands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "This class takes in the input string and processes the necessary actions to do. It also updates the text file with"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "the tasks that have been added by the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class ProcessCommands {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    ArrayList\u003cTask\u003e mytasks1 \u003d Duke.getTasks();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param inputString the input entered by the user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param check the first word of the inputString"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public void process(String inputString, String check) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        BufferedWriter bw \u003d null; //initialising bufferedwriter and filewriter to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        FileWriter fw \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            File file \u003d new File(filename);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                //if the file doesnt exist as mentioned in the filename, it is created"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            fw \u003d new FileWriter(file.getAbsoluteFile(), true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (inputString.equals(\"bye\")) { //output to the console if \"bye\" is entered by the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (inputString.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /*from the dynamic array list that is taken from the main Duke class, tasks are added to it and are"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                  printed out to the console one by one when \"list\" is entered by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                for (int j \u003d 0; j \u003c mytasks1.size(); j +\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    System.out.print((j + 1) + \". \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    System.out.println(mytasks1.get(j));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /* if the first word entered by the user is \"deadline\", the input string is broken down and processed in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    order to get the date of the deadline ad the time. As these are needed to create a new Deadline, it"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    is passed onto the new Deadline that is created, which in turn is added onto mytasks1 ArrayList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    This then is written to the text file in the format: D-0/1-description-deadline date-deadline time."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    The 0/1 indicate if the task is done or not."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                int index \u003d inputString.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String deadline_by \u003d inputString.substring(index + 4, inputString.length() - 5);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String time_deadline \u003d inputString.substring(inputString.length() - 4);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String deadline \u003d inputString.substring(9, index - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                mytasks1.add(new Deadline(deadline, UnderstandDate.convertDate(deadline_by, time_deadline)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(mytasks1.get(mytasks1.size() - 1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Now you have \" + mytasks1.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String data \u003d \"D-\" + mytasks1.get(mytasks1.size() - 1).getStatusNumber() + \"-\" + deadline + \"-\" + UnderstandDate.convertDate(deadline_by, time_deadline) + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                bw.write(data);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /* if the first word entered by the user is \"to do\", the input string is broken down and processed to"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    get the task as the \"to do\" doesn\u0027t have a date or time. A new instance of ToDo is then created and"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    added to the mytasks1 array list. Also, the string \"data\" is written to the text file in the format"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    T-0/1-description. The 0/1 indicate if the task is done or not."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String desc \u003d inputString.substring(5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                mytasks1.add(new ToDo(desc));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(mytasks1.get(mytasks1.size() - 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Now you have \" + mytasks1.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String data \u003d \"T-\" + mytasks1.get(mytasks1.size() - 1).getStatusNumber() + \"-\" + desc + \"\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                bw.write(data);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /* if the first word entered by the user is \"event\", the input string is broken down and processed in"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                   order to get the date of the event and the time. As these are needed to create a new Even, it"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                   is passed onto the new Event that is created, which in turn is added onto mytasks1 ArrayList."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                   This then is written to the text file in the format: D-0/1-description-event date-event time."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                   The 0/1 indicate if the task is done or not."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                int index \u003d inputString.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String event \u003d inputString.substring(6, index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String event_at \u003d inputString.substring(index + 4, inputString.length() - 5);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String time_event \u003d inputString.substring(inputString.length() - 4);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                mytasks1.add(new Event(event, UnderstandDate.convertDate(event_at, time_event)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(mytasks1.get(mytasks1.size() - 1));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"Now you have \" + mytasks1.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String data \u003d \"E-\" + mytasks1.get(mytasks1.size() - 1).getStatusNumber() + \"-\" + event + \"-\" + UnderstandDate.convertDate(event_at, time_event) + \"\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                bw.write(data);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"delete\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                //if the user input is \"delete\", a method from the class DeleteItems is called for further processing"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                DeleteItems dlt \u003d new DeleteItems();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                dlt.processing(inputString);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"find\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    if the user input is \"find\", the existence of the particular word is checked, i.e. if any of the"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    descriptions contain it by going through the array list. The task at that particular index is then"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    printed out to the console."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                String toBeFound \u003d inputString.split(\" \")[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                int b \u003d 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                for (int a \u003d 0; a \u003c mytasks1.size(); a++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    if (mytasks1.get(a).description().contains(toBeFound)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        System.out.println(b + \". \" + mytasks1.get(a));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                        b++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else if (check.equals(\"done\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /* if the first word entered by the user is \"done\", a new instance of the class UpdateFile is created"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    to change the number 0 to 1, wherever the task is located in the text file. The method in the class"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    UpdateFile takes in the inputString as an argument."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                UpdateFile upd \u003d new UpdateFile();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                upd.processing(inputString);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                if (bw !\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    bw.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                if (fw !\u003d null) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                    fw.close();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "manaswini05": 150
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    This class is the defining class in the project. It contains the description of the task that is entered by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    and also the status of the task i.e. whether it is done or not."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param description the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* This function returns a cross or tick unicode character based on whether the task entered is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return tick/X symbol"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*This function returns a 0 or 1 depending on whether the task is done or not as it is stored in the file this way."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return 0 or 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String getStatusNumber() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    //This function changes the boolean value of isDone to true upon completion of a particular task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*This function returns the description of the task in form of a string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return description the description of the task in string format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String description() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 47
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    This class is an extension of the class Task, wherein it takes in the description of the Task(ToDo) and by when it is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    supposed to be done. This then returns a string which contains the information of the type of task it is and whether"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    it is done or not."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param description the description of the Todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return the string which contains the details of the task in the required format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (\"[T][\" + super.getStatusIcon() + \"] \" + super.description());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "manaswini05": 27
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public void TakeInput() throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            Scanner in \u003d new Scanner(System.in); //taking user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String inputString \u003d in.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            The input string is split at the empty spaces in order to separate the words entered and obtain the first"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            word. The first word describes the kind of task it is (i.e. Todo, Deadline or Event)."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "             */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String check \u003d inputString.split(\" \")[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            int x \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            An instance of the class ErrorHandling is created to account for random words entered or words with empty"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            conditions. An error is then thrown to the console after processing the input string. It returns 1 if there"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            is an error and the code won\u0027t be processed further. If it returns a 0, this indicates that there is no"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            error and the input String is processed further."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "             */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            ErrorHandling abc \u003d new ErrorHandling();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            x \u003d abc.handle_error(inputString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (x \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                /*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                As there is no error, the input string is processed further. An instance of the class ProcessCommands is"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                created and the input string is processed to carry out the necessary actions."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                 */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                ProcessCommands pcd \u003d new ProcessCommands();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                pcd.process(inputString, check);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if(inputString.equals(\"bye\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                break; //if the user enters bye, the program is stopped from running."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 46
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/UnderstandDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/* This class converts the date entered in integer format to words i.e. 11/9/2019 as 11th of September 2019 and 24hr"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    timing to 12hr timing. It then concatenates the two pieces and returns the complete string."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class UnderstandDate {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param date"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param time"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public UnderstandDate(String date, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    The function changes the format of the date and time in the desired format and returns a string."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @param date the date by which the deadline is due or the event is on"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @param time the time by which the deadline is due or the event is at"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @return string of date and time converted in the required format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public static String convertDate(String date, String time) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String[] vals \u003d date.split(\"/\"); //the date is split whenever there is a backslash"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        int D \u003d Integer.parseInt(vals[0]); //first part of the split string is the day"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        int M \u003d Integer.parseInt(vals[1]); //second part of the split string is the month"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        int Y \u003d Integer.parseInt(vals[2]); //third part of the split string is the year"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String converted_date \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //the months are stored in the form of an array to access them based on int M."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String [] months \u003d {\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //The following if-else conditions are to add a suffix to the date values."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        if(D \u003d\u003d 1 || D \u003d\u003d 21 || D \u003d\u003d 31 ) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            converted_date \u003d D + \"st\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        else if(D \u003d\u003d 2 || D \u003d\u003d 22) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            converted_date \u003d D + \"nd\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        else if(D \u003d\u003d 3) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            converted_date \u003d D + \"rd\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            converted_date \u003d D + \"th\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //Based on the integer M, the particular month is obtained by accessing M-1th index of the array."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String month \u003d months[M-1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //time"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //this Java function converts 24hr time to 12hr time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String result \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(\"Hmm\")).format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        //a string with all the converted date and time is concatenated and returned."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return (converted_date + \" of \" + month + \" \" + Y + \" \" + \"-\" + result);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 64
    }
  },
  {
    "path": "src/main/java/ca/demo/terminal/UpdateFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.nio.charset.Charset;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "/*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    This class is used to obtain the data in the text file. The status of the task i.e. whether it is done or not is stored"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    as either 0 or 1. Whenever a task is marked done by the user through the console, the necessary update has to be made"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    in the file to change the number from 0 to 1. This class processes the input string and likewise changes the values"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    in the text file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class UpdateFile {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static final String filename \u003d \"/Users/manaswinitalagadadivi/duke/store.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    File file \u003d new File(filename);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e lines;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    Duke dj \u003d new Duke();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    ArrayList\u003cTask\u003e mytasks1 \u003d Duke.getTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* This function is called if the task that has been done is a To Do and not an event or Deadline. All the lines"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        in the text file are split. Whenever the 3rd part of the split string(which is the description) is equal to the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String imp(description of the task), the value of 0 is replaced with 1."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param imp the description of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param newVal the value to which the old value in a particular line is to be changed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return newLines the new line in the text file that has been updated"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e changeValueOf(String imp, int newVal){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        List\u003cString\u003e newLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        for(String line: lines){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String [] vals \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if(vals[2].equals(imp)){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                newLines.add(vals[0] + \"-\" + String.valueOf(newVal) + \"-\" + vals[2]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                newLines.add(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return newLines;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /* This function is called if the task that has been done is an Event or a Deadline and not a To Do. All the lines"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        in the text file are split. Whenever the 3rd part of the split string(which is the description) is equal to the"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String imp(description of the task), the value of 0 is replaced with 1."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param imp the description of the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param newVal the value to which the old value in a particular line is to be changed"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @return newLines the new line in the text file that has been updated"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    private static List\u003cString\u003e changeValueOf1(String imp, int newVal){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        List\u003cString\u003e newLines \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        for(String line: lines){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String [] vals \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if(vals[2].equals(imp)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                newLines.add(vals[0] + \"-\" + String.valueOf(newVal) + \"-\" + vals[2] + \"-\" + vals[3] + \"-\" + vals[4]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                newLines.add(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        return newLines;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        This function processes the input string. It obtains the number of the task in the list done and checks the nature"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        of the task, if it is a To Do, Event or Deadline and then calls the relevant function from the above 2 for the"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        change to be made."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        @param inputString"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    public void processing(String inputString) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        char[] chars \u003d inputString.toCharArray();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        for (char c : chars) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            if (Character.isDigit(c)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                sb.append(c);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        int result \u003d Integer.parseInt(String.valueOf(sb));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        mytasks1.get(result - 1).markAsDone(); //the task entered as done is located and marked as done by the change of"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "                                                //Boolean value in the class Task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.print(\"[\" + mytasks1.get(result - 1).getStatusIcon() + \"] \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(mytasks1.get(result - 1).description());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        String help \u003d mytasks1.get(result - 1).toString();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Character type \u003d help.charAt(1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Character todo \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Character event \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        Character deadline \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        if(type.equals(todo)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String imp \u003d mytasks1.get(result - 1).description();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            lines \u003d Files.readAllLines(file.toPath(), Charset.defaultCharset());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            changeValueOf(imp, 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            Files.write(file.toPath(), changeValueOf(imp, 1), Charset.defaultCharset());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        if((type.equals(event)) || (type.equals(deadline))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            String imp \u003d mytasks1.get(result - 1).description();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            lines \u003d Files.readAllLines(file.toPath(), Charset.defaultCharset());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            changeValueOf1(imp, 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "            Files.write(file.toPath(), changeValueOf1(imp, 1), Charset.defaultCharset());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 110
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import ca.demo.terminal.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import ca.demo.terminal.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import ca.demo.terminal.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import ca.demo.terminal.UnderstandDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    ToDo test \u003d new ToDo(\"sleep\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    Deadline test1 \u003d new Deadline(\"sleep\", \"12/09/2019 2359\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    Event test2 \u003d new Event(\"abc\", \"1/1/2001 0000\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    UnderstandDate test3 \u003d new UnderstandDate(\"12/09/2019\", \"2359\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void test () {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        assertEquals(test.toString(), \"[T][\" + \"\\u2718\" + \"] \" + \"sleep\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        assertEquals(test1.toString(), \"[D][\" + \"\\u2718\" + \"] \" + \"sleep\" + \" (by: \" + \"12/09/2019 2359\" + \")\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        assertEquals(test2.toString(), \"[E][\" + \"\\u2718\" + \"] \" + \"abc\" + \" (at: \" + \"1/1/2001 0000\" + \")\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "        assertEquals(test3.convertDate(\"12/09/2019\", \"2359\"), \"12th of September 2019 -11:59 PM\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 21
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/DeleteItemsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class DeleteItemsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void processing() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/ErrorHandlingTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class ErrorHandlingTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void error_handling() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void handle_error() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 16
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/HandleFileTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class HandleFileTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void readFile() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/MyExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class MyExceptionTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 7
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/ProcessCommandsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class ProcessCommandsTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void process() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void getStatusNumber() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void description() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 24
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class ToDoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class UiTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void takeInput() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/UnderstandDateTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class UnderstandDateTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void convertDate() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  },
  {
    "path": "src/test/java/ca/demo/terminal/UpdateFileTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "package ca.demo.terminal;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "class UpdateFileTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "manaswini05"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    void processing() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "manaswini05"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "manaswini05": 12
    }
  }
]

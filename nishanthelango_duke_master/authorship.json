[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "\tid \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "\tid \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "test {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 22,
      "-": 15
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private LocalDateTime byDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the Deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param by the deadline time"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.byDateTime \u003d toDateTime();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Used when reading from storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description description of the Deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param by the Deadline date and time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param isDone true if the Deadline is completed, false otherwise"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.byDateTime \u003d toDateTime();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets a formatted String containing information about the Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * to be stored in a .txt file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the formatted String"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Converts the String by to LocalDateTime"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the Deadline in LocalDateTime format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public LocalDateTime toDateTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return LocalDateTime.parse(by, dateTimeFormatter);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 65
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param filePath path of file to store the tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String INVALID_COMMAND_ERROR_MESSAGE \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String INVALID_TODO_ERROR_MESSAGE \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String INVALID_DEADLINE_ERROR_MESSAGE \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String INVALID_EVENT_ERROR_MESSAGE \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Starts Duke execution."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                String[] parsedInput \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                String command \u003d parsedInput[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                List\u003cString\u003e parsedList \u003d Arrays.stream(parsedInput).map(String::trim).collect(Collectors.toList());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        isExit \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        storage.save(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        ui.showExit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        ui.list(tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003d\u003d 2 \u0026\u0026 Parser.isNumeric(parsedInput[1])) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            int i \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                tasks.markAsDone(i - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showDone(tasks.getTasks().get(i - 1).toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showTaskNotFoundError();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_COMMAND_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003d\u003d 2 \u0026\u0026 Parser.isNumeric(parsedInput[1])) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            int i \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                tasks.delete(i - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showSize(tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showTaskNotFoundError();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_COMMAND_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003e 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            TaskList findList \u003d new TaskList();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            String keyword \u003d ui.getKeyword(input);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                if (task.getDescription().toLowerCase().contains(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                    findList.getTasks().add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            if (findList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showNoMatchingTasksError();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                                ui.showMatchingTasks(findList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_COMMAND_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_TODO_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        String toDoDescription \u003d Parser.getToDoDescription(parsedList);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        tasks.add(new Todo(toDoDescription));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        ui.showSize(tasks);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_DEADLINE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        String deadlineDescription \u003d Parser.getDeadlineDescription(parsedList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        String by \u003d Parser.getBy(parsedList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        tasks.add(new Deadline(deadlineDescription, by));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        ui.showSize(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        if (parsedInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                            throw new DukeException(INVALID_EVENT_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        String eventDescription \u003d Parser.getEventDescription(parsedList);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        String at \u003d Parser.getAt(parsedList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        tasks.add(new Event(eventDescription,at));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        ui.showSize(tasks);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                        throw new DukeException(INVALID_COMMAND_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            } catch (DukeException de) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                ui.printIndented(de.getMessage());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                ui.printIndented(\"Please give a valid date and time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 165,
      "-": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 7
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private LocalDateTime atDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the Event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param at the date and time of the Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.atDateTime \u003d toDateTime();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param at the date and time of the Event"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param isDone true if the Event is completed, false otherwise"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.atDateTime \u003d toDateTime();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets a formatted String containing information about the Event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * to be stored in a .txt file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the formatted String"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"E | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Converts the String at to LocalDateTime"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the deadline in LocalDateTime format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public LocalDateTime toDateTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return LocalDateTime.parse(at, dateTimeFormatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 63
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Parses a String, using a whitespace to separate the tokens"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param input the user input as String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the parsed Input as as String array"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String[] parseInput(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return input.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the description of a Todo task from a list of strings"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param parsedList a List containing the parsed Todo task data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the description of the Todo task as a string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String getToDoDescription(List\u003cString\u003e parsedList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return String.join(\" \", parsedList.subList(1, parsedList.size()));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the description of a Deadline task from a list of strings"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param parsedList a List containing the parsed Deadline task data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the description of the Deadline task as a string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String getDeadlineDescription(List\u003cString\u003e parsedList) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        int index \u003d parsedList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            throw new DukeException(\"Please give a deadline.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return String.join(\" \", parsedList.subList(1, index));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the time and date of Deadline task from a list of strings"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param parsedList a List containing the parsed Deadline task data"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the time and date of the Deadline task as a string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String getBy(List\u003cString\u003e parsedList) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        int index \u003d parsedList.indexOf(\"/by\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            throw new DukeException(\"Please give a deadline.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return String.join(\" \", parsedList.subList(index + 1, parsedList.size()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the description of an Event task from a list of strings"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param parsedList a List containing the parsed Event task data"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the description of the Event task as a string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String getEventDescription(List\u003cString\u003e parsedList) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        int index \u003d parsedList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            throw new DukeException(\"Please give an event time.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return String.join(\" \", parsedList.subList(1, index));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the time and date of an Event task from a list of strings"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param parsedList a List containing the parsed Event task data"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the time and date of the Event task as a string"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static String getAt(List\u003cString\u003e parsedList) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        int index \u003d parsedList.indexOf(\"/at\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            throw new DukeException(\"Please give an event time.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return String.join(\" \", parsedList.subList(index + 1, parsedList.size()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Checks if a string is numeric"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param s the string to be checked"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return true if the string is numeric, false otherwise"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static boolean isNumeric(String s) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 99
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param filePath the path of the file used for storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Retrieves a list of Tasks from a .txt file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return a list of Tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @throws DukeException if the storage is empty"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            if (!scanner.hasNext()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                throw new DukeException(\"Your task list is empty\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                String[] line \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                boolean isDone \u003d (line[1].equals(\"1\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                if (line[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    tasks.add(new Deadline(line[2], line[3], isDone));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                else if (line[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    tasks.add(new Event(line[2], line[3], isDone));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                else if (line[0].equals(\"T\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                    tasks.add(new Todo(line[2], isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            ui.printIndented(\"Unable to locate file\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            ui.printIndented(\"Invalid file contents\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Saves TaskList data in a .txt file"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param tasks the TaskList to be saved in storage"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public static void save(TaskList tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                fileWriter.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            ui.printIndented(\"Error occurred while writing to file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 83
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor For Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Used when reading from local storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the status of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return \"Y\" if task is completed and \"N\" otherwise"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return Y or N"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Marks task as completed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the description of the task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 58
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param tasks a list of Tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for TaskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets a list of tasks from TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return a list of tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets the size of the task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the size of the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Adds a Task to the task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param task the Task to be added"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        ui.showAdded(task.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Deletes a Task from the task list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param i the index of the Task to be deleted"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        ui.showDeleted(tasks.get(i).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Marks a Task as completed"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param i the index of the Task to be marked"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void markAsDone(int i) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 77
    }
  },
  {
    "path": "src/main/java/seedu/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the Todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Constructor for Todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param description the description of the Todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param isDone true if the ToDo is completed, false otherwise"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets a formatted String containing information about the Todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * to be stored in a .txt file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the formatted String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return \"T | \" + (this.isDone ? \"1\" : \"0\") + \" | \" + this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 42
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    private static final String INDENTATION \u003d \"     \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a String with indentation"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param s the string to be indented"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void printIndented(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        System.out.println(INDENTATION + s);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a horizontal line"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a list of Tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param tasks the TaskList to be printed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void list(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        if (tasks.getTasks().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            printIndented(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            printIndented(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                printIndented(i + 1 + \".\" + tasks.getTasks().get(i).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Greets the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"What can I do for you?\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a message to show that a task has been marked as completed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param task the Task that has been marked"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showDone(String task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"  \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a message to show that a task has been removed"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param task the Task that has been removed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showDeleted(String task) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"  \" + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints an exit message to signal the termination of Duke"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Prints error when loading from file"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Error loading from file.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints error when task cannot be found"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showTaskNotFoundError() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Task not found. Please give a valid index.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints a list of tasks with a matching Tasks message"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param findList the list of matching Tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showMatchingTasks(TaskList findList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        for (int i \u003d 0; i \u003c findList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "            printIndented(i + 1 + \".\" + findList.getTasks().get(i).toString());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * prints error when there are no matching tasks found"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showNoMatchingTasksError() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"There are no matching tasks in your list.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Gets a keyword from the user input, to be searched for"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param input the user input"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @return the keyword to be searched for"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public String getKeyword(String input) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        return input.substring(5).toLowerCase();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Shows a Task that has been added"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param task the Task that has been added"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showAdded(String task) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"  \" + task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * Shows the size of the TaskList"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     * @param tasks the TaskList"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void showSize(TaskList tasks) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        printIndented(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 149
    }
  },
  {
    "path": "src/test/java/seedu/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void addWorks() throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task1 \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task2 \u003d new Event(\"meeting\", \"12/12/2019 1800\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task3 \u003d new Deadline(\"read book\", \"12/12/2019 2100\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        assertEquals(\"[T][N] borrow book\", taskList.getTasks().get(0).toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        assertEquals(\"[E][N] meeting (at: 12/12/2019 1800)\", taskList.getTasks().get(1).toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        assertEquals(\"[D][N] read book (by: 12/12/2019 2100)\", taskList.getTasks().get(2).toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    public void deleteWorks() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task1 \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task2 \u003d new Event(\"meeting\", \"12/12/2019 1800\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        Task task3 \u003d new Deadline(\"read book\", \"12/12/2019 2100\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.add(task3);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        taskList.delete(0);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        assertEquals(\"[E][N] meeting (at: 12/12/2019 1800)\", taskList.getTasks().get(0).toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "        assertEquals(\"[D][N] read book (by: 12/12/2019 2100)\", taskList.getTasks().get(1).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nishanthelango"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nishanthelango": 36
    }
  }
]

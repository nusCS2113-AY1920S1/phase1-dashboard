[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "saradj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "saradj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.date \u003d getDate(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "saradj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return (getDate(by) \u003d\u003d null) ? \"[D]\" + super.toString() + \"(by: \" + by + \")\" : \"[D]\" + super.toString() + \"(by: \" + getDateString(date) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public Date getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "saradj"
        },
        "content": "    private String getDateString(Date date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "saradj"
        },
        "content": "        if (date \u003d\u003d null)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "saradj"
        },
        "content": "            return by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "saradj"
        },
        "content": "        LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "saradj"
        },
        "content": "        String pattern \u003d by.length() \u003e 11 ? \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy, ha \" : \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "saradj"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return formatter.format(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return this.isDone ? \"D|1|\" + this.getDescription() + \"|\" + this.getDateString(date) : \"D|0|\" + this.getDescription() + \"|\" + this.getDateString(date);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "saradj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 39
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "saradj"
        },
        "content": "        String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "saradj"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "saradj"
        },
        "content": "        Path path \u003d Paths.get(\"C:\\\\Users\\\\Sara\\\\duke\\\\duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "saradj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "saradj"
        },
        "content": "            List\u003cString\u003e contentSoFar \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));// getting the data from the hard disk until now"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "saradj"
        },
        "content": "            for (String next : contentSoFar) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "saradj"
        },
        "content": "                String[] words \u003d next.split(\"\\\\|\");// splitting each line to extract the task type - words[0], done or not words-[1], description- words[2] and possibly due date words[3]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "saradj"
        },
        "content": "                switch (words[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        tasks.add(new Todo(words[2]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        tasks.add(new Deadline(words[2], words[3]));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        tasks.add(new Event(words[2], words[3]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        if (words[1].equals(\"1\"))"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "saradj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "saradj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "saradj"
        },
        "content": "        } catch (IOException E) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "saradj"
        },
        "content": "            // No old tasks, ready to start now!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t What can I do for you?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "saradj"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);  // Create a Scanner object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "saradj"
        },
        "content": "        String input \u003d scanner.nextLine();  // Read user input"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "saradj"
        },
        "content": "        while (!(input.equals(\"bye\"))) { //Continue reading until user inputs until bye"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "saradj"
        },
        "content": "            System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "saradj"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "saradj"
        },
        "content": "                if (tasks.isEmpty())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    throw new DukeException(\"No tasks yet!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "saradj"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    System.out.println(\"\\t Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) { // looping to print all the saved tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        System.out.println(\"\\t \" + i + \".\" + tasks.get(i - 1).toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "saradj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "saradj"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "saradj"
        },
        "content": "                String[] splitted \u003d input.split(\" \", 2);// splitted contains the keyword and the rest (description or task number)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "saradj"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "saradj"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    try (BufferedWriter writer \u003d new BufferedWriter(new OutputStreamWriter("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            new FileOutputStream(\"duke.txt\", true), StandardCharsets.UTF_8))) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        switch (splitted[0]) { // switching on the keyword"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            case \"done\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if (splitted.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    int taskNb \u003d Integer.parseInt(splitted[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    if (taskNb \u003c\u003d tasks.size() \u0026\u0026 taskNb \u003e 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        tasks.get(taskNb - 1).markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e(Files.readAllLines(path, StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        fileContent.set(taskNb - 1, tasks.get(taskNb - 1).printInFile()); // changing the file content"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        Files.write(path, fileContent, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        System.out.println(\"\\t \" + tasks.get(taskNb - 1).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    } else"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                        throw new DukeException(\"Enter a valid task number after done, between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                } else throw new DukeException(\"Need a task number after done!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            case \"todo\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if ((splitted.length \u003d\u003d 1) || splitted[1].isBlank())"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                newTask \u003d new Todo(splitted[1]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            case \"deadline\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if ((splitted.length \u003d\u003d 1) || splitted[1].isBlank())"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                String getBy[] \u003d splitted[1].split(\"/by \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if (getBy.length \u003c 2)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    throw new DukeException(\"The description of a deadline must contain /by date!\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                newTask \u003d new Deadline(getBy[0], getBy[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            case \"event\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if ((splitted.length \u003d\u003d 1) || splitted[1].isBlank())"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    throw new DukeException(\"The description of an event cannot be empty, and it must contain /at\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                String getAt[] \u003d splitted[1].split(\"/at \", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                if (getAt.length \u003c 2)"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                    throw new DukeException(\"The description of a deadline must contain /at data and time from-to!\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                newTask \u003d new Event(getAt[0], getAt[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "saradj"
        },
        "content": "                                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            tasks.add(newTask);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            System.out.println(\"\\t Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            System.out.println(\"\\t \" + newTask.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            System.out.println(tasks.size() \u003d\u003d 1 ? \"\\t Now you have \" + tasks.size() + \" task in the list.\" : \"\\t Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            writer.write(newTask.printInFile());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "saradj"
        },
        "content": "                            writer.newLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        writer.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "saradj"
        },
        "content": "                        System.out.println(\"IO problems, can not open file:\" + e.getMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "saradj"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "saradj"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "saradj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "saradj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "saradj"
        },
        "content": "            System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "saradj"
        },
        "content": "            input \u003d scanner.nextLine();  // Read next user input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "saradj"
        },
        "content": "        System.out.println(\"\\t\" + line);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 126,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "        super(\"☹ OOPS!!! \" + message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "saradj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.date\u003dgetDate(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "saradj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + getDateString(date) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return this.isDone ? \"E|1|\" + getDescription()+ \"|\" + this.getDateString(date)  : \"E|0|\" + this.getDescription() + \"|\" + getDateString(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "saradj"
        },
        "content": "    private String getDateString(Date date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "saradj"
        },
        "content": "        if(date\u003d\u003dnull)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "saradj"
        },
        "content": "            return at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "saradj"
        },
        "content": "        LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "saradj"
        },
        "content": "        String pattern \u003d at.length() \u003e 11 ? \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy, ha \" : \"d\u0027\" + getDaySuffix(localDate.getDayOfMonth()) + \"\u0027 \u0027of\u0027 MMMM yyyy\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "saradj"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return formatter.format(date);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "saradj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 32
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "saradj"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "saradj"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "saradj"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "saradj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "saradj"
        },
        "content": "    static String getDaySuffix(int n) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "saradj"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "saradj"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "saradj"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "saradj"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return \"st\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "saradj"
        },
        "content": "            case 2:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return \"nd\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "saradj"
        },
        "content": "            case 3:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return \"rd\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "saradj"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "saradj"
        },
        "content": "                return \"th\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "saradj"
        },
        "content": "    static Date getDate(String date) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "saradj"
        },
        "content": "        DateFormat dateFormat \u003d (date.length() \u003e 11) ? new SimpleDateFormat(\"dd/MM/yyyy hhmm\") : new SimpleDateFormat(\"dd/MM/yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "saradj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "saradj"
        },
        "content": "            Date d \u003d dateFormat.parse(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "saradj"
        },
        "content": "            return d;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "saradj"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "saradj"
        },
        "content": "            //case the date was not valid!"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "saradj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "saradj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 61
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "saradj"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "saradj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "saradj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "saradj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "saradj"
        },
        "content": "    public String printInFile() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "saradj"
        },
        "content": "        return this.isDone ? \"T|1|\" + this.getDescription() : \"T|0|\" + this.getDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "saradj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "saradj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "saradj": 14
    }
  }
]

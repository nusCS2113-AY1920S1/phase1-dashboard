[
  {
    "path": "src/main/java/Command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    Task tbAdd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public AddCommand (String line) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        sc \u003d new Scanner(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        String taskType \u003d sc.next();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                tbAdd \u003d new Todo(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                tbAdd \u003d new Deadline(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                tbAdd \u003d new Event(line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                System.exit(1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        taskList.add(tbAdd);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getAdd(tbAdd.toString()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        writeList(taskList, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 41
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private boolean exit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected void writeList (TaskList taskList, Storage storage) throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        storage.openPW();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            Task thisTask \u003d taskList.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            storage.print(thisTask.getOnlyTaskTypeIcon() + \" | \" + thisTask.getOnlyStatusIcon() + \" | \" + thisTask.getName());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            if (thisTask.getOnlyTaskTypeIcon().equals(\"T\"))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                storage.println(\"\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            else"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                storage.println(\" | \"  + thisTask.getDue());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        storage.closePW();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected void setExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        exit \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 37
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public DeleteCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            index \u003d Integer.parseInt(line.substring(7))-1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"The description of a delete needs to be a integer!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage file) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            taskList.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"Please enter a integer that is in range!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getDelete1() + task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getDelete2(index));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        writeList(taskList, file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 39
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public DoneCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            index \u003d Integer.parseInt(line.substring(5))-1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"The description of a done needs to be a integer!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            taskList.get(index).setDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"Please enter a integer that is in range!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getDone() + taskList.get(index));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        writeList(taskList, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 35
    }
  },
  {
    "path": "src/main/java/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public ExitCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        if (!line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a bye need to be empty\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        setExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 20
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private String toFind;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public FindCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            toFind \u003d line.substring(5);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getFind());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            if (taskList.get(i).getName().contains(toFind))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                ui.showMessageLn((i+1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 31
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public ListCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        if (!line.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a list need to be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showMessageLn(Message.getList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            ui.showMessageLn((i+1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Storage file \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                String line \u003d ui.readLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                Command command \u003d Parser.parse(line);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                command.execute(taskList, ui,file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                ui.showException(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "SalonetheGreat": 36
    }
  },
  {
    "path": "src/main/java/General/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package General;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public DukeException(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 13
    }
  },
  {
    "path": "src/main/java/General/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package General;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public final class Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String hello \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String exit \u003d \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String list \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String done \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String add \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String oops \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String delete1 \u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String delete2Front \u003d \"Now you have \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String delete2Back \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String find \u003d \"Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getHello() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return hello;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return exit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getAdd(String s) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return add + s;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getOops() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return oops;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getDelete1() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return delete1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getDelete2(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return delete2Front + (index+1) + delete2Back;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static String getFind() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return find;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 50
    }
  },
  {
    "path": "src/main/java/General/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package General;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private PrintWriter pw;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Storage (String pathname) throws FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        file \u003d new File(pathname);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void createNewFile() throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void openPW() throws FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        pw \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void closePW() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void print(String str) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        pw.print(str);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void println(String str) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        pw.println(str);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 40
    }
  },
  {
    "path": "src/main/java/General/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package General;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String readNext() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return sc.next();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        System.out.println(Message.getHello());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        System.out.println(Message.getExit());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void showException (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void showMessage (String str) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        System.out.print(str);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void showMessageLn (String str) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 36
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public static Command parse (String line) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Scanner input \u003d new Scanner(line);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            String command \u003d input.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getExitCommand(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getListCommand(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getDoneCommand(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getDeleteCommand(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getAddCommand(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    return getFindCommand(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "                    throw new DukeException(Message.getOops() + \"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"You cannot enter a empty line!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getExitCommand (String line) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new ExitCommand(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getListCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new ListCommand(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getAddCommand(String line) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new AddCommand(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getDoneCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new DoneCommand(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getDeleteCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new DeleteCommand(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private static Command getFindCommand(String line) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return new FindCommand(line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 63
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Deadline(String line) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            info \u003d lineOfInput.nextLine().substring(1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        int splitPoint \u003d info.indexOf(\"/by \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        if (splitPoint \u003d\u003d -1){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"There is no \\\"/by \\\" in your input!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        name \u003d info.substring(0, splitPoint);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        setDue(info.substring(splitPoint+4));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void setDue(String dueString) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            date \u003d simpleDateFormat.parse(dueString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"Please input deadline due as \\\"dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        due \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getTaskTypeIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getOnlyTaskTypeIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return getTaskTypeIcon() + getStatusIcon() + name + \"(by: \" + due + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 53
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Event(String info) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        super(info);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            info \u003d lineOfInput.nextLine().substring(1);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        int splitPoint \u003d info.indexOf(\"/at \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        if (splitPoint \u003d\u003d -1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"There is no \\\"/at \\\" in your input!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        name \u003d info.substring(0, splitPoint);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        setDue(info.substring(splitPoint+4));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void setDue(String dueString) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            date \u003d simpleDateFormat.parse(dueString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(Message.getOops() + \"Please input event time as \\\"dd/MM/yyyy HHmm\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        due \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getTaskTypeIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getOnlyTaskTypeIcon() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return getTaskTypeIcon() + getStatusIcon() + name + \"(at: \" + due + \")\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 53
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected Scanner lineOfInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected Date due;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected String info;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Task(String line) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        lineOfInput \u003d new Scanner(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        lineOfInput.next();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    protected final String getStatusIcon(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public final String getOnlyStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getDue() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return due.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public abstract void setDue(String line) throws DukeException;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public final void setDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public abstract String getTaskTypeIcon();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public abstract String getOnlyTaskTypeIcon();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 46
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void add (Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void remove (int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 27
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import General.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public Todo(String line) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        super(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            info \u003d lineOfInput.nextLine().substring(1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        name \u003d info;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        setDue(info);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getTaskTypeIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getOnlyTaskTypeIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public void setDue(String line) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "        return getTaskTypeIcon() + getStatusIcon() + name;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SalonetheGreat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SalonetheGreat": 45
    }
  }
]

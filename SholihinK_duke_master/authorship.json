[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 26,
      "Jeffry Lum": 15
    }
  },
  {
    "path": "settings.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jeffry Lum"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "Jeffry Lum": 1
    }
  },
  {
    "path": "src/main/java/Commands.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    List dukelist \u003d new List();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    DukeExecption errorMsg \u003d new DukeExecption();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    int counter \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void preLoad() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        dukelist.loadFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void toDo(String exec){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        int taskNumber \u003d 0;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String toFind\u003d\"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        if(exec.length() \u003e 4 \u0026\u0026 exec.substring(0, 4).equals(\"done\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            taskNumber \u003d Integer.valueOf(exec.substring(5)) -1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            exec \u003d \"done\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }else if(exec.length() \u003e 6 \u0026\u0026 exec.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            taskNumber \u003d Integer.valueOf(exec.substring(7)) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            exec \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"to delete\" + taskNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }else if(exec.length() \u003e 4 \u0026\u0026 exec.substring(0, 4).equals(\"find\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            toFind \u003d exec.substring(5);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            exec \u003d \"find\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        switch(exec){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                dukelist.printTask();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    dukelist.markComplete(taskNumber);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    errorMsg.outOfRange();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    dukelist.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    errorMsg.outOfRange();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                try{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    dukelist.findTask(toFind);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    errorMsg.outOfRange();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                dukelist.addTask(exec,1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                //errorMsg.unknownCMD();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 65
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getFinalDesc() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return \"[D]\" + super.getFinalDesc() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public  String getTime(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        Commands cmd \u003d new Commands();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        cmd.preLoad();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        cmd.greetUser();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String exec \u003d in.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        while(!exec.equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            cmd.toDo(exec);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            exec \u003d in.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 15,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeExecption.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class DukeExecption {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void unknownCMD(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void emptyDesc(String cmd){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The description of \"+cmd+\" cannot be empty\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void outOfRange(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! Out of range error detected\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void missingArgs(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! Missing arguments detected in input\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void emptyTime(String cmd){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! The time of \"+cmd+\" cannot be empty\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void unrecognisedDate(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"☹ OOPS!!! Unrecognised time input detected\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 26
    }
  },
  {
    "path": "src/main/java/Events.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public Events(String description,String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getFinalDesc() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return \"[E]\" + super.getFinalDesc() + \" (at: \"+ at +\")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public  String getTime(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 20
    }
  },
  {
    "path": "src/main/java/List.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    DukeExecption errorMsg \u003d new DukeExecption();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    fileIO wf \u003d new fileIO();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    //Source 1 means from cmd line,0 means file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void addTask(String taskDesc,int source){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        int successCode \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        if(taskDesc.length() \u003e 4 \u0026\u0026 taskDesc.substring(0,4).equals(\"todo\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempDesc \u003d taskDesc.substring(5).trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(tempDesc.isEmpty()){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                errorMsg.emptyDesc(\"todo\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                successCode \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(successCode\u003d\u003d0){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                Task todo \u003d new ToDos(tempDesc);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }else if(taskDesc.length() \u003e 5 \u0026\u0026 taskDesc.substring(0,5).equals(\"event\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempTotal \u003d taskDesc.substring(6);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String cmd \u003d \"event\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String[] temp \u003d tempTotal.split(\" /at \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempDesc\u003d\"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempTime\u003d\"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                tempDesc \u003d temp[0].trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                tempTime \u003d temp[1].trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                if(tempTime.isEmpty()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    errorMsg.missingArgs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    successCode \u003d1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(formatDateTime(tempTime).equals(\"\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                successCode\u003d1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(successCode \u003d\u003d 0){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                Task todo \u003d new Events(tempDesc,formatDateTime(tempTime));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }else if(taskDesc.length() \u003e 8 \u0026\u0026 taskDesc.substring(0,8).equals(\"deadline\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempTotal \u003d taskDesc.substring(9);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String[] temp \u003d tempTotal.split(\" /by \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempDesc \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String tempTime \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                tempDesc \u003d temp[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                tempTime \u003d temp[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                if(tempTime.isEmpty()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    errorMsg.missingArgs();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    successCode \u003d1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(formatDateTime(tempTime).equals(\"\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                successCode\u003d1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(successCode \u003d\u003d 0){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                Task todo \u003d new Deadline(tempDesc,formatDateTime(tempTime));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                taskList.add(todo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            errorMsg.unknownCMD();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            successCode\u003d1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        if(successCode\u003d\u003d0 \u0026\u0026 source\u003d\u003d1){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            wf.doWrite(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\" \"+taskList.get(taskList.size()-1).getFinalDesc());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"Now you have \"+taskList.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void printTask(){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        for(int i \u003d 0 ; i \u003c taskList.size();i++){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println((i+1)+\".\"+(taskList.get(i)).getFinalDesc());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void loadFile(){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        wf.loadData(taskList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void markComplete(int taskNumber){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        (taskList.get(taskNumber)).markAsDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        wf.reWrite(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println((taskList.get(taskNumber)).getFinalDesc());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String formatDateTime(String strToDate){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        Date newDate \u003d null;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        int status \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            newDate \u003d format.parse(strToDate);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            errorMsg.unrecognisedDate();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        if(status \u003d\u003d 0){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            format \u003d new SimpleDateFormat(\"dd MMMM yyyy,hh:mm a\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            strToDate \u003d format.format(newDate);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            return strToDate;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String tempDesc \u003d taskList.get(taskNumber).getFinalDesc();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        wf.reWrite(taskList);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(tempDesc);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void findTask(String toFind){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        for(int i \u003d 0 ; i \u003ctaskList.size();i++){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(taskList.get(i).description.contains(toFind)){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                System.out.println(i+1 +\". \"+taskList.get(i).getFinalDesc());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 150
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getFinalDesc(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String taskDesc \u003d \"[\" +this.getStatusIcon()+\"] \"+ this.description ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return taskDesc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 31
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public String getFinalDesc() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        return \"[T]\" + super.getFinalDesc();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 14
    }
  },
  {
    "path": "src/main/java/fileIO.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "public class fileIO {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    String fileName \u003d \"D:\\\\Y2S1\\\\CS2113T\\\\Duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    String sep \u003d \"\\\\\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void doWrite(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        Boolean status \u003d taskList.get(taskList.size()-1).isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String desc \u003d taskList.get(taskList.size()-1).description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String tempStatus \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        if(status.equals(false)){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            tempStatus \u003d\"0\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            tempStatus \u003d\"1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(fileName, true));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            String cmd \u003d taskList.get(taskList.size()-1).getFinalDesc().substring(1,2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            if(cmd.equals(\"T\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                bufferedWriter.write(\"T\" + sep + tempStatus + sep + desc );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }else if(cmd.equals(\"E\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String time \u003d  taskList.get(taskList.size()-1).getTime();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                bufferedWriter.write(\"E\" + sep + tempStatus + sep + desc + sep+ time);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }else if(cmd.equals(\"D\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String time \u003d  taskList.get(taskList.size()-1).getTime();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                bufferedWriter.write(\"D\" + sep + tempStatus + sep + desc + sep+ time);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"Error writing to file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    public void reWrite(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            BufferedWriter fileWriter \u003d new BufferedWriter(new FileWriter(fileName));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            for(int i \u003d 0 ; i \u003ctaskList.size();i++){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                Boolean status \u003d taskList.get(i).isDone;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String desc \u003d taskList.get(i).description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String tempStatus \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                if(status.equals(false)){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    tempStatus \u003d\"0\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    tempStatus \u003d\"1\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String cmd \u003d taskList.get(i).getFinalDesc().substring(1,2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                if(cmd.equals(\"T\")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    bufferedWriter.write(\"T\" + sep + tempStatus + sep + desc );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }else if(cmd.equals(\"E\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    String time \u003d  taskList.get(i).getTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    bufferedWriter.write(\"E\" + sep + tempStatus + sep + desc + sep+ time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }else if(cmd.equals(\"D\")){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    String time \u003d  taskList.get(i).getTime();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    bufferedWriter.write(\"D\" + sep + tempStatus + sep + desc + sep+ time);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                System.out.println(\"Error writing to file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        public void loadData(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        int counter \u003d 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            FileReader fileReader \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            while((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                String[] fileInp \u003d line.split(\"\\\\\\\\\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                if(fileInp[0].equals(\"T\")){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    taskList.add(new ToDos(fileInp[2]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    if(fileInp[1].equals(\"1\")){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                        taskList.get(taskList.size()-1).markAsDone();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }else if(fileInp[0].equals(\"E\")){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    taskList.add(new Events(fileInp[2],fileInp[3]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    if(fileInp[1].equals(\"1\")){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                        taskList.get(taskList.size()-1).markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }else if(fileInp[0].equals(\"D\")){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    taskList.add(new Deadline(fileInp[2],fileInp[3]));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    if(fileInp[1].equals(\"1\")){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                        taskList.get(taskList.size()-1).markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            // Always close files."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        catch(FileNotFoundException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"Unable to open file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        catch(IOException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "            System.out.println(\"Error reading file \u0027\" + fileName + \"\u0027\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SholihinK"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SholihinK"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SholihinK": 114
    }
  }
]

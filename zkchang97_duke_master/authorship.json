[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class Deadlines extends MarkDone {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Deadlines(String task, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.deadline \u003d DukeDateFormat.convertStringToDate(deadline);   // by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Deadlines(String task, boolean isDone, String deadline) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(task, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \" + deadline + \")\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.lang.Integer;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        boolean isListening \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        String filePath \u003d \"C:\\\\Users\\\\chang\\\\Desktop\\\\cs2113\\\\duke\\\\data\\\\duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        ToDoList toDoList \u003d new ToDoList(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        while (isListening) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String command \u003d input.nextLine(); // take input within the loop to avoid infinite loop"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String[] s \u003d command.split(\" \", 2); // split command into action and description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String action \u003d s[0];   // captures the action word"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                if (action.equals(\"bye\")) { // send good bye message when command \u003d\u003d \"bye\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.saveTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    isListening \u003d false; // change flag to exit loop"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (action.equals(\"list\")) { // list tasks if command \u003d\u003d \"list\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.listTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (action.equals(\"blah\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    int taskno \u003d Integer.parseInt(s[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.removeTask(taskno);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    int taskno \u003d Integer.parseInt(s[1]);    // parseInt converts string to Int"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.markasDone(taskno);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    String type \u003d s[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    if (s.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                        throw new DukeException(\"â˜¹ OOPS!!! The description of a \" + type + \" cannot be empty\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    String description \u003d s[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.addTask(description, type);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    toDoList.addTask(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                System.out.println(dukeException.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 41,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeDateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.text.SimpleDateFormat;  // for formatting and parsing dates"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.Date;  // allows interpretation of dates as year, month, day, hour, minute and second values"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.LocalDate; // description of the date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.time.ZoneId;    // time zone id"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class DukeDateFormat {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static String convertStringToDate(String s) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            SimpleDateFormat format \u003d new SimpleDateFormat(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            Date date \u003d format.parse(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"d\u0027suffix\u0027 \u0027of\u0027 MMMM yyyy h.mma\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            LocalDate localDate \u003d date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return formatter.format(date).replace(\"suffix\", getDaySuffix(localDate.getDayOfMonth()))"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    .replace(\".00\", \"\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    .replace(\"AM\", \"am\")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    .replace(\"PM\", \"pm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } catch (ParseException exception) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private static String getDaySuffix(int n) {   // to return suffix"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (!(n \u003e\u003d 1 \u0026\u0026 n \u003c\u003d 31)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (n \u003e\u003d 11 \u0026\u0026 n \u003c\u003d 13) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return \"th\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        switch (n % 10) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            case 1: return \"st\";    // first"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            case 2: return \"nd\";    // second"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            case 3: return \"rd\";    // third"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            default: return \"th\";   // the rest"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 36
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public DukeException(String msg)  {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zkchang97": 9
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class Events extends MarkDone{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Events(String event, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(event);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.at \u003d at; // at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Events(String event, boolean isDone, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(event, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (at: \" + at + \") \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 21
    }
  },
  {
    "path": "src/main/java/MarkDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class MarkDone {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    protected String description; // protected: only class and subclass can access"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static MarkDone taskList(String task, String type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new ToDos(task);     // pass into ToDos"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String[] s \u003d task.split(\" /by \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String taskDescription \u003d s[0];    // task description always the first element in the String[]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String by \u003d s[1];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new Deadlines(taskDescription, by);      // pass into Deadlines"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String[] s \u003d task.split(\" /at\", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String taskDescription \u003d s[0];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String at \u003d s[1];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new Events(taskDescription, at);     // pass into Events"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public static MarkDone taskList(String[] taskParams) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        String type \u003d taskParams[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        boolean isDone \u003d taskParams[1].equals(\"true\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        String description \u003d taskParams[2];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new ToDos(description, isDone);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String by \u003d taskParams[3];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new Deadlines(description, isDone, by);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String at \u003d taskParams[3];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return new Events(description, isDone, at);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public MarkDone(String description) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public MarkDone(String description, boolean isDone) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public Boolean isitDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String markTask() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return \"âœ“\";    // tick"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            return \"âœ—\";    // cross"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void markedasDone() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return \"[\" + markTask() + \"] \" + description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 73
    }
  },
  {
    "path": "src/main/java/ToDoList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class ToDoList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private List\u003cMarkDone\u003e toDoList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private static String divider \u003d \" DIVIDER \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public ToDoList(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        readTasks();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    private void readTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            BufferedReader bufferedreader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            while ((s \u003d bufferedreader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                String[] taskParams \u003d s.split(divider);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                MarkDone task \u003d MarkDone.taskList(taskParams);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                toDoList.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void addTask(String description) { // store text created by user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        addTask(description, \"todo\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void addTask(String description, String type) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        MarkDone task \u003d MarkDone.taskList(description, type);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        toDoList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\" \" + new ToDos(description).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Now you have \" + toDoList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void markasDone(int n) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        MarkDone task \u003d toDoList.get(n - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        task.markedasDone(); // boolean \u003d\u003d true when task is completed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\" \" + task.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void removeTask(int n) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        MarkDone task \u003d toDoList.remove(n - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\" \" + task.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Now you have \" + toDoList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void listTasks() { // display back when requested"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        for (MarkDone task: toDoList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            System.out.println(count + \". \" + task.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public void saveTasks() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            for (MarkDone task: toDoList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                if (task instanceof ToDos) {    // to test if the object is an instant of the ToDos, returns true/false"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    writer.write(\"T\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    writer.write(\"D\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    writer.write(\"E\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                writer.write(divider + task.isitDone() + divider + task.getDescription());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    writer.write(divider + ((Deadlines) task).getDeadline());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                    writer.write(divider + ((Events) task).getVenue());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 86
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "public class ToDos extends MarkDone {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public ToDos(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(s);   // invoke immediate parent class constructor (MarkDone)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public ToDos(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zkchang97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zkchang97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zkchang97": 13
    }
  }
]

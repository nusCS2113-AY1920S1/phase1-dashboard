[
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import DukeException.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private static String defaultSavePath \u003d \"task_list.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * Saves the user\u0027s current task list into a text file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param listToSave TaskList object to be saved."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException When file cannot be written to."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void saveList(TaskList listToSave) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        FileWriter fw \u003d new FileWriter(defaultSavePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String stringToWrite \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c listToSave.getListLength(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            stringToWrite +\u003d (listToSave.getListItem(i).getTaskType() + \" | \" + listToSave.getListItem(i).getStatus() + \" | \" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    listToSave.getListItem(i).getDescription() + \" /by \" + listToSave.getListItem(i).getDateTimeSaveString() + \"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        fw.write(stringToWrite);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Loads a new task list from a previously saved text file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return TaskList object containing tasks from text file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IOException When file cannot be loaded from/written to."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws IncompleteListEntryException When text format inside save file is corrupt/unrecognizable."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws UnknownDateTimeFormatException When text format inside save file is corrupt/unrecognizable."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static TaskList loadList() throws IOException, IncompleteListEntryException,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            UnknownDateTimeFormatException  {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TaskList readTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            File f \u003d new File(defaultSavePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            BufferedReader b \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String readLine \u003d b.readLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                if (readLine \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String[] readLineArr \u003d readLine.split(\".\\\\|.| \", 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String itemType \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String itemStatus \u003d readLineArr[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                String description \u003d Parser.descriptionParse(Arrays.copyOfRange(readLineArr, 2, readLineArr.length));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                LocalDateTime dateTime \u003d Parser.dateTimeParse(Arrays.copyOfRange(readLineArr, 2, readLineArr.length));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                if (readLineArr[0].equals(\"[T]\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    itemType \u003d \"todo\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                } else if (readLineArr[0].equals(\"[D]\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    itemType \u003d \"deadline\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                } else if (readLineArr[0].equals((\"[E]\"))) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    itemType \u003d \"event\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                readTaskList.addListItem(itemType, itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            FileWriter fw \u003d new FileWriter(defaultSavePath);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return readTaskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 52,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private ArrayList\u003cTask\u003e taskListInternal;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        taskListInternal \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a new Task to the internal ArrayList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param itemType Type of item, i.e. \u0027todo\u0027, \u0027deadline\u0027, \u0027event\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param itemStatus Tick or cross string to represent task completion status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param dateTime LocalDateTime object with information on deadline of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void addListItem(String itemType, String itemStatus, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        Task curTask \u003d new Task(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (itemType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            curTask \u003d new ToDo(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } else if (itemType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            curTask \u003d new Deadline(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } else if (itemType.equals((\"event\"))) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            curTask \u003d new Event(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        taskListInternal.add(curTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns Task object at desired index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param itemIndex 0-based index of Task to get."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Requested Task object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Task getListItem(int itemIndex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return taskListInternal.get(itemIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets length of internal ArrayList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Length of internal ArrayList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public int getListLength() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return taskListInternal.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "     * Empties internal ArrayList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        taskListInternal.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     * Marks Task at input index as complete."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param listItemNumber 1-based index of Task to mark complete."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void markItemComplete(int listItemNumber) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        listItemNumber -\u003d 1;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        taskListInternal.get(listItemNumber).setStatus(\"[✓]\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * Searches through internal ArrayList and returns a new TaskList object with all Tasks"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     * that match a query String."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param query String to search for in internal ArrayList."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return TaskList containing matching Tasks from original ArrayList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public TaskList search(String query) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        TaskList searchList \u003d new TaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c getListLength(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            if (getListItem(i).getDescription().contains(query)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    String tempTaskType \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    if (getListItem(i).getTaskType().equals(\"[T]\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        tempTaskType \u003d \"todo\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    } else if (getListItem(i).getTaskType().equals(\"[D]\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        tempTaskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    } else if (getListItem(i).getTaskType().equals(\"[E]\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                        tempTaskType \u003d \"event\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    searchList.addListItem(tempTaskType, getListItem(i).getStatus(),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                            getListItem(i).getDescription(), getListItem(i).getDateTime());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                } catch(Exception e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                    System.out.println(\"Unhandled exception oops\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return searchList;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes Task from particular index from internal ArrayList."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param listItemNumber 1-based index of Task to delete."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void deleteItem(int listItemNumber) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        listItemNumber -\u003d 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        taskListInternal.remove(listItemNumber);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 73,
      "-": 35
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static String logo \u003d \"____        _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Simple print function that handles indentation and divider lines while printing desired output."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param stringToOutput String to print in UI."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static void printOutput(String stringToOutput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.out.println(addIndent() + \"____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String[] linesToPrint \u003d stringToOutput.split(\"\\n\", 0);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c linesToPrint.length; i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            System.out.println(addIndent() + linesToPrint[i]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        System.out.println(addIndent() + \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an 8 character indent string."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty indented String."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static String addIndent() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return \"        \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a custom indent character string."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param indentSize Size of indentation."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty indented String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static String addIndent(int indentSize) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String indent \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        for (int i \u003d 0; i \u003c indentSize; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            indent +\u003d \" \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return indent;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "     * Simple quit output function."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static void quitFunc() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        printOutput(\"Farewell. I do hope to see you again.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Quit output function with custom message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param optionalOutput Custom message to output."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public static void quitFunc(String optionalOutput) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        printOutput(optionalOutput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        printOutput(\"Farewell. I do hope to see you again.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 36,
      "-": 25
    }
  },
  {
    "path": "src/main/java/DukeException/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 6,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException/IncompleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class IncompleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public IncompleteCommandException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 7
    }
  },
  {
    "path": "src/main/java/DukeException/IncompleteListEntryException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class IncompleteListEntryException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public IncompleteListEntryException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 7
    }
  },
  {
    "path": "src/main/java/DukeException/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public UnknownCommandException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 7
    }
  },
  {
    "path": "src/main/java/DukeException/UnknownDateTimeFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class UnknownDateTimeFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public UnknownDateTimeFormatException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 7
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Deadline(String itemStatus, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.taskType \u003d \"[D]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 15
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Event(String itemStatus, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.taskType \u003d \"[E]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 15
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String status;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private LocalDateTime dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public DateTimeFormatter dukeDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public Task(String status, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return \"default\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getDateTimeSaveString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return dateTime.format(dukeDateTimeFormat);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getDateTimeString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String dateString \u003d dateTime.getDayOfMonth() + \" \" + dateTime.getMonth().name() +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "                \" \" + dateTime.getYear() + \", \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        String timeString \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (Integer.toString(dateTime.getHour()).length() !\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            timeString +\u003d \"0\" + dateTime.getHour();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            timeString +\u003d Integer.toString(dateTime.getHour());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        if (Integer.toString(dateTime.getMinute()).length() !\u003d 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            timeString +\u003d \"0\" + dateTime.getMinute();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "            timeString +\u003d Integer.toString(dateTime.getMinute());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        timeString +\u003d \" hours.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return dateString + timeString;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 63
    }
  },
  {
    "path": "src/main/java/Task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public ToDo(String itemStatus, String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        super(itemStatus, description, dateTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        this.taskType \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Raghav-B"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Raghav-B": 15
    }
  }
]

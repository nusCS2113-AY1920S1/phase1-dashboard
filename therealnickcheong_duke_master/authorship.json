[
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private DataReadWrite SaveFile;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private TaskList DukeTaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public Duke() throws  IOException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        SaveFile \u003d new DataReadWrite();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        SaveFile.readFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        DukeTaskList \u003d new TaskList(SaveFile.updateDukeTaskList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean exitFlag \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        while(!exitFlag){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            Scanner myObj \u003d new Scanner(System.in);  // Create a Scanner object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            String userCmd \u003d myObj.nextLine();  // Read user input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            Parser parseCmd \u003d new Parser(SaveFile, DukeTaskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            parseCmd.parse(userCmd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            exitFlag \u003d parseCmd.getExitStatus();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException, DateTimeParseException{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "therealnickcheong": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public boolean exitStatus \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private DataReadWrite SaveFile;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private TaskList DukeTaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    private Ui taskUi \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public Parser(DataReadWrite save, TaskList taskList){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        this.SaveFile \u003d save;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        this.DukeTaskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void parse(String userCmd){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            if(userCmd.startsWith(\" \")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                throw new DukeException(\"empty task\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            if(userCmd.equals(\"bye\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                SaveFile.saveData(DukeTaskList.getTaskList());// Save Data upon exit"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                taskUi.printBye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                this.exitStatus \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"done\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                int taskNum \u003d Integer.parseInt(userCmd.substring(userCmd.lastIndexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(taskNum \u003e DukeTaskList.getTaskList().size()){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"Done index out of range\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DukeTaskList.getTaskList().get(taskNum-1).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printDone(DukeTaskList.getTaskList().get(taskNum-1));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                int taskNum \u003d Integer.parseInt(userCmd.substring(userCmd.lastIndexOf(\u0027 \u0027) + 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(taskNum \u003e DukeTaskList.getTaskList().size()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"Delete index out of range\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printDelete(DukeTaskList.getTaskList().get(taskNum-1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DukeTaskList.deleteTaskList(taskNum-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printSize(DukeTaskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.equals(\"list\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                taskUi.printTaskList(DukeTaskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(userCmd.split(\" \").length \u003d\u003d 1){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String todo \u003d userCmd.split(\"todo \")[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    ToDo t \u003d new ToDo(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DukeTaskList.addTaskList(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printAdd(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printSize(DukeTaskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"deadline\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(userCmd.split(\" \").length \u003d\u003d 1){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String[] deadline \u003d userCmd.split(\" /by \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String by \u003d deadline[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String desc \u003d deadline[0].substring(9);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    LocalDateTime formattedBy \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    Deadline t \u003d new Deadline(desc, formattedBy);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DukeTaskList.addTaskList(t);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printAdd(t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printSize(DukeTaskList);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(userCmd.split(\" \").length \u003d\u003d 1){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String[] event \u003d userCmd.split(\" /at \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String at \u003d event[1];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String desc \u003d event[0].substring(6);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    Event t \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    DukeTaskList.addTaskList(t);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printAdd(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printSize(DukeTaskList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else if(userCmd.split(\" \")[0].equals(\"find\")){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                if(userCmd.split(\" \").length \u003d\u003d 1){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }else{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    String find \u003d userCmd.split(\"find \")[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    StringBuilder foundTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    int findCounter \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    for(Task task: DukeTaskList.getTaskList()){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                        if(task.getDescription().contains(find)){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                            findCounter++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                            foundTasks.append(\"\\t\").append(findCounter).append(\".\").append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                    taskUi.printFind(foundTasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }catch(DukeException | IOException e ){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }catch(DateTimeParseException e){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"Input of /by has to be in \\\"dd/MM/yyyy HHmm\\\" format e.g \\\"14/03/1997 1159\\\"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public boolean getExitStatus(){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        return exitStatus;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealnickcheong": 122
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    protected ArrayList\u003cTask\u003e DukeTaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        this.DukeTaskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        return DukeTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void addTaskList(Task task){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        DukeTaskList.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void deleteTaskList(int i){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        DukeTaskList.remove(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealnickcheong": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printBye(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printWelcome(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printDone(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printDelete(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printAdd(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t\" + task.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printSize(TaskList taskList){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tNow you have \" + taskList.getTaskList().size() +\" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printTaskList(TaskList taskList){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        for(int i \u003d 0; i\u003ctaskList.getTaskList().size(); i++){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\t\" + (i+1) + \".\" + taskList.getTaskList().get(i).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    public void printFind(StringBuilder foundTasks){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        if(foundTasks.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\tNo Results\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            foundTasks.deleteCharAt(foundTasks.length() - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(foundTasks);  // Output user inputS"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "            System.out.println(\"\\t____________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "therealnickcheong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "therealnickcheong": 62
    }
  }
]

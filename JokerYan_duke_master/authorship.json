[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "run {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    standardInput \u003d System.in;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 25,
      "-": 16
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected boolean silent \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public abstract boolean execute();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public void setSilent() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        this.silent \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "//            if (!silent) Duke.getUI().showError(\"Invalid Command Received\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class ExitCommand extends Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class DoneCommand extends Command {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private int index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public DoneCommand(int i) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            index \u003d i;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                String msg \u003d Duke.getTaskList().markDone(index);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (!silent) Duke.getUI().showResponse(msg);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } catch (Parser.UserInputException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (!silent) Duke.getUI().showError(e.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class ListCommand extends Command {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private TaskList taskList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public ListCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (!silent) Duke.getUI().showResponse(this.taskList.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private TaskList taskList;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private int index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public DeleteCommand(TaskList taskList, int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.index \u003d index;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                String msg \u003d taskList.delete(index);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (!silent) Duke.getUI().showResponse(msg);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } catch (Parser.UserInputException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (!silent) Duke.getUI().showError(e.toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class FindCommand extends Command {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private TaskList taskList;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private String keyword;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public FindCommand(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            String msg \u003d this.taskList.findKeyword(keyword);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (!silent) Duke.getUI().showResponse(msg);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class AddCommand extends Command {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private TaskList taskList;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private Task.TaskType taskType;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private String name;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private Date time;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public AddCommand(TaskList taskList, Task.TaskType taskType, String name, Date time) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public boolean execute() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                case ToDo:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    task \u003d new Task.ToDo(name);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                case Deadline:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    task \u003d new Task.Deadline(name, time);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                case Event:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    task \u003d new Task.Event(name, time);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (!silent) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                String msg \u003d \"Got it. I\u0027ve added this task: \\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                msg +\u003d \"  \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                msg +\u003d \"Now you have \" + Integer.toString(taskList.size()) + \" task(s) in the list. \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                Duke.getUI().showResponse(msg);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 143
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    private static UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        run();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static TaskList getTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static UI getUI() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    private static void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        taskList \u003d Storage.readTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        while (!(command instanceof Command.ExitCommand)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            command.execute();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        ui.showMessage(\"Bye. Hope to see you again!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 32,
      "-": 3
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static Command parseCommand(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        UI ui \u003d Duke.getUI();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        TaskList taskList \u003d Duke.getTaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return new Command.ExitCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return new Command.ListCommand(taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                ui.showError(\"Please enter index of task after \\\u0027done\\\u0027\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return new Command.InvalidCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    int index \u003d parseIndex(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    return new Command.DoneCommand(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    ui.showError(e.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } catch (UserInputException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    ui.showError(\"Please enter correct task index\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                ui.showError(\"Please enter index of task after \\\u0027delete\\\u0027\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return new Command.InvalidCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    int index \u003d parseIndex(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    return new Command.DeleteCommand(taskList, index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    ui.showError(e.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } catch (UserInputException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    ui.showError(\"Please enter correct task index\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                ui.showError(\"Please enter keyword for searching after \\\u0027find\\\u0027\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                String keyword \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return new Command.FindCommand(taskList, keyword);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                return parseTask(taskList, input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } catch (UserInputException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                ui.showError(e.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return new Command.InvalidCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    private static int parseIndex(String input) throws NumberFormatException, UserInputException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String[] splited \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (splited.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            throw new UserInputException(\"Please enter task index\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return Integer.parseInt(splited[1]) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static Command parseTask(TaskList taskList, String input) throws UserInputException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Task.TaskType taskType;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Date time \u003d new Date();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            taskType \u003d Task.TaskType.ToDo;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            name \u003d input.substring(5);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            taskType \u003d Task.TaskType.Deadline;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            input \u003d input.substring(9);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (!input.contains(\" /by \")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"☹ OOPS!!! A deadline must have a time specified.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            name \u003d input.split(\" /by \", 2)[0];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            String timeString \u003d input.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                time \u003d Task.parseDate(timeString);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"Wrong date/time format. Write date/time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            taskType \u003d Task.TaskType.Event;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            input \u003d input.substring(6);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (!input.contains(\" /at \")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"☹ OOPS!!! A event must have a time specified.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            name \u003d input.split(\" /at \", 2)[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            String timeString \u003d input.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                time \u003d Task.parseDate(timeString);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                throw new Parser.UserInputException(\"Wrong date/time format. Write date/time in dd/MM/yyyy HHmm format.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            throw new Parser.UserInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return new Command.AddCommand(taskList, taskType, name, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class UserInputException extends Exception {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private String msg;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public UserInputException(String msg) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.msg \u003d msg;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 129
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static void saveTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String subDir \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (workingDir.endsWith(\"text-ui-test\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            subDir \u003d \".\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        FileOutputStream out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            File file \u003d new File(\".\" + subDir + \"\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            out \u003d new FileOutputStream(file, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                content +\u003d task.toFileString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            out.write(content.getBytes());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            System.out.println(\"Output file not found!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            System.out.println(\"Write to output file IO exception!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static TaskList readTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String subDir \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (workingDir.endsWith(\"text-ui-test\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            subDir \u003d \".\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        FileInputStream in;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        File file \u003d new File(\".\" + subDir + \"\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            in \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            Scanner scanner \u003d new Scanner(in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            ArrayList\u003cBoolean\u003e doneList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (input.length() \u003c\u003d 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    throw new StorageException(\"Invalid Save File!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (input.startsWith(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    doneList.add(true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } else if (input.startsWith(\"0\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    doneList.add(false);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    throw new StorageException(\"Invalid Save File!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                input \u003d input.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    Command adddCommand \u003d Parser.parseTask(taskList, input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    adddCommand.setSilent();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    adddCommand.execute();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                } catch (Parser.UserInputException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    throw new StorageException(\"Invalid Save File!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                if (doneList.get(i)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    taskList.get(i).markDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            Duke.getUI().showMessage(\"Save file successfully loaded...\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return taskList; //it is acceptable if there is no save file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            Duke.getUI().showError(\"Read save file IO exception\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } catch (StorageException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            Duke.getUI().showError(e.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class StorageException extends Exception {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private String msg;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public StorageException(String msg) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            super();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.msg \u003d msg;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 97
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected static SimpleDateFormat format \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public enum TaskType {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        ToDo, Deadline, Event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    protected String getStatus() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if(this.isDone){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"[\\u2713] \" + this.name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"[\\u2718] \" + this.name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return this.getStatus();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static Date parseDate(String dateString) throws ParseException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "//            System.out.println(dateString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return format.parse(dateString);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public boolean matchKeyword(String keyword) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return this.toString().contains(keyword);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    //------------ToDo-------------"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class ToDo extends Task {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public ToDo(String name) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            super(name);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskType \u003d TaskType.ToDo;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"[T]\" + this.getStatus();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toFileString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return (this.isDone ? \"1\" : \"0\") + \" todo \" + this.name;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    //------------Deadline-------------"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class Deadline extends Task {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private Date time;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public Deadline(String name, Date time) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            super(name);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskType \u003d TaskType.Deadline;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"[D]\" + this.getStatus() + \" (by: \" + formatDate() + \")\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toFileString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return (this.isDone ? \"1\" : \"0\") + \" deadline \" + this.name + \" /by \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    + formatDate();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        protected String formatDate() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return format.format(this.time);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    //------------Event-------------"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static class Event extends Task {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        private Date time;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public Event(String name, Date time) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            super(name);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.time \u003d time;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            this.taskType \u003d TaskType.Event;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"[E]\" + this.getStatus() + \" (at: \" + formatDate() + \")\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        public String toFileString() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return (this.isDone ? \"1\" : \"0\") + \" event \" + this.name + \" /at \""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                    + formatDate();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        protected String formatDate() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return format.format(this.time);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 129
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (this.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            return \"There is nothing in your list.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String msg \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        for (int i \u003d 0; i \u003c this.size(); i++) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            msg +\u003d \"\\n\" + (i + 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            msg +\u003d \". \" + this.get(i);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String findKeyword(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        ArrayList\u003cTask\u003e searchResult \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        for (Task task : this) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            if (task.matchKeyword(keyword)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                searchResult.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String msg \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (searchResult.size() \u003e 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            msg +\u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            for (int i \u003d 0; i \u003c searchResult.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                msg +\u003d \"\\n\" + (i + 1) + \". \" + searchResult.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            msg +\u003d \"There is no matching task in your list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String markDone(int index) throws Parser.UserInputException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d this.size()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            throw new Parser.UserInputException(\"Invalid Index\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        this.get(index).markDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        msg +\u003d this.get(index).toString() + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        msg +\u003d \"Now you have \" + Integer.toString(this.size())"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public String delete(int index) throws Parser.UserInputException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d this.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "            throw new Parser.UserInputException(\"Invalid index\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        Task deleted \u003d this.remove(index);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String msg \u003d \"Noted. I\u0027ve removed this task: \\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        msg +\u003d deleted + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        msg +\u003d \"Now you have \" + this.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 60
    }
  },
  {
    "path": "src/main/java/seedu/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_RESET \u003d \"\\u001B[0m\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_BLACK \u003d \"\\u001B[30m\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_RED \u003d \"\\u001B[31m\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_GREEN \u003d \"\\u001B[32m\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_YELLOW \u003d \"\\u001B[33m\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_BLUE \u003d \"\\u001B[34m\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_PURPLE \u003d \"\\u001B[35m\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_CYAN \u003d \"\\u001B[36m\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public static final String ANSI_WHITE \u003d \"\\u001B[37m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        logo \u003d \"Hello from\\n\" + logo + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        logo +\u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        showMessage(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public void showMessage(String msg) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public void showResponse(String msg) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        System.out.println(\"------------------------------\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        System.out.println(\"------------------------------\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "        System.out.println(ANSI_RED + msg + ANSI_RESET);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JokerYan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JokerYan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JokerYan": 39
    }
  }
]

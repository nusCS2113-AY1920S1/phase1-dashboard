[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "run{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 13,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * Abstract class that execute different commands"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Execute the corresponding command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public abstract void execute(TaskList task, Ui ui, Storage storage) throws ParseException, DukeException, IOException, ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 16
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * Child class of Task which defines a deadline task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected String period;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected Date date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.period \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.type\u003d\"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.period\u003dby;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * return a string in a decided form"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"[D][\"+ this.getStatusIcon() +\"] \" + super.toString() + \" (by: \" + period + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 23
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which store a deadline object in the task list when input is [deadline]+task+[/by]+date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public DeadlineCommand(String str){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.cmd \u003d str;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * add a task into the users\u0027 list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws ParseException, IOException, DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //Scanner ddlSc \u003d new Scanner(cmd).useDelimiter(\"\\\\s*/by\\\\s*\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //String description \u003d ddlSc.next();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //String period \u003d ddlSc.next();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String[] context \u003d cmd.substring(\"deadline\".length()).strip().split(\"/by\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (context.length !\u003d 2 || context[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            throw new DukeException(Message.INVALID_FORMAT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (context[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            throw new DukeException(Message.EMPTY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String description \u003d context[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String period \u003d context[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Deadline ddl \u003d new Deadline(description,period);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String[] parts \u003d period.split(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(parts.length\u003d\u003d3){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date dateEvt \u003d formatter.parse(period);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ddl.period \u003d dateEvt.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        task.add(ddl);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage.writeInto();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.deadline(ddl);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.showTotal(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 46
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which mark the corresponding object as done when input is [delete]+num"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public DeleteCommand(int i){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.num \u003d i;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * delete corresponding task from the list and also delete it in the external txt file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(num\u003etask.size()||num\u003c0){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(Message.OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.delete(task.get(num));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            task.remove(this.num);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.showTotal(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage.writeInto();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 27
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which mark the corresponding object as done when input is [done]+num"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private int num;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public DoneCommand(int i){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.num\u003di;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * Mark corresponding task as done and save it in the external txt file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(num\u003etask.size()||num\u003c0){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(Message.OUT_OF_BOUNDS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            task.get(num).markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.done(task.get(num));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage.writeInto();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Duke(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage \u003d new Storage(filePath,ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //read from a existing txt file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if(f.exists()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                List\u003cTask\u003e readed \u003d storage.readFrom();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                for(int i \u003d 0 ; i \u003c readed.size(); i++){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    tasks.add(readed.get(i));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                throw new DukeException(\"Oops! Could not find file!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //read in user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String fullCommand \u003d ui.read();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                if(c instanceof ExitCommand){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    isExit\u003dtrue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }finally{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                storage.update(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                storage.writeInto();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            new Duke(\"duke.txt\").run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"    \"+Message.NOT_FOUND);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 67,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * child class for Exception, will add in more customized methods in the future"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * Child class of Task which defines a event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected String period;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected Date date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Event(String description, String by){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.period \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.type\u003d\"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * return a string in a decided form"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"[E][\"+ this.getStatusIcon() +\"] \" + super.toString() + \" (at: \" + period + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 23
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which store an item event in the list input is [event]+task+[/at]+time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public EventCommand(String str){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.cmd \u003d str;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * read and store the event object into the Task List"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws ParseException, IOException, DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String[] context \u003d cmd.substring(\"deadline\".length()).strip().split(\"/at\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (context.length !\u003d 2 || context[1] \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            throw new DukeException(Message.INVALID_FORMAT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (context[0].strip().isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            throw new DukeException(Message.EMPTY);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String description \u003d context[0].strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String period \u003d context[1].strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Event evt \u003d new Event(description,period);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String[] parts \u003d period.split(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(parts.length\u003d\u003d3){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Date dateEvt \u003d formatter.parse(period);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            evt.period \u003d dateEvt.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        task.add(evt);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //storage.writeInto();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.event(evt);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.showTotal(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which exit from the Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * execute bye function in class Ui"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "       // storage.writeInto();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 18
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * A child class of Command which returns all relevant search result when the input is [find]+search key words"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public FindCommand(String str){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.key \u003d str;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * find all relevant results and store them in a separate list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        for(int i \u003d 0; i \u003c task.size(); i++){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if(task.get(i).description.contains(this.key)){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                Task cmd \u003d task.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                results.add(cmd);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.find(results);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 26
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which list out all items in the task list when input is list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * execute list function in class UI and list out all current items"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     public void execute(TaskList task,Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.list(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 16
    }
  },
  {
    "path": "src/main/java/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * Defined some commonly used warning sentences"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String UNKNOWN \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String EMPTY \u003d \"The command cannot be empty. :-(\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String INVALID_FORMAT \u003d \"Invalid format. Please check again\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String OUT_OF_BOUNDS \u003d \"Index requested is out of bounds!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static final String NOT_FOUND \u003d \"required File is not found!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //  public static final String FILE_NOT_SAVE \u003d \"File not saved! :-(\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "  //  public static final String CORRUPTED_TASK \u003d \"Task cannot be converted to String! :-(\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * This class transfer input into its corresponding command datatype"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String cmd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * return corresponding command based on the type of the input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param line user input without the type word"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return Command return a command data type"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static Command parse(String line) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String type \u003dtype(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String cmd;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"bye\": {return new ExitCommand();}//ok"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"list\": {return new ListCommand();}//ok"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"done\": {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                int i \u003d Integer.parseInt(cmd.strip())-1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }//ok"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"delete\": {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                int i \u003d Integer.parseInt(cmd.strip())-1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new DeleteCommand(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }//ok"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"find\": {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                String key \u003d cmd.strip();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new FindCommand(key);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }//ok"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"todo\": {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new TodoCommand(line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"deadline\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new DeadlineCommand(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            case\"event\": {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                cmd \u003dline.strip().split(\" \")[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                return new EventCommand(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                throw new DukeException(Message.UNKNOWN);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * get the type string of the input command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ipt user input"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return String that represents type of the command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private static String type(String ipt) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return ipt.strip().split(\" \")[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 64
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * This class stores and read data from a txt file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Storage{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private List\u003cTask\u003e listCmd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Storage(String path, Ui ui) throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.file \u003d path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        readFrom();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * update listCmd to current list of tasks before storing it"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void update(TaskList tasks){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            listCmd.clear();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                listCmd.add(tasks.get(i));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * read from an existing txt file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return tsk which is a TaskList with all stored command being written into it"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public List\u003cTask\u003e readFrom() throws FileNotFoundException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        List\u003cTask\u003e tsk \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            File f \u003d new File(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                tsk.add(StorageParser.takeTaskFromFile(s.nextLine()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        listCmd \u003d tsk;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return tsk;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     *write into an existing .txt file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void writeInto() throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Path file \u003d Paths.get(\"duke.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        FileWriter out \u003d new FileWriter(String.valueOf(file),false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        int sizeCommand \u003d listCmd.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        for(int i \u003d 0; i \u003c sizeCommand; i++){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            out.write(StorageParser.writeCmdAsString(listCmd.get(i)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        out.flush();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * expose listCmd for other classes to get access to it"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public List\u003cTask\u003e get (){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.listCmd;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 77
    }
  },
  {
    "path": "src/main/java/StorageParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * This class defines a few basic operations that we would be using while reading from or writing into a text file."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class StorageParser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //read file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * this function read from the txt file and transfer the lines into task objects"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param nextLine pass in the command line and turns it into a task object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return Task which is storable in a TaskList type of list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static Task takeTaskFromFile(String nextLine){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String[] lineParts \u003d nextLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String type \u003d lineParts[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String done \u003d lineParts[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String description \u003d lineParts[2];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //System.out.println(lineParts[0]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //System.out.println(lineParts[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "       //System.out.println(lineParts[2]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //System.out.println(lineParts[3]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Todo cmd \u003d new Todo(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            cmd.isDone \u003d (done.equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return  cmd;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String time \u003d lineParts[3];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Deadline cmd \u003d new Deadline(description,time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            cmd.isDone \u003d (done.equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return  cmd;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            String time \u003d lineParts[3];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Event cmd \u003d new Event(description,time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            cmd.isDone \u003d (done.equals(\"1\")) ? true : false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return  cmd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * this function transfer task objects into strings and write them into the txt file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param cmd a Task object"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return A string that can be stored in a txt file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    //write file"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public static String writeCmdAsString(Task cmd){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String done \u003d cmd.isDone?\"1\":\"0\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        if(cmd.type.equals(\"T\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return \"T|\"+ done +\"|\"+ cmd.description+\"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }else if(cmd.type.equals(\"D\")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return \"D|\"+ done +\"|\"+ cmd.description+ \"|\"+cmd.getPeriod()+\"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            return \"E|\"+ done +\"|\"+ cmd.description+ \"|\"+cmd.getPeriod()+\"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 55
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * Class Task defines object type Class which stores the task\u0027s type/status/content etc."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected String period;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function gets the status of the task and return the corresponding icon"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return an icon string which indicates the status of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function will mark an undone task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function gets the period String of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return period which is s String that indicates the time period set for this task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getPeriod(){return this.period;}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function sets the period String of the task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void setPeriod(String period) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.period \u003d period;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * This function return a string in a certain format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return a String can be directly printed by the list command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 51
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * a child class of ArrayList, for now don\u0027t have its own methods and can make defining of a list of tasks be easier"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 10
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * the child class of task that define a datatype \"todo\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.type\u003d\"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * transfer the data into a string that could be output directly"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return \"[T][\"+ this.getStatusIcon() +\"] \" + super.toString() ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 16
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * The child class of Command class which stores a td data type into the tasklist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String cmd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private String dummy;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public TodoCommand(String str){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        Scanner sc \u003d new Scanner(str);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.dummy \u003d sc.next();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //String arr[];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String description \u003d str.split(\" \", 2)[1].trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        this.cmd \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * execute function in class UI and store it into a tasklist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task the current list of the users\u0027 task objects"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param ui the user interface which defines the output based on different input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param storage the object that handles actions like reading from and writing into the external file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     public void execute(TaskList task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Todo td \u003d new Todo(this.cmd);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        task.add(td);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.todo(td);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        storage.writeInto();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.showTotal(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String getCmd(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "         return this.cmd;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " * defined many user inputs"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected Scanner scCmd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//    protected String type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    protected SimpleDateFormat formatter\u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.scCmd \u003d new Scanner(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "//        this.type \u003d scCmd.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * read the next line of input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @return a string of input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String line \u003d sc.nextLine().strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"\\n\" + line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * greet the users"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void greeting(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\\n\" + \"    What can I do for you?\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * exit from the duke"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void bye(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * list out all items"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param listCmd a list of Tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void list(List\u003cTask\u003e listCmd){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        int sizeCommand \u003d listCmd.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        for(int i \u003d 0; i \u003c sizeCommand; i++){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int num\u003di+1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Task cmd \u003d listCmd.get(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"    \"+num+\". \"+ cmd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * mark the status of the tsk as done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tsk"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void done(Task tsk){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\\n\"+\"    \" +tsk );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * delete a task from the list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tsk"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void delete(Task tsk){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Noted. I\u0027ve removed this task:\\n\"+\"    \" + tsk);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * find for a task with key words"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task a list of Tasks"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void find(TaskList task){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        int sizeCommand \u003d task.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        for(int i \u003d 0; i \u003c sizeCommand; i++){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            int num\u003di+1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            Task cmd \u003d task.get(i);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            System.out.println(\"    \"+num+\". \"+ cmd);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * output when a task is added"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showAdd(Task task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * store a task as a todotask"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tsk"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void todo(Task tsk){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \"+tsk);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * store a task as a deadline task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tsk"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void deadline(Task tsk) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \"+tsk);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * store a task as an event task"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param tsk"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void event(Task tsk) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task: \"+tsk);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * show errors while loading"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"OOPS, loading failed!\"+ e);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * show total numbers of tasks in the tasklist"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showTotal(TaskList task){"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    Now you have \"+ task.size()+\" tasks in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     * show seperation lines"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(\"    --------------------------------------------------------\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 166
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    public void test () throws DukeException, IOException, ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            storage \u003d new Storage(\"duke.txt\",ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            if(f.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                //tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                List\u003cTask\u003e readed \u003d storage.readFrom();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                for(int i \u003d 0 ; i \u003c readed.size(); i++){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                    tasks.add(readed.get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "                throw new DukeException(\"Oops! Could not find file!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            ui.showLoadingError((DukeException) e);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "            //tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        //Task task \u003d new Todo(\" JUnitTesting\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        String fullCommand \u003d (\"todo JUnitTesting\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        Todo td \u003d new Todo(\"JUnitTesting\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "       // storage.update(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        ui.list(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        System.out.println(td.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "        assertTrue(tasks.get(tasks.size()-1).toString().equals(td.toString()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lijiayu980606"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lijiayu980606": 50
    }
  }
]

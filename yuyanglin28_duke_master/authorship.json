[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + understandTime(by) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String understandTime(String t) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t1 \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t2 \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        SimpleDateFormat finalFormat \u003d new SimpleDateFormat(\"d MMMMM yyyy, hh:mmaaa\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String time \u003d t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (t.length() \u003c\u003d 15 \u0026\u0026 t.length() \u003e\u003d 12){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            for (int i\u003d0; i\u003ct.length(); i++){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (t.charAt(i)\u003d\u003d\u0027 \u0027){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t1 \u003d t.substring(0, i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t2 \u003d t.substring(i+1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    Date temp;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    //if t1 is longer, then assume t1 is date, t2 is time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (t1.length() \u003e t2.length() \u0026\u0026 t1.length() \u003c\u003d10 \u0026\u0026 t2.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format1.parse(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }else if (t2.length() \u003c\u003d10 \u0026\u0026 t1.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format2 \u003d new SimpleDateFormat(\"HHmm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format2.parse(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 56
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public DeadlineCommand(String content, String time){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        tasks.add(new Deadline(content, time));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showAdd(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 15
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.index \u003d index-1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showDelete(index, tasks);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 9
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.index \u003d index-1;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        tasks.markAsDone(index);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showDone(index, tasks);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 10
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    //Storage: deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    //Parser: deals with making sense of the user command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    //TaskList: contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        new Duke(\"/Users/linyy/Desktop/duke/src/main/java/data/duke.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "//TODO: invalid index for delete and done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "//TODO: enhance the format of the list"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 47,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public DukeException(String err){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + understandTime(at) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String understandTime(String t) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t1 \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t2 \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        SimpleDateFormat finalFormat \u003d new SimpleDateFormat(\"d MMMMM yyyy, hh:mmaaa\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String time \u003d t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (t.length() \u003c\u003d 15 \u0026\u0026 t.length() \u003e\u003d 12){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            for (int i\u003d0; i\u003ct.length(); i++){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (t.charAt(i)\u003d\u003d\u0027 \u0027){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t1 \u003d t.substring(0, i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t2 \u003d t.substring(i+1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    Date temp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    //if t1 is longer, then assume t1 is date, t2 is time"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (t1.length() \u003e t2.length() \u0026\u0026 t1.length() \u003c\u003d10 \u0026\u0026 t2.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format1.parse(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }else if (t2.length() \u003c\u003d10 \u0026\u0026 t1.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format2 \u003d new SimpleDateFormat(\"HHmm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format2.parse(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 55
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public EventCommand(String content, String time){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        tasks.add(new Event(content, time));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showAdd(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 15
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 6
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String key;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public FindCommand (String key){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.key \u003d key;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showFind(tasks, key);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showList();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        for (int j \u003d 0; j \u003c tasks.getSize(); j++) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            System.out.println(j + 1 + \".\" + tasks.get(j));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String[] commands \u003d command.split(\"\\\\s\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (commands[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands.length \u003e 1){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                int index \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The index of this command can\u0027t be empty\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands.length \u003e 1){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int i\u003d1; i\u003ccommands.length; i++){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    content \u003d content + \" \" + commands[i];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The description of todo command cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return new TodoCommand(content);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands[1] !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int i\u003d1; i\u003ccommands.length; i++){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (commands[i].equals(\"/by\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (commands.length\u003ei+1){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            for (int j\u003di+1; j\u003ccommands.length; j++)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                                time +\u003d commands[j];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    content +\u003d commands[i];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (content \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The description of deadline command cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            else if (time \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The deadline of this command cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                return new DeadlineCommand(content, time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String content \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String time \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands[1] !\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int i\u003d1; i\u003ccommands.length; i++){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (commands[i].equals(\"/at\")){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (commands.length\u003ei+1){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            for (int j\u003di+1; j\u003ccommands.length; j++)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                                time +\u003d commands[j];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    content +\u003d commands[i];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (content \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The description of event command cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            else if (time \u003d\u003d \"\"){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The time of this command cannot be empty.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                return new EventCommand(content, time);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands.length \u003e 1){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                int index \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The index of this command can\u0027t be empty\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else if (commands[0].equals(\"find\")){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String key;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (commands.length \u003d\u003d 2){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                key \u003d commands[1];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"The number of key of this command should be one\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return new FindCommand(key);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, bybut I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 112
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": " * Storage: deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Scanner load() throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            Scanner inFile \u003d new Scanner(new FileReader(filePath));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return inFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            throw new DukeException(\"Fail to load the file.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 22
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void changeStatusIcon(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (this.isDone \u003d\u003d false){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return \"[\"+getStatusIcon()+\"]\"+ getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public TaskList(Scanner inFile) throws DukeException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        while(inFile.hasNext()){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String type \u003d inFile.next();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String useless \u003d inFile.next();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String status \u003d inFile.next();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            useless \u003d inFile.next();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String content \u003d inFile.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (type.equals(\"T\") ){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                taskList.add(new Todo(content));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    taskList.get(taskList.size()-1).changeStatusIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else if (type.equals(\"D\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                String d, t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (content.charAt(k) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        t \u003d content.substring(k + 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        taskList.add(new Deadline(d, t));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList.get(taskList.size()-1).changeStatusIcon();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else if (type.equals(\"E\")){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                String d, t;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (content.charAt(k) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        t \u003d content.substring(k + 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        taskList.add(new Event(d, t));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList.get(taskList.size()-1).changeStatusIcon();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                throw new DukeException(\"Fail to read the content of the file.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void markAsDone(int index){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        taskList.get(index).changeStatusIcon();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Task get(int index){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void remove(int index){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 83
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 14
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    String content;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public TodoCommand(String content){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "       this.content \u003d content;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        tasks.add(new Todo(content));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        ui.showAdd(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": " * Ui: deals with interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private String line \u003d \"_______________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    private Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Fail to load the file.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String command \u003d input.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showError(String s){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showList(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showDone(int index, TaskList tasks){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public  void showAdd(TaskList tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.getSize()-1));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showDelete(int index, TaskList tasks){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void showFind(TaskList tasks, String key){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        int k \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        for (int j \u003d 0; j\u003ctasks.getSize(); j++){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (tasks.get(j).getDescription().contains(key)){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                System.out.println(k+\".\"+tasks.get(j));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                k++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 64
    }
  }
]

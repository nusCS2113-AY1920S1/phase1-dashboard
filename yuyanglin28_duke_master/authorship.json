[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + understandTime(by) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String understandTime(String t) throws ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t1 \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t2 \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        SimpleDateFormat finalFormat \u003d new SimpleDateFormat(\"d MMMMM yyyy, hh:mmaaa\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String time \u003d t;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (t.length() \u003c\u003d 15 \u0026\u0026 t.length() \u003e\u003d 12){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            for (int i\u003d0; i\u003ct.length(); i++){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (t.charAt(i)\u003d\u003d\u0027 \u0027){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t1 \u003d t.substring(0, i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t2 \u003d t.substring(i+1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    Date temp;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    //if t1 is longer, then assume t1 is date, t2 is time"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (t1.length() \u003e t2.length() \u0026\u0026 t1.length() \u003c\u003d10 \u0026\u0026 t2.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format1.parse(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }else if (t2.length() \u003c\u003d10 \u0026\u0026 t1.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format2 \u003d new SimpleDateFormat(\"HHmm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format2.parse(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 56
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    static Task[] taskList \u003d new Task[100];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    static int i \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String line \u003d \"_______________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        Scanner inFile \u003d new Scanner(new FileReader(\"/Users/linyy/Desktop/duke/src/main/java/data/duke.txt\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        while(inFile.hasNext()){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String type \u003d inFile.next();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String useless \u003d inFile.next();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String status \u003d inFile.next();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            useless \u003d inFile.next();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String content \u003d inFile.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            if (type.equals(\"T\") ){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                taskList[i] \u003d new Todo(content);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    taskList[i].changeStatusIcon();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else if (type.equals(\"D\")){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                String d, t;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (content.charAt(k) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        t \u003d content.substring(k + 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        taskList[i] \u003d new Deadline(d, t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList[i].changeStatusIcon();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }else if (type.equals(\"E\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                String d, t;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (content.charAt(k) \u003d\u003d \u0027|\u0027) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        t \u003d content.substring(k + 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        taskList[i] \u003d new Event(d, t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (status.equals(\"1\"))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList[i].changeStatusIcon();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        boolean valid;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            String command \u003d input.next();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            valid \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    for (int j \u003d 0; j \u003c i; j++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        System.out.println(j + 1 + \".\" + taskList[j]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    int index \u003d input.nextInt();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    taskList[index - 1].changeStatusIcon();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    System.out.println(\"  \" + taskList[index - 1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        String content \u003d input.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        validateInput(content);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        taskList[i] \u003d new Todo(content);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        outputTask(i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        i++;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    String content \u003d input.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    String d, t;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (content.charAt(k) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            t \u003d content.substring(k + 4);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList[i] \u003d new Deadline(d, t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    outputTask(i);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    String content \u003d input.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    String d, t;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    for (int k \u003d 0; k \u003c content.length(); k++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        if (content.charAt(k) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            d \u003d content.substring(0, k - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            t \u003d content.substring(k + 4);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            taskList[i] \u003d new Event(d, t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    outputTask(i);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    valid \u003d false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                validateCommand(valid);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            System.out.print(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public static void outputTask(int i) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"  \" + taskList[i]);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        i++;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        System.out.println(\"Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public static void validateInput(String s) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (s.equals(\"\"))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            throw new DukeException(\"The description of this command cannot be empty.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public static void validateCommand(boolean valid) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (valid \u003d\u003d false)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            throw new DukeException(\"The command is not valid\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 156,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public DukeException(String err){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + understandTime(at) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String understandTime(String t) throws ParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t1 \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String t2 \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        SimpleDateFormat finalFormat \u003d new SimpleDateFormat(\"d MMMMM yyyy, hh:mmaaa\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        String time \u003d t;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (t.length() \u003c\u003d 15 \u0026\u0026 t.length() \u003e\u003d 12){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            for (int i\u003d0; i\u003ct.length(); i++){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                if (t.charAt(i)\u003d\u003d\u0027 \u0027){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t1 \u003d t.substring(0, i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    t2 \u003d t.substring(i+1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    Date temp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    //if t1 is longer, then assume t1 is date, t2 is time"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    if (t1.length() \u003e t2.length() \u0026\u0026 t1.length() \u003c\u003d10 \u0026\u0026 t2.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format1 \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format1.parse(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }else if (t2.length() \u003c\u003d10 \u0026\u0026 t1.length() \u003c\u003d4){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        SimpleDateFormat format2 \u003d new SimpleDateFormat(\"HHmm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        temp \u003d format2.parse(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                        time \u003d finalFormat.format(temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 55
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public void changeStatusIcon(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        if (this.isDone \u003d\u003d false){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return \"[\"+getStatusIcon()+\"]\"+ getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yuyanglin28"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yuyanglin28": 14
    }
  }
]

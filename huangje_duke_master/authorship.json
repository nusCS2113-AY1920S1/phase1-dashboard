[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by\" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isDeadline(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "//@@author huangje"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public static void main(String[] args) throws NoCommandException, NoTaskException, NoDateException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        String line \u003d \"______________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Task[] tasks \u003d new  Task[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "        SaveFile saveFile \u003d new SaveFile(\"/home/huang/CS2113/duke/data/dukeHistory\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        int tasksId \u003d saveFile.readFile(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        while(running){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "            Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String message \u003d input.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] tokens \u003d message.split(\" \"); //parse string into done and the number"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if(tokens[0].equals(\"done\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "                int idTaskDone \u003d Integer.parseInt(tokens[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "                if(idTaskDone \u003e tasksId || idTaskDone \u003c\u003d 0){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(line + \"Sorry, this task doesn\u0027t exist \\n\" + line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    tasks[(idTaskDone - 1)].isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(line + \"Nice! I\u0027ve marked this task as done : \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            \"[\" + tasks[(idTaskDone - 1)].getStatusIcon() + \"] \" + tasks[(idTaskDone - 1)].description + \"\\n\" + line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else if(message.equals(\"bye\")){ //exit"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "                System.out.println(line + \"Bye. Hope to see you again soon ! \\n\" + line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "                saveFile.writeFile(tasks, tasksId);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "                running \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else if(message.equals(\"list\")){ //listing all tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "                System.out.print(line + \"Here are the tasks in your list \\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "                for(int i \u003d0; i \u003ctasksId; i++){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    int numbTask \u003d i+1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(numbTask + \". \" + \"[\" + tasks[i].getStatusIcon() + \"] \" + tasks[i].description);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "                System.out.print(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if (!(tokens[0].equals(\"todo\") || tokens[0].equals(\"deadline\") || tokens[0].equals(\"event\"))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        throw new NoCommandException(line + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (tokens[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            String[] todoMessage \u003d message.split(\"todo\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            if (todoMessage.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    throw new NoTaskException(line + \"OOPS!!! The description of a todo cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                tasks[tasksId] \u003d new Todo(todoMessage[1].trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                int numberTask \u003d tasksId + 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                System.out.println(line + \"Got it. I\u0027ve added this task : \\n\" + tasks[tasksId].toString() +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        \"\\nNow you have \" + numberTask + \" tasks in the list. \\n\" + line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                tasksId++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        else if (tokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            String[] messageWoDeadline \u003d message.split(\"deadline\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            if (messageWoDeadline.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                throw new NoTaskException(line + \"OOPS!!! The description of a deadline cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                String[] deadlineMessage \u003d messageWoDeadline[1].split(\"by\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                if (deadlineMessage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    throw new NoDateException(line + \"OOPS!!! The date of a deadline cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    if (deadlineMessage[0].isBlank()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        throw new NoTaskException(line + \"OOPS!!! The description of a deadline cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    else if (deadlineMessage[1].isBlank()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        throw new NoDateException(line + \"OOPS!!! The date of a deadline cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        tasks[tasksId] \u003d new Deadline(deadlineMessage[0].trim(), deadlineMessage[1].trim());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        int numberTask \u003d tasksId + 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        System.out.println(line + \"Got it. I\u0027ve added this task : \\n\" + tasks[tasksId].toString() +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                                \"\\nNow you have \" + numberTask + \" tasks in the list. \\n\" + line);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        tasksId++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else if (tokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            String[] messageWoEvent \u003d message.split(\"event\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            if (messageWoEvent.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                throw new NoTaskException(line + \"OOPS!!! The description of a event cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                String[] eventMessage \u003d messageWoEvent[1].split(\"at\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                if (eventMessage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    throw new NoDateException(line + \"OOPS!!! The date of a event cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    if (eventMessage[0].isBlank()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        throw new NoTaskException(line + \"OOPS!!! The description of a event cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    else if (eventMessage[1].isBlank()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        throw new NoDateException(line + \"OOPS!!! The date of a event cannot be empty\\n\" + line);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        tasks[tasksId] \u003d new Event(eventMessage[0].trim(), eventMessage[1].trim());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        int numberTask \u003d tasksId + 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        System.out.println(line + \"Got it. I\u0027ve added this task : \\n\" + tasks[tasksId].toString() +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                                \"\\nNow you have \" + numberTask + \" tasks in the list. \\n\" + line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                        tasksId++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }catch (NoCommandException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }catch (NoTaskException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }catch (NoDateException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    System.out.println(e);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 137
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at\" + at +\")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isEvent(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 22
    }
  },
  {
    "path": "src/main/java/NoCommandException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoCommandException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 5
    }
  },
  {
    "path": "src/main/java/NoDateException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoDateException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 5
    }
  },
  {
    "path": "src/main/java/NoTaskException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoTaskException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoTaskException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 6
    }
  },
  {
    "path": "src/main/java/SaveFile.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class SaveFile {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public SaveFile(String file){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.file \u003d new File(file);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public int readFile(Task[] task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "            sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        int numberTasks \u003d 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] tokens \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "            switch (tokens[0]){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"T\" :"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Todo(tokens[2], true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Todo(tokens[2], false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"D\" :"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Deadline(tokens[2], tokens[3], true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Deadline(tokens[2], tokens[3], true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Event(tokens[2], tokens[3], true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        task[numberTasks] \u003d new Event(tokens[2], tokens[3], true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "            numberTasks++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return numberTasks;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void writeFile(Task[] tasks, int numberTasks){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fileWriter \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "                for (int i \u003d 0; i\u003cnumberTasks; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if (tasks[i].isTodo()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (tasks[i].isDone) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"T/1/\" + tasks[i].description + \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"T/0/\" + tasks[i].description+ \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    } else if (tasks[i].isDeadline()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (tasks[i].isDone) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D/1/\" + tasks[i].description + \"/\" + ((Deadline) tasks[i]).by+ \"\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D/0/\" + tasks[i].description + \"/\" + ((Deadline) tasks[i]).by+ \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    } else if (tasks[i].isEvent()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (tasks[i].isDone) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D/1/\" + tasks[i].description + \"/\" + ((Event) tasks[i]).at+ \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D/0/\" + tasks[i].description + \"/\" + ((Event) tasks[i]).at+ \"\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 99
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[\" + getStatusIcon()+ \"]\" + this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isDeadline(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isTodo(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isEvent(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 36
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isTodo(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 18
    }
  }
]

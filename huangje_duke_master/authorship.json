[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Represent all the commands that can add a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * add the task to the task list, show the message, and save the task to the history file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException not used"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException throws exception when there are some problems with the storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui.showAdd(this.task, tasks.tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        storage.save(tasks.tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 22
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Command is the abstract class for all the command context which allow us to create or manipulate task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException exception throws when user try to delete or complete a task that doesn\u0027t exist"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException exception throws when there is some problem with the history file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Return a boolean to know if it\u0027s an ExitComand"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return false when it\u0027s not an ExitCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 23
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the deadline task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param by the deadline of a deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor that specifies the whether the task has been completed or not"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a deadline task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param by the deadline of a deadline task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param isDone if the task has been completed of not"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * visualize a deadline task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return the string format to see a deadline task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is a deadline task of not"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isDeadline(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 46
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " * The deadline command that will add a deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a deadline task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param date the date of a deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public DeadlineCommand(String description, LocalDateTime date){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 25
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * The delete command that will delete a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected int indexTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param index the task number that will be deleted"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.indexTask \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * delete the task, show the deleted task and update the history"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException throws exception when the task number doesn\u0027t correspond to an task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException throws exception when there are some problems with the storage"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        if(this.indexTask \u003e tasks.tasks.size() || this.indexTask \u003c 0){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new UnknownTaskException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "            Task task \u003d tasks.deleteTask(indexTask - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "            ui.showDelete(task, indexTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "            storage.save(tasks.tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 33
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected int indexTask;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param index the task number that has to be marked as completed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.indexTask \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * update the task list, show the message, and save it to the history"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException throws exception when the task number doesn\u0027t correspond to an task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException throws exception when there are some problems with the storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "        if(this.indexTask \u003e tasks.tasks.size() || this.indexTask \u003c 0){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new UnknownTaskException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "            tasks.tasks.get(indexTask - 1).isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "            ui.showDone(tasks.tasks.get(indexTask - 1));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "            storage.save(tasks.tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "//@@author huangje"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " * The main class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param filePath the path to the history file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "        new Duke(\"/home/huang/CS2113/duke/data/dukeHistory\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "huangje": 47
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the superclass that contains all the duke exception"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public DukeException(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return the error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"There are some problems in Duke\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 17
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when there is no task to initialized the task list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public EmptyTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"There are no task\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the event task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected LocalDateTime at1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected LocalDateTime at2;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a deadline task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param at1 the start date of a deadline task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param at2 the end date of a deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Event(String description, LocalDateTime at1, LocalDateTime at2) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at1 \u003d at1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at2 \u003d at2;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor that specifies the whether the task has been completed or not"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a deadline task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param at1 the start date of a deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param at2 the end date of a deadline task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param isDone if the task has been completed of not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Event(String description, LocalDateTime at1, LocalDateTime at2, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at1 \u003d at1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.at2 \u003d at2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * visualize a event task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return the string format to see a event task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at \" + at1.toString() + \" \" + at2.toString() +\")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is an event task of not"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isEvent(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 48
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the event command that will add a event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of an event task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param date1 the start date of an event task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param date2 the end date of an event task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public EventCommand(String description, LocalDateTime date1, LocalDateTime date2){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.task \u003d new Event(description, date1, date2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 24
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the exit command that will exit the software"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * save every task to the history file and exit the software"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException not used"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException throws exception when there are some problems with the storage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        storage.save(tasks.tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * check if it is an exit command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 28
    }
  },
  {
    "path": "src/main/java/FileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when there is a problem with the file like."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " * For example when the file doesn\u0027t exist, can\u0027t be read or written"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class FileException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public FileException(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"File doesn\u0027t exist or cannot be created or cannot be opened\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 19
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the find command that will try to find a task from a keyword"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param keyword the keyword in order to find the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public FindCommand(String keyword){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * will find the task and show to the user all the task that correspond to the keyword"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException not used"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException not used"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ArrayList\u003cTask\u003e findTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ArrayList\u003cInteger\u003e listIndexTask\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "        for (Task t : tasks.tasks){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if(t.description.contains(this.keyword)){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "                findTasks.add(t);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "                listIndexTask.add(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui.showFind(findTasks, listIndexTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 40
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the list command that will show us all the task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * will show all the task i the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of all Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param ui the class that deals will all interaction with the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param storage the place where all task will be stock"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws UnknownTaskException not used"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException not used"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 19
    }
  },
  {
    "path": "src/main/java/NoCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when the user\u0027s input doesn\u0027t correspond to any known command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoCommandException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 18
    }
  },
  {
    "path": "src/main/java/NoDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when the user forget the date for a deadline or event task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoDateException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoDateException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"OOPS!!! The date cannot be empty\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 18
    }
  },
  {
    "path": "src/main/java/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when there is no description for a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoDescriptionException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"OOPS!!! The description of a task cannot be empty\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 19
    }
  },
  {
    "path": "src/main/java/NoKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when the user forgot the keyword for the find command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoKeywordException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoKeywordException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"OOPS! You forgot to write the keyword \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 17
    }
  },
  {
    "path": "src/main/java/NoNumberTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when the task number is not specified for the delete and done command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class NoNumberTaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public NoNumberTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"OOPS! You have to put the task number n\\\"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 17
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the parser class that will parse the user\u0027s input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * this method will parse the user\u0027s input and throw an error if the input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * doesn\u0027t correspond to a known command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param cmd the user\u0027s input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return a command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws NoNumberTaskException throws exception when the number is not specified in delete/mark done command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws NoKeywordException throws exception when the keyword is not specified in find command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws NoDescriptionException throws exception when the description is not specified for a task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws NoDateException throws exception when the date is not specified for deadline and event task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws NoCommandException throws exception when the command is unknown"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public static Command parse(String cmd) throws NoNumberTaskException, NoKeywordException, NoDescriptionException, NoDateException, NoCommandException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "        String[] tokens \u003d cmd.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "        if(tokens[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoNumberTaskException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "                if(!tokens[1].matches(\"\\\\d+\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    throw new NoNumberTaskException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if(cmd.equals(\"bye\")){ //exit"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if(cmd.equals(\"list\")){ //listing all tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if(tokens[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if (tokens.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoNumberTaskException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "                if(!tokens[1].matches(\"\\\\d+\")){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    throw new NoNumberTaskException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(tokens[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if(tokens[0].equals(\"find\")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if(tokens.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoKeywordException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "                return new FindCommand(tokens[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if(tokens[0].equals(\"todo\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] todoMessage \u003d cmd.split(\"todo\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if (todoMessage.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoDescriptionException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": "                return new TodoCommand(todoMessage[1].trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if (tokens[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] messageWoDeadline \u003d cmd.split(\"deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if (messageWoDeadline.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoDescriptionException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "                String[] deadlineMessage \u003d messageWoDeadline[1].split(\"/by\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "                if (deadlineMessage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    throw new NoDateException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if (deadlineMessage[0].isBlank()) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        throw new NoDescriptionException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else if (deadlineMessage[1].isBlank()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        throw new NoDateException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        LocalDateTime date \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        try{"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            date \u003d LocalDateTime.parse(deadlineMessage[1].trim(), formatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }catch(Exception e){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            throw new NoDateException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        return new DeadlineCommand(deadlineMessage[1].trim(), date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else if (tokens[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] messageWoEvent \u003d cmd.split(\"event\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huangje"
        },
        "content": "            if (messageWoEvent.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huangje"
        },
        "content": "                throw new NoDescriptionException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huangje"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huangje"
        },
        "content": "                String[] eventMessage \u003d messageWoEvent[1].split(\"/at\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huangje"
        },
        "content": "                if (eventMessage.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    throw new NoDateException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huangje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if (eventMessage[0].isBlank()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        throw new NoDescriptionException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else if (eventMessage[1].isBlank()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        throw new NoDateException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        String[] eventDate \u003d eventMessage[1].split(\"-\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if(eventDate.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            throw new NoDateException();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else if (eventDate[0].isBlank() || eventDate[1].isBlank()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            throw new NoDateException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            LocalDateTime date1 \u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            LocalDateTime date2 \u003d null;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            try{"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy kkmm\", Locale.ENGLISH); //the date format must be this one"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                date1 \u003d LocalDateTime.parse(eventDate[0].trim(), formatter);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                date2 \u003d LocalDateTime.parse(eventDate[1].trim(), formatter);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }catch(Exception e){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huangje"
        },
        "content": "                                throw new NoDateException();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            return new EventCommand(eventMessage[0].trim(), date1, date2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new NoCommandException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 147
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Storage will deal with reading or writing into a file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor that will read a file, or create it if it doesn\u0027t exist"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param file the path to the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Storage(String file){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.file \u003d new File(file);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * read the file and write all the task to an array of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * if the file is empty, the array is empty too"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return an array of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException thrown when there is a reading error of the file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Scanner sc \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "            sc \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new FileException();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "            String[] tokens \u003d line.split(\"//\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd kk:mm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "            switch (tokens[0]){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"T\" :"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Todo(tokens[2], true));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Todo(tokens[2], false));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"D\" :"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    String dateD \u003d tokens[3].replace(\"T\", \" \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Deadline(tokens[2], LocalDateTime.parse(dateD, formatter), true));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Deadline(tokens[2], LocalDateTime.parse(dateD, formatter), true));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    String dateE1 \u003d tokens[3].replace(\"T\", \" \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    String dateE2 \u003d tokens[4].replace(\"T\", \" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if(tokens[1].equals(\"1\")){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Event(tokens[2], LocalDateTime.parse(dateE1, formatter), LocalDateTime.parse(dateE2, formatter), true));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        tasks.add(new Event(tokens[2], LocalDateTime.parse(dateE2, formatter), LocalDateTime.parse(dateE2, formatter), true));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * write all task to the files"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks all the tasks that have to be written to the file"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws FileException thrown when there is writing problem to the files"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws FileException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "        FileWriter fileWriter \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fileWriter \u003d new FileWriter(this.file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "                for (Task task : tasks){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    if (task.isTodo()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (task.isDone) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"T//1//\" + task.description + \"\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"T//0//\" + task.description+ \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    } else if (task.isDeadline()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (task.isDone) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D//1//\" + task.description + \"//\" + ((Deadline) task).by.toString()+ \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D//0//\" + task.description + \"//\" + ((Deadline) task).by.toString()+ \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    } else if (task.isEvent()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        if (task.isDone) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D//1//\" + task.description + \"//\" + ((Event) task).at1.toString()+ \"//\" + ((Event) task).at2.toString() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huangje"
        },
        "content": "                            fileWriter.write(\"D//0//\" + task.description + \"//\" + ((Event) task).at1.toString()+ \"//\" + ((Event) task).at2.toString() +\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huangje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huangje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huangje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huangje"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huangje"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huangje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huangje"
        },
        "content": "        catch(IOException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new FileException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 125
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Task is the abstract class for all the task context"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor in abstract task in order to simplify the code"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor in abstract task in order to simplify the code that specifies the whether"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * the task has been completed or no"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param isDone if the task has been completed of not"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * create a string depending of the isdone"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return check box"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * visualize a event task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return the string format to see a task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[\" + getStatusIcon()+ \"] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is a deadline task of not"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isDeadline(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is a todo task of not"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isTodo(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is an event task of not"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return false"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isEvent(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 68
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": " * will contains all the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the array of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @throws EmptyTaskException thrown when there is no task to be initialized"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) throws EmptyTaskException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        if(tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "            this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor called when there is no task in the file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * add a task to the array"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * remove a task from the list and return it"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param indexTask task number"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return a task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Task deleteTask(int indexTask){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return this.tasks.remove(indexTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 46
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the todo task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a todo task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor that specifies the whether the task has been completed or not"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description description the description of a todo task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param isDone if the task has been completed of not"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * visualize a event task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return the string format to see a event task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * to know if whether is a todo task of not"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public boolean isTodo(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 36
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * the todo command that will add a todo task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param description the description of a todo task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public TodoCommand(String description){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "        task \u003d new Todo(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnknownTaskException, FileException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": " * deal with the interaction between the user and the software"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the exception message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param error exception message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showError(String error){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * a line"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"\\n______________________________________________________________\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * shows all the tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the list of task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showList(TaskList tasks){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "        int indexTask \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "        for (Task t : tasks.tasks){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "            System.out.println(indexTask + \".\" + t.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "            indexTask++;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the task that has been deleted"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param task the task that has been deleted"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param numberTask the number of tasks remaining"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showDelete(Task task, int numberTask){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "                task.toString() + \"\\n\" + \"Now you have \" + numberTask + \" tasks in the list \\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the task that has been marked as done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param task the task that has been done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showDone(Task task){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done : \\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the exit message"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showExit(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon !\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show all the tasks corresponding to the find keyword"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param tasks the tasks corresponding to the find keyword"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param listIndexTask the task number"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e tasks, ArrayList\u003cInteger\u003e listIndexTask){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list: \\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "        for (Task t : tasks){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "            System.out.println(listIndexTask.get(index) + \".\" + t.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the task that has been add"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param task the task that has been add"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @param numberTask the total number of tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showAdd(Task task, int numberTask){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task : \\n\" + task.toString() +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "                \"\\nNow you have \" + numberTask + \" tasks in the list\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the welcome message"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huangje"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * show the error message when no task were loaded"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huangje"
        },
        "content": "        System.out.println(\"No task were loaded\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * read the nextline of the scanner"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * @return return the user\u0027s input"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 121
    }
  },
  {
    "path": "src/main/java/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": " * Exception thrown when the task number doesn\u0027t correspond to a known task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public UnknownTaskException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "        return \"Sorry, this task doesn\u0027t exist\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 17
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "huangje"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "huangje"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "huangje"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testParse(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "huangje"
        },
        "content": "         Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "huangje"
        },
        "content": "         Command cmd \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "huangje"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "huangje"
        },
        "content": "             cmd \u003d parser.parse(\"todo testTodo\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "huangje"
        },
        "content": "         } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "huangje"
        },
        "content": "             e.printStackTrace();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "huangje"
        },
        "content": "         }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "huangje"
        },
        "content": "         assertTrue(cmd instanceof TodoCommand, \"command must be a TodoCommand\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "huangje"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "huangje"
        },
        "content": "             cmd \u003d parser.parse(\"deadline testDeadline /by 01/01/2019 0520\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "huangje"
        },
        "content": "         } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "huangje"
        },
        "content": "             e.printStackTrace();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "huangje"
        },
        "content": "         }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "huangje"
        },
        "content": "         assertTrue(cmd instanceof DeadlineCommand, \"command must be a DeadlineCommand\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "huangje"
        },
        "content": "         try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "huangje"
        },
        "content": "             cmd \u003d parser.parse(\"event testEvent /at 01/01/2019 0520 - 02/01/2019 2030\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "huangje"
        },
        "content": "         } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "huangje"
        },
        "content": "             e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "huangje"
        },
        "content": "         }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "huangje"
        },
        "content": "         assertTrue(cmd instanceof EventCommand, \"command must be a EventCommand\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"event testEvent /at 01/01/2019 0520 - 02/01/2019 2030\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof EventCommand, \"command must be a EventCommand\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof ListCommand, \"command must be a ListCommand\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"bye\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof ExitCommand, \"command must be a ExitCommand\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof DeleteCommand, \"command must be a DeleteCommand\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof DoneCommand, \"command must be a DoneCommand\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "huangje"
        },
        "content": "            cmd \u003d parser.parse(\"find haaaa\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "huangje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "huangje"
        },
        "content": "        assertTrue(cmd instanceof FindCommand, \"command must be a FindCommand\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testParseNoDescriptionException(){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"todo\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no description\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"description\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no description\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"description\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"deadline\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no description\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"description\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"deadline /by 21/02/02 2030\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no description\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"description\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event /at 01/01/2019 0520 - 02/01/2019 2030 \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no description\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"description\"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testParseNoCommandException(){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"blablabla\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no task\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"means\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "huangje"
        },
        "content": "            fail(\"should throw exception when there are no command\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoCommandException | NoDescriptionException | NoKeywordException | NoDateException | NoNumberTaskException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"means\"));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testParseNoKeywordException(){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"find\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"keyword\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testParseNoNumberTaskException(){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"delete\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"number\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"done\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"number\"));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "huangje"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "huangje"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "huangje"
        },
        "content": "    public void testNoDateException(){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "huangje"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event testEvent\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event testEvent /at\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event testEvent /at 21/02/1998 2030\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"event testEvent\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"deadline testDeadline /by\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "huangje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "huangje"
        },
        "content": "            parser.parse(\"deadline testDeadline \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "huangje"
        },
        "content": "        } catch (NoNumberTaskException | NoCommandException | NoKeywordException | NoDescriptionException | NoDateException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "huangje"
        },
        "content": "            assertTrue(e.getMessage().contains(\"date\"));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "huangje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "huangje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "huangje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "huangje": 178
    }
  }
]

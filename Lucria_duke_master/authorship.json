[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 26,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import views.CLIView;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Main class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param args Refers to CLI arguments"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        CLIView cliView \u003d new CLIView();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        cliView.start();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 12,
      "-": 3
    }
  },
  {
    "path": "src/main/java/controllers/ConsoleInputController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ITask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import views.CLIView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ConsoleInputController implements IViewController {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private CLIView consoleView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private TaskFactory taskFactory;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String filePath \u003d \"D:\\\\For Git\\\\CS2113_Duke\\\\src\\\\main\\\\java\\\\saves\\\\TaskLists.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param view : takes in a View model, in this case a command line view."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ConsoleInputController(CLIView view) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.consoleView \u003d view;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.taskFactory \u003d new TaskFactory();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method that is called upon receiving commands from CLI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param input : Input typed by user into CLI"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void onCommandReceived(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.end();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.printAllTasks(taskList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.markDone(taskList, input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            saveData();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleView.deleteTask(taskList, input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            saveData();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                consoleView.findTask(taskList, input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException newException) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                consoleView.invalidCommandMessage(newException);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            // TODO refactor this to repository (3T architecture)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                ITask newTask \u003d taskFactory.createTask(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                taskList.addToList(newTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                consoleView.addMessage(newTask, taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                saveData();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            } catch (DukeException newException) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                consoleView.invalidCommandMessage(newException);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method that is called in order to saveData to persistent storage."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            FileOutputStream file \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(file);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            out.writeObject(taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            out.flush();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method that is called when reading data from persistent storage."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * If file read is empty, will throw EOFException which is suppressed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * If file read is corrupted, will throw IOException which is suppressed also."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void readData() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            ObjectInputStream in \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            this.taskList \u003d (TaskList) in.readObject();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            in.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            e.getSuppressed();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 102
    }
  },
  {
    "path": "src/main/java/controllers/IViewController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IViewController {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void onCommandReceived(String input) throws DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void saveData();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void readData();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 9
    }
  },
  {
    "path": "src/main/java/controllers/TaskFactory.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package controllers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ITask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ToDos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class TaskFactory {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Factory class responsible for creation of objects based on interface."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param input : Command typed into CLI"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @return : returns an models.ITask based on command typed into CLI"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @throws DukeException : when command entered does not match existing Tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ITask createTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String[] allArgs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        List\u003cString\u003e listArgs \u003d new ArrayList\u003c\u003e(Arrays.asList(allArgs));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String tempString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String[] parsedStrings;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String formattedDate;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        switch (allArgs[0]) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            listArgs.remove(0);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (listArgs.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            String description \u003d String.join(\" \", listArgs);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new ToDos(description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            listArgs.remove(0); // Remove \"deadline\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            tempString \u003d String.join(\" \", listArgs);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            parsedStrings \u003d tempString.split(\" /by \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                // Correct format as 2 December 2019, 6 PM"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                date \u003d formatter.parse(parsedStrings[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String hour \u003d new SimpleDateFormat(\"hh\").format(date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String periodMarker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String formattedTime \u003d hour + \".\" + min + \" \" + periodMarker;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                formattedDate \u003d new SimpleDateFormat(\"d MMMM yyyy\").format(date) + \" \" + formattedTime;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                // Invalid Date and Time, revert back to lazyTiming"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                return new Deadline(parsedStrings[0], parsedStrings[1]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new Deadline(parsedStrings[0], formattedDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            listArgs.remove(0); // Remove \"event\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            tempString \u003d String.join(\" \", listArgs);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            parsedStrings \u003d tempString.split(\" /at \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                // Correct format as 2 December 2019, 6 PM"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                date \u003d formatter.parse(parsedStrings[1]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String hour \u003d new SimpleDateFormat(\"hh\").format(date);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String min \u003d new SimpleDateFormat(\"mm\").format(date);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String periodMarker \u003d new SimpleDateFormat(\"a\").format(date);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                String formattedTime \u003d hour + \".\" + min + \" \" + periodMarker;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                formattedDate \u003d new SimpleDateFormat(\"d MMMM yyyy\").format(date) + \" \" + formattedTime;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                // Invalid Date and Time, revert back to lazyTiming"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                return new Event(parsedStrings[0], parsedStrings[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            return new Event(parsedStrings[0], formattedDate);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 85
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 8
    }
  },
  {
    "path": "src/main/java/models/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class Deadline implements ITask, Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Class representing the Deadline data model."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String initials;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Constructor of Deadline data model."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param description : Description of new task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param dueDate : Due date of deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.initials \u003d \"D\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.description + \" (by: \" + this.dueDate + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getInitials() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.initials;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 46
    }
  },
  {
    "path": "src/main/java/models/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class Event implements ITask, Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Class representing the Event class model."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String initials;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Constructor of Event data model."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param description : Description of the Event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param timing : Timing at which the Event is held"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.initials \u003d \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.description + \" (at: \" + this.timing + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getInitials() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.initials;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 46
    }
  },
  {
    "path": "src/main/java/models/ITask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface ITask extends Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    String getStatusIcon();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void markAsDone();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    String getInitials();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 13
    }
  },
  {
    "path": "src/main/java/models/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ArrayList\u003cITask\u003e listOfTasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ArrayList\u003cITask\u003e searchedTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void addToList(ITask newTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.listOfTasks.add(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void deleteFromList(ITask oldTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        listOfTasks.remove(oldTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ArrayList\u003cITask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ITask getTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfTasks.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.listOfTasks.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ArrayList\u003cITask\u003e getSearchedTasks(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String [] allinputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        searchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (ITask task : listOfTasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (task.getDescription().contains(allinputs[1])) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                searchedTasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return searchedTasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 44
    }
  },
  {
    "path": "src/main/java/models/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package models;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class ToDos implements ITask, Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Class representing the ToDos data model."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private String initials;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Constructor of ToDos data model."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param description : Description of new task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.initials \u003d \"T\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public String getInitials() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return this.initials;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 43
    }
  },
  {
    "path": "src/main/java/repositories/DukeRepository.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package repositories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ITask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class DukeRepository implements IRepository {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ArrayList\u003cITask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void addToRepo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public ITask getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        return 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 33
    }
  },
  {
    "path": "src/main/java/repositories/IRepository.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package repositories;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ITask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public interface IRepository {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    ArrayList\u003cITask\u003e getAllTasks();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void addToRepo();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    ITask getTask();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    int getNumTasks();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void markDone();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 13
    }
  },
  {
    "path": "src/main/java/views/CLIView.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "package views;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import controllers.ConsoleInputController;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ITask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class CLIView {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private final String horiLine \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    private ConsoleInputController consoleInputController;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public CLIView() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        this.consoleInputController \u003d new ConsoleInputController(this);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to call when View model is started."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void start() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        consoleInputController.readData();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            consoleInputController.onCommandReceived(command);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to be called when user says bye to exit the program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\t Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to be called when user wishes to add a new Task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param newTask : A new task that is added by the user. Task is created by Factory."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param taskList : List of tasks holding all the tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void addMessage(ITask newTask, TaskList taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.print(\"\\t  \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"[\" + newTask.getInitials() + \"]\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + \"[\" + newTask.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                + newTask.getDescription()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String grammerTasks \u003d taskList.getNumOfTasks() \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tNow you have \" + taskList.getNumOfTasks() + \" \" + grammerTasks + \" in your list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to be called when user calls \"list\"."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Prints to View all the current tasks added."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param taskList : List of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getAllTasks().size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.print(\"\\t\" + (i + 1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\".[\" + taskList.getAllTasks().get(i).getInitials() + \"]\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    + \"[\" + taskList.getAllTasks().get(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    + taskList.getAllTasks().get(i).getDescription()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to be called when user prompts for a task to be marked as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param taskList : list of tasks."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param input : Will be parsed to find out which tasks does user want to be marked as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void markDone(TaskList taskList, String input) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String[] allInputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.print(\"\\t  \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (String i : allInputs) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (!i.equals(\"done\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                int index \u003d Integer.parseInt(i) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                ITask chosenToDos \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                chosenToDos.markAsDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                System.out.println(\"[\" + chosenToDos.getStatusIcon() + \"] \" + chosenToDos.getDescription());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * Method to be called when a Invalid Command is input by the user."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     * @param newException : Exception that is thrown when an Invalid Command is detected"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Lucria"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void invalidCommandMessage(Exception newException) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\t\" + newException.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void deleteTask(TaskList taskList, String input) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String[] allInputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.print(\"\\t  \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (String i : allInputs) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            if (!i.equals(\"delete\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                int index \u003d Integer.parseInt(i) - 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                ITask chosenTask \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                taskList.deleteFromList(chosenTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                System.out.println(\"[\" + chosenTask.getStatusIcon() + \"] \" + chosenTask.getDescription());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        String grammerTasks \u003d taskList.getNumOfTasks() \u003e 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tNow you have \" + taskList.getNumOfTasks() + \" \" + grammerTasks + \" in the list.\" );"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    public void findTask(TaskList taskList, String input) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        ArrayList\u003cITask\u003e results \u003d taskList.getSearchedTasks(input);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        for (int i \u003d 0; i \u003c results.size(); i++) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.print(\"\\t\" + (i + 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            System.out.println(\".[\" + results.get(i).getInitials() + \"]\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    + \"[\" + results.get(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    + results.get(i).getDescription()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            );"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        System.out.println(horiLine);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 149
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import controllers.TaskFactory;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import models.ToDos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Lucria"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Lucria"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void testTodoCreation() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            assertEquals(new ToDos(\"write book\").getDescription()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                    , new TaskFactory().createTask(\"todo write book\").getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Lucria"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void testDeadlineCreation() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(new Deadline(\"return book\", \"Sunday\").getDescription()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                , new TaskFactory().createTask(\"deadline return book /by Sunday\").getDescription());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void testEventCreation() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(new Event(\"project meeting\", \"Mon 2-4pm\").getDescription()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                , new TaskFactory().createTask(\"event project meeting /at Mon 2-4pm\").getDescription());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void testDeadlineOutput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(\"return book (by: Sunday)\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                new Deadline(\"return book\", \"Sunday\").getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void testEventOutput() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertEquals(\"project meeting (at: Mon 2-4pm)\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Lucria"
        },
        "content": "                new Event(\"project meeting\", \"Mon 2-4pm\").getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Lucria"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    void alwaysTrue() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Lucria"
        },
        "content": "        assertTrue(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Lucria"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Lucria"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Lucria": 50
    }
  }
]

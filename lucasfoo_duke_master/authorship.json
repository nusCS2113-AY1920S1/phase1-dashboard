[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + by.toString() + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "lucasfoo": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    private static List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "         */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        print_line();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        taskList \u003d new FileManager().LoadFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        print_line();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        input();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    static void print_line() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        for (int i \u003d 0; i \u003c 55; ++i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.print(\"\\u2500\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private static void input() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        String inputLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e inputList \u003d Arrays.asList(inputLine.split(\" \"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (inputList.get(0)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    if (inputList.size() \u003c\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.INVALID_DONE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                        int listNum \u003d Integer.parseInt(inputList.get(1)) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                        if (listNum \u003e\u003d 0 \u0026\u0026 listNum \u003c taskList.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "                            taskList.get(listNum).markDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "                            Task currTask \u003d taskList.get(listNum);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                            print_line();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            System.out.println(\" Nice! I\u0027ve marked this task as done:\\n\" + currTask.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                            print_line();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                            input();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                            throw new DukeException(\"\", DukeException.ExceptionType.OUT_OF_RANGE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    int listNum \u003d Integer.parseInt(inputList.get(1)) - 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (listNum \u003e\u003d 0 \u0026\u0026 listNum \u003c taskList.size()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                        print_line();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + taskList.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                        print_line();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                        taskList.remove(listNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                        new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                        input();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.OUT_OF_RANGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                    int counter \u003d 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                    for (Task pastTask : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                        System.out.println(counter + \".\" + pastTask.toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                        ++counter;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                    input();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                    String description \u003d String.join(\" \", inputList.subList(1, inputList.size()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (description.isBlank()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.INVALID_TODO);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todo.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    input();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    description \u003d inputList.subList(1, inputList.size()).stream().takeWhile(x -\u003e !x.equals(\"/by\")).collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                    String by \u003d inputList.subList(1, inputList.size()).stream().dropWhile(x -\u003e !x.equals(\"/by\")).filter(x -\u003e !x.equals(\"/by\")).collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (description.isBlank()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.INVALID_DEADLINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (by.isBlank()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.DEADLINE_TIME);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    System.out.println(by);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            + \"[yyyy/MM/dd HHmm]\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            + \"[yyyy-MM-dd HHmm]\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            + \"[ddMMMyyyy HHmm]\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            + \"[dd/MM/yyyy HHmm]\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                            + \"[d/MM/yyyy HHmm]\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    );"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    LocalDateTime localDateTime \u003d LocalDateTime.parse(by,formatter);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadline.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                    input();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                    description \u003d inputList.subList(1, inputList.size()).stream().takeWhile(x -\u003e !x.equals(\"/at\")).collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (description.isBlank()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.INVALID_EVENT);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                    String at \u003d inputList.subList(1, inputList.size()).stream().dropWhile(x -\u003e !x.equals(\"/at\")).filter(x -\u003e !x.equals(\"/at\")).collect(Collectors.joining(\" \"));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                    if (at.isBlank()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                        throw new DukeException(\"\", DukeException.ExceptionType.EVENT_TIME);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                    Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event.toString() + \"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    new FileManager().saveFile(taskList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "                    print_line();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "                    input();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                    throw new DukeException(\"\", DukeException.ExceptionType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            e.PrintExceptionMessage();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            input();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 121,
      "lucasfoo": 27
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    enum ExceptionType{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        INVALID_COMMAND,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        INVALID_TODO,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "        INVALID_DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        INVALID_EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        DEADLINE_TIME,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        EVENT_TIME,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        OUT_OF_RANGE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        INVALID_DONE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        UNKNOWN"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private ExceptionType type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public DukeException(String message, ExceptionType type){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    public void PrintExceptionMessage(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        if(this.type.equals( ExceptionType.INVALID_COMMAND)){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if(this.type.equals(ExceptionType.INVALID_TODO)){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if (this.type.equals(ExceptionType.INVALID_DEADLINE)){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if(this.type.equals(ExceptionType.INVALID_EVENT)){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if(this.type.equals(ExceptionType.EVENT_TIME)){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The time of a event cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if(this.type.equals(ExceptionType.DEADLINE_TIME)){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if (this.type.equals(ExceptionType.OUT_OF_RANGE)){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! THe item you have selected is out of range.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }else if(this.type.equals(ExceptionType.UNKNOWN)){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "            System.out.println(\"☹ OOPS!!! WTF SOMETHING WEIRED HAPPENED\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        }else if(this.type.equals(ExceptionType.INVALID_DONE)){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            Duke.print_line();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The index of mark as done cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            Duke.print_line();        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 54,
      "lucasfoo": 5
    }
  },
  {
    "path": "src/main/java/FileManager.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import javax.imageio.IIOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public void saveFile(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "            PrintStream stdout \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            PrintStream fileOut \u003d new PrintStream(\"./savefile.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            System.setOut(fileOut);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task pastTask : taskList){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                if(pastTask instanceof Todo){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"T | \" + (pastTask.isDone ? 1 : 0) + \" | \" + pastTask.description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                }else if(pastTask instanceof  Deadline){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    System.out.println(\"D | \" + (pastTask.isDone ? 1 : 0) + \" | \" + pastTask.description + \" | \" + ((Deadline) pastTask).by);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                }else if (pastTask instanceof  Event){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    System.out.println(\"E | \" + (pastTask.isDone ? 1 : 0) + \" | \" + pastTask.description + \" | \" + ((Event) pastTask).at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            System.setOut(stdout);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "    public List\u003cTask\u003e LoadFile(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            Path path \u003d Paths.get(\"./savefile.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            Scanner scanner \u003d  new Scanner(path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            System.out.println(\"Loading...\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            while (scanner.hasNextLine()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                String[] inputArr \u003d line.split(\"\\\\Q | \\\\E\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                if(inputArr[0].equals(\"T\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    String description \u003d inputArr[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    todo.isDone \u003d inputArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                }else if(inputArr[0].equals(\"D\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    String description \u003d inputArr[2];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    String by \u003d inputArr[3];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    LocalDateTime localDateTime \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    Deadline deadline \u003d new Deadline(description, localDateTime);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    deadline.isDone \u003d inputArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                }else if(inputArr[0].equals(\"E\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    String description \u003d inputArr[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    String at \u003d inputArr[3];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    event.isDone \u003d inputArr[1].equals(\"1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            System.out.println(\"Loaded\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "            System.out.println(\"No save file found, starting a new one\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lucasfoo"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "lucasfoo": 48
    }
  }
]

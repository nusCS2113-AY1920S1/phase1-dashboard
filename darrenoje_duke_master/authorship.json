[
  {
    "path": "build.gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 22,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public Deadline(String description, Date by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 16
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    private static String projRoot \u003d \"C:/Users/darre/OneDrive/Desktop/CS2113T intellij/duke/src/main/\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    private static ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public static void main(String[] args) throws DukeException, FileNotFoundException, ParseException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        System.out.println(logo + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                String words \u003d sc.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                if (words.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                if (words.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(i + 1 + \".\" + list.get(i).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"done\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    int num \u003d sc.nextInt();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    list.get(num - 1).setDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    refreshFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    System.out.println(\"[\" + list.get(num - 1).getStatusIcon() + \"] \" + list.get(num - 1).getDescription());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String words2 \u003d sc.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        if (words2.trim().isEmpty())"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String[] temparray \u003d words2.trim().split(\" /by \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        Date date \u003d format.parse(temparray[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        Task tempDeadline \u003d new Deadline(temparray[0], date);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        list.add(tempDeadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        appendFile(tempDeadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(tempDeadline.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Check format of date entered\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String words2 \u003d sc.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        if (words2.trim().isEmpty())"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        Task tempTodo \u003d new Todo(words2.trim());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        list.add(tempTodo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        appendFile(tempTodo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(tempTodo.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String words2 \u003d sc.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        if (words2.trim().isEmpty())"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String[] temparray \u003d words2.trim().split(\" /at \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        Date date \u003d format.parse(temparray[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        Task tempEvent \u003d new Event(temparray[0], date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        list.add(tempEvent);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        appendFile(tempEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(tempEvent.toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (ParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Check format of date entered\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        int num \u003d sc.nextInt();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(list.get(num - 1).toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        list.remove(num - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        refreshFile();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (words.equals(\"find\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        String words2 \u003d sc.nextLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        int counter \u003d 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        for (Task task : list) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            if (task.getDescription().contains(words2)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                                System.out.println(counter + \".\" + task.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                            counter++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    private static void readFile() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        File fileName \u003d new File(projRoot + \"duke.txt\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        ArrayList\u003cString\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            temp \u003d new ArrayList\u003c\u003e(Files.readAllLines(Paths.get(String.valueOf(fileName))));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            for (String string : temp) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                Task tempTask;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                if (string.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    tempTask \u003d new Todo(string.substring(7));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else if (string.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    Date date \u003d format.parse(string.substring(string.indexOf(\"(by: \") + 5, string.length() - 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    tempTask \u003d new Deadline(string.substring(7, string.indexOf(\"(by: \") - 1), date);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    DateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    Date date \u003d format.parse(string.substring(string.indexOf(\"(by: \") + 5, string.length() - 1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    tempTask \u003d new Event(string.substring(7, string.indexOf(\"(at: \") - 1), date);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                if (string.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                    tempTask.setDone(true);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                list.add(tempTask);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        } catch (IOException | ParseException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    private static void appendFile(Task mytask) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        File myFile \u003d new File(projRoot + \"duke.txt\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(myFile, true);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            fileWriter.write(mytask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    private static void refreshFile() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        File myFile \u003d new File(projRoot + \"duke.txt\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(myFile, false);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            for (Task task : list) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "                fileWriter.write(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 170,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public Event(String description, Date by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "darrenoje"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "darrenoje"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "darrenoje": 13
    }
  }
]

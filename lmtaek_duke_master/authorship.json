[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public Deadline(String taskName, String deadline) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        super(taskName, deadline);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        this.taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        convertTimeToDate();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \" (by: \" + super.getTime() + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getFullDate() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (this.getHasDate()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return \" (by: \" + super.getFullDate() + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lmtaek": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private static String dukeGreeting \u003d \"Hello, I\u0027m Duke.\\nWhat can I do to help you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private static String dukeNeedsValidInput \u003d \"\\tI\u0027m not sure that I understand. Sorry.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private static Task[] taskList \u003d new Task[100];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private static int listLength \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        //When Duke starts up, it will check to see if a list has already been made."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            readFile();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        System.out.println(dukeGreeting + \"\\r\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        // The user will enter commands from this point onwards."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            String userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            if (userInput.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                closeApplication();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else if (userInput.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(readTaskList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else if (userInput.toLowerCase().contains(\"done\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(markCompletedRequest(userInput));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else if (userInput.toLowerCase().contains(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(addTodo(userInput));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else if (userInput.toLowerCase().contains(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(addDeadline(userInput));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else if (userInput.toLowerCase().contains(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(addEvent(userInput));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                System.out.println(dukeNeedsValidInput);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static void closeApplication() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static Boolean writeInFile(String savedText) throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            FileWriter taskFile \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskFile.write(savedText);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskFile.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static Boolean readFile() throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            BufferedReader taskFile \u003d new BufferedReader(new FileReader(\"./data/duke.txt\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            String currentLine \u003d taskFile.readLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            if (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                int i \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                while (currentLine !\u003d null) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    String[] parsedCurrentLine \u003d currentLine.split(\"//\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    if (parsedCurrentLine.length \u003c 3) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    if (parsedCurrentLine[0].equals(Task.TaskType.TODO.toString())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        ToDo readTask \u003d new ToDo(parsedCurrentLine[2]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        if (parsedCurrentLine[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                            readTask.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        addToList(readTask, i);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    } else if (parsedCurrentLine[0].equals(Task.TaskType.DEADLINE.toString())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        Deadline readTask \u003d new Deadline(parsedCurrentLine[2], parsedCurrentLine[3]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        if (parsedCurrentLine[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                            readTask.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        addToList(readTask, i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    } else if (parsedCurrentLine[0].equals(Task.TaskType.EVENT.toString())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        Event readTask \u003d new Event(parsedCurrentLine[2], parsedCurrentLine[3]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        if (parsedCurrentLine[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                            readTask.markAsDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        addToList(readTask, i);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    currentLine \u003d taskFile.readLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskFile.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String formatFileText() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String textToWrite \u003d \"\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        for (int i \u003d 0; i \u003c listLength; i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            textToWrite \u003d textToWrite"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            + taskList[i].taskType"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            + \"//\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            + taskList[i].isTaskDone()"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            + \"//\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            + taskList[i].getTaskName();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            if (taskList[i].taskType.equals(Task.TaskType.DEADLINE)"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            || taskList[i].taskType.equals(Task.TaskType.EVENT)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                textToWrite \u003d textToWrite"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        + \"//\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        + taskList[i].getBasicTime()"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        + \"\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                textToWrite \u003d textToWrite + \"\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return textToWrite;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String readTaskList() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String response \u003d \"\\tHere are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        for (int i\u003d0; i\u003clistLength; i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            response \u003d response"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + \"\\t\\t\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + (i+1)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + \". \""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + taskTypeLabel(taskList[i])"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + taskCompletionStatus(taskList[i].isTaskDone())"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + taskList[i].getTaskName()"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + getTimeOrDate(taskList[i])"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + \"\\n\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String taskTypeLabel(Task task) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskLabel;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (task.taskType.equals(Task.TaskType.TODO)) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskLabel \u003d \"[T] \";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } else if (task.taskType.equals(Task.TaskType.DEADLINE)) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskLabel \u003d \"[D] \";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } else if (task.taskType.equals(Task.TaskType.EVENT)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskLabel \u003d \"[E] \";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskLabel \u003d \"\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return taskLabel;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String getTimeOrDate(Task task) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (task.getHasDate()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return task.getFullDate();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return task.getTime();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String addTodo(String userInput) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String specifyTask \u003d \"\\tYou need to specify what the task is!\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String parseProblem \u003d \"\\tCan you reformat your command?\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        userInput.trim();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (!userInput.contains(\"todo \")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskName \u003d userInput.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (taskName.equals(\"\") || taskName.isBlank()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return specifyTask;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        ToDo newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return addToList(newTask);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String addDeadline(String userInput) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String parseProblem \u003d \"\\tI didn\u0027t catch that. Can you reformat your command?\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String needMoreDetails \u003d \"\\tPlease provide more details for your deadline.\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        userInput.trim();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (!userInput.contains(\"deadline \")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String task \u003d userInput.replaceFirst(\"deadline \", \"\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String[] taskComponents \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (taskComponents.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskName \u003d taskComponents[0];"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskDeadline \u003d taskComponents[1];"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if ((taskName.isEmpty() || taskName.isBlank())"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        || (taskDeadline.isEmpty() || taskDeadline.isBlank())) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return needMoreDetails;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        Deadline newTask \u003d new Deadline(taskName, taskDeadline);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return addToList(newTask);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String addEvent(String userInput) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String parseProblem \u003d \"\\tI didn\u0027t catch that. Can you reformat your command?\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String needMoreDetails \u003d \"\\tPlease provide more details for your event.\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        userInput.trim();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (!userInput.contains(\"event \")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String task \u003d userInput.replaceFirst(\"event \", \"\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String[] taskComponents \u003d task.split(\" /at \");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (taskComponents.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskName \u003d taskComponents[0];"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String taskTime \u003d taskComponents[1];"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if ((taskName.isEmpty() || taskName.isBlank())"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                || (taskTime.isEmpty() || taskTime.isBlank())) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return needMoreDetails;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        Event newTask \u003d new Event(taskName, taskTime);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return addToList(newTask);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String addToList(Task task) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (listLength \u003e\u003d 100) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return \"\\tYou can\u0027t add any more tasks to your list!\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            taskList[listLength] \u003d task;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            listLength++;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                writeInFile(formatFileText());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            String output \u003d \"\\tGot it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + \"\\n\\t\\t\""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + taskTypeLabel(task)"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + taskCompletionStatus(task.isTaskDone())"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + task.getTaskName()"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + getTimeOrDate(task)"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    + \"\\n\\t Now you have \" + listLength + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static void addToList(Task task, int arrayIndex) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        taskList[arrayIndex] \u003d task;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        listLength++;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String taskCompletionStatus(Boolean isDone) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (isDone) { return \"[✓] \";}"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        else { return \"[✗] \"; }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String markCompletedRequest(String input) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String couldNotFindTask \u003d \"\\tI couldn\u0027t find the task.\";"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String parseProblem \u003d \"\\tCan you put a space in your command?\";"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String parsedInput[] \u003d input.split(\" \");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if ((parsedInput.length \u003c\u003d 1)) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return parseProblem;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                Integer index \u003d Integer.parseInt(parsedInput[1]);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                if (index \u003c\u003d 0"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        || index \u003d\u003d null"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                        || index \u003e listLength) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    return couldNotFindTask;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    index--;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    return markTaskAsDone(taskList[index]);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                } catch (NumberFormatException | NullPointerException nfe) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                    return couldNotFindTask;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    static String markTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            writeInFile(formatFileText());"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \"\\tNice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                + \"\\t\\t\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                + taskTypeLabel(task)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                + taskCompletionStatus(task.isTaskDone())"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                + task.getTaskName()"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "                + getTimeOrDate(task);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lmtaek": 308,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lmtaek": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public Event(String taskName, String eventTime) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        super(taskName, eventTime);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        this.taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        convertTimeToDate();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \" (at: \" + super.getTime() + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getFullDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (this.getHasDate()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return \" (at: \" + super.getFullDate() + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lmtaek": 23
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private Boolean isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private String dateInputPattern \u003d \"d/M/yyyy HHmm\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private String dateOutputPattern \u003d \"MMMM d, yyyy h:mma\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    private Boolean hasDate \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public TaskType taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public Task(String taskName, String taskTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        this.time \u003d taskTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (taskTime.matches(\"datePattern\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            convertTimeToDate();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getBasicTime() { //Needed a function that wasn\u0027t overridden by subclasses."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public Boolean getHasDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return hasDate;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public void convertTimeToDate() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateInputPattern);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            LocalDateTime reformattedDate \u003d LocalDateTime.parse(this.time, formatter);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            this.date \u003d reformattedDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            this.hasDate \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            //System.out.println(\"Time formatting does not align with Date formatting.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getFullDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (this.date \u003d\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateOutputPattern);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        String fullDate \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return fullDate;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public Boolean isTaskDone() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        if (this.isDone !\u003d true) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lmtaek": 80
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        super(taskName, \"No time specified.\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        this.taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lmtaek"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lmtaek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lmtaek": 13
    }
  }
]

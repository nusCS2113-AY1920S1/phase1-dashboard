[
  {
    "path": "src/main/java/Deadline.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Deadline extends TaskWithTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Deadline(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"D\", time);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Deadline(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"D\", time, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return super.toString() + \" (by: \" + time + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d\u0027/\u0027M\u0027/\u0027yyyy HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Logo; displayed on startup"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Greet the user and present commands"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String welcomeMessage \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Restore any previous sessions here"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        switch (readToList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            welcomeMessage \u003d \"Welcome back to Duke!\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            welcomeMessage \u003d \"Welcome to Duke!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            welcomeMessage \u003d \"Welcome back to Duke! Your previous session may not have been properly restored.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(\"  Duke supports the following commands:\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    bye -- exit Duke\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    list -- list tasks\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    done -- set a task as done\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    todo -- add a todo\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    event -- add an event; requires a time specified by \\\"/at\\\"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"    deadline -- add a deadline; requires a time specified by \\\"/by\\\"\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Use a scanner to read from stdin"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Program main loop to wait for commands"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // Read the input, trimming extraneous spaces"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // Ignore empty lines of input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // Try to parse the command and catch any exceptions"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                parseCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.println(e.getErrorMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * todo: find a different solution for matching inputs to commands"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * todo: try Map\u003cString, Runnable\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Parses a raw command from user input, and performs the required action(s)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param input The string read from the user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static void parseCommand(String input) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Separate the command name from the rest of the command: [name, args]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String[] nameAndArgs \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Variable to temporarily hold a task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // switch using command name"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        switch (nameAndArgs[0]) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // Say bye"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003e 1 \u0026\u0026 nameAndArgs[1].equals(\"bye\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.println(\"Bye bye!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.exit(0); // Program exit point"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } else if (writeToFile() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.println(\"Bye!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.exit(0); // Program exit point"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.println(\"Your session information cannot be saved. \" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"Please check that data/duke.txt is not in use by other programs.\\n\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"You may forcefully exit by using \\\"bye bye\\\"\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // print list of tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            printList(tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // set a task to done"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"done [index]\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                task \u003d tasks.get(Integer.parseInt(nameAndArgs[1]) - 1);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                task.setDone(true);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                printTaskDone(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandInvalidIndexException(nameAndArgs[1], nameAndArgs[0],"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"done [index]\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // add a to do"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"todo [description]\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            task \u003d new Todo(nameAndArgs[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            printTaskAdded(task);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // add an event"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"event [description] /at [time]\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                task \u003d new Event(nameAndArgs[1].split(\"\\\\s+/at\\\\s+\", 2)[0],"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        LocalDateTime.parse(nameAndArgs[1].split(\"\\\\s+/at\\\\s+\", 2)[1],"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                                formatter));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"event [description] /at [time]\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            printTaskAdded(task);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // add a deadline"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"deadline [description] /by [time]\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                task \u003d new Deadline(nameAndArgs[1].split(\"\\\\s+/by\\\\s+\", 2)[0],"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        LocalDateTime.parse(nameAndArgs[1].split(\"\\\\s+/by\\\\s+\", 2)[1],"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                                formatter));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } catch (IndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"deadline [description] /at [time]\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            printTaskAdded(task);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"delete [index]\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                task \u003d tasks.get(Integer.parseInt(nameAndArgs[1]) - 1);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                tasks.remove(task);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                printTaskDeleted(task);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandInvalidIndexException(nameAndArgs[1], nameAndArgs[0],"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"delete [index]\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (nameAndArgs.length \u003c 2) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeCommandMissingArgumentException(nameAndArgs[0],"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        \"find [string]\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            List\u003cTask\u003e found \u003d tasks.stream().filter("
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    t -\u003e t.getDescription()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                            .contains(nameAndArgs[1])).collect(Collectors.toList());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (found.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.format(\"No tasks were found matching %1$s%n\", nameAndArgs[1]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.format(\"%1$d task%2$s found matching %3$s%n\","
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                        found.size(), found.size() \u003d\u003d 1 ? \" was\" : \"s were\", nameAndArgs[1]);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                printList(found);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeUnknownCommandException(nameAndArgs[0]);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints the task list to System.out"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static void printList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                // Enumerate and print tasks with status icon"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                System.out.println(\"  \" + (i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            System.out.println(\"You have no tasks.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints the task added and the number of current tasks to System.out"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param task The task that was added, and whose information should be printed"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static void printTaskAdded(Task task) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(\"The task has been added to your list:\\n\""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"You have \" + numOfTasks + (numOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints the task added and the number of current tasks to System.out"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param task The task that was added, and whose information should be printed"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static void printTaskDeleted(Task task) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(\"The task has been deleted from your list:\\n\""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"  \" + task + \"\\n\""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"You have \" + numOfTasks + (numOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints a message that the task requested has been marked as done."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param task The task to be marked as done"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.out.println(\"The task has been marked as done:\\n\""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"  \" + task);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Reads a file\u0027s contents into the current session\u0027s task list; Returns 0 on success,"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * 1 on failure and 2 on partial failure."
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return 0 if the file was read successfully, 1 if the file could not be found,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * 2 if the file could be read but all tasks could not be read successfully"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static int readToList() {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int status \u003d 0;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(System.getProperty(\"user.dir\") + \"\\\\data\\\\duke.txt\"));"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    Task task \u003d createNewTask(line);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                } catch (DukeBadTextLineException e) {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    status \u003d 2;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a task from a String containing the relevant information. Used to load tasks"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * from a previous Duke session."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param rawTaskInfo String containing the information to construct the task"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return The task created from the String"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws DukeBadTextLineException If the String is invalid in any way"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static Task createNewTask(String rawTaskInfo) throws DukeBadTextLineException {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String[] taskFields \u003d rawTaskInfo.split(\"\\31\");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            switch (taskFields[0]) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                assert(taskFields[3].equals(\"true\") || taskFields[3].equals(\"false\"));"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                return new Event(taskFields[1], LocalDateTime.parse(taskFields[2]), Boolean.parseBoolean(taskFields[3]));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                assert(taskFields[3].equals(\"true\") || taskFields[3].equals(\"false\"));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                return new Deadline(taskFields[1], LocalDateTime.parse(taskFields[2]), Boolean.parseBoolean(taskFields[3]));"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                assert(taskFields[2].equals(\"true\") || taskFields[2].equals(\"false\"));"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                return new Todo(taskFields[1], Boolean.parseBoolean(taskFields[2]));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                throw new DukeBadTextLineException();"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (AssertionError | DukeBadTextLineException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeBadTextLineException();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Writes the tasks in the current session to a file; Returns 0 if successful,"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * and 1 otherwise (i.e. file is not writable)"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return 0 on successful write; 1 on failure"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static int writeToFile() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int status \u003d 0;"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // Make sure that the parent directory exists"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            new File(System.getProperty(\"user.dir\") + \"\\\\data\").mkdir();"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            FileWriter wt \u003d new FileWriter(System.getProperty(\"user.dir\") + \"\\\\data\\\\duke.txt\", StandardCharsets.UTF_8, false);"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                wt.write(task.toText() + \"\\n\");"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            wt.close();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 330,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeBadTextLineException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeBadTextLineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 3
    }
  },
  {
    "path": "src/main/java/DukeCommandException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Parent exception class for all command exceptions. Not to be thrown directly."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Please throw one of the subclasses!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String usage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates an exception with the violating command and argument, with the command usage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command that caused the exception to be raised"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param usage The usage of the command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandException(String command, String usage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.usage \u003d usage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 19
    }
  },
  {
    "path": "src/main/java/DukeCommandInvalidIndexException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Thrown when an invalid index is input to the program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandInvalidIndexException extends DukeCommandException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private String argument;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates an exception with the violating command and argument, with the command usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param argument The argument that caused the exception to be raised"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command that caused the exception to be raised"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param usage The usage of the command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandInvalidIndexException(String argument, String command, String usage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(command, usage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the error message to be printed to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return Error message to be printed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return argument + \" is an invalid option for \" + command + \"!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + command + \"\u0027s usage: \" + usage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 27
    }
  },
  {
    "path": "src/main/java/DukeCommandMissingArgumentException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Thrown when a command has missing arguments."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandMissingArgumentException extends DukeCommandException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates an exception with the violating command and argument, with the command usage"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command that caused the exception to be raised"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param usage The usage of the command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandMissingArgumentException(String command, String usage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(command, usage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the error message to be printed to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return Error message to be printed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"The command \" + command + \" is incomplete!\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + command + \"\u0027s usage: \" + usage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 23
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Parent exception class for the Duke program, not to be thrown directly."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Please throw one of the subclasses!"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 13
    }
  },
  {
    "path": "src/main/java/DukeUnknownCommandException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Thrown when an unknown command is input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeUnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates an exception with the string specifying the unknown command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The unknown command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeUnknownCommandException(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the error message to be printed to the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return Error message to be printed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"I don\u0027t know what \" + command + \" is!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Event extends TaskWithTime {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"E\", time);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Event(String description, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"E\", time, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 17
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * The general task class that Duke uses to store task information"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String typeIcon;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Task(String description, String typeIcon, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.typeIcon \u003d typeIcon;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Task(String description, String typeIcon) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.typeIcon \u003d typeIcon;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"[\" + typeIcon + \"] \" + \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return typeIcon + \"\\31\" + description + \"\\31\" + isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 41
    }
  },
  {
    "path": "src/main/java/TaskWithTime.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class TaskWithTime extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskWithTime(String description, String typeIcon, LocalDateTime time) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, typeIcon);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskWithTime(String description, String typeIcon, LocalDateTime time, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, typeIcon, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toText() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return typeIcon + \"\\31\" + description + \"\\31\" + time + \"\\31\" + isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 11
    }
  }
]

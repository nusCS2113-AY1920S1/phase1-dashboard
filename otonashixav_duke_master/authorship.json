[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * This generated file contains a sample Java project to get you started."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * For more details take a look at the Java Quickstart chapter in the Gradle"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * User Manual available at https://docs.gradle.org/5.6.1/userguide/tutorial_java_projects.html"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    // Apply the java plugin to add support for Java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    // Apply the application plugin to add support for building a CLI application"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "test {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    // Define the main class for the application"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    mainClassName \u003d \u0027duke.main.Duke\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "run {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 36
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * in the user manual at https://docs.gradle.org/5.6.1/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 10
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Exits the program on execution with no additional prompts."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public ByeCommand() {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Exits the program\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"bye\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(\"Bye!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 43
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * The interface used by all commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the name of the command that can be used to invoke it."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return name of the command that can be used to invoke it."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    String getName();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a description of what the command does."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return description of the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    String getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the proper usage of the command, with parameters surrounded by braces i.e. [parameter]"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return proper usage of the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    String getUsage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Executes the command, passing it the required parameters for execution."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param fullCommand the complete input from the user, no more than one line."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param userInterface the user interface, which commands will use to interact with the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param userData the user\u0027s data, containing all data specific to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws DukeCommandException an exception containing the command that failed, with message and cause."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 38
    }
  },
  {
    "path": "src/main/java/duke/command/CommandUtility.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A utility class for command-related methods."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public final class CommandUtility {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static Map\u003cString, Command\u003e commandList \u003d new TreeMap\u003cString, Command\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d\u0027/\u0027M\u0027/\u0027yyyy HHmm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Populates the command list, initializing it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public static void populateCommandList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        commandList.clear(); // avoid duplicates if we somehow need to call the function twice"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Command[] commands \u003d {new DeadlineCommand(), new TodoCommand(), new EventCommand(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                new DeleteCommand(), new DoneCommand(), new FindCommand(), new ListCommand(), new ByeCommand()}; // use org.reflections to automatically create?"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        for (Command command : commands) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            commandList.put(command.getName(), command);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the command with a specified name, or null if no matching command was found."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param commandName the name of the command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the command matching the provided name, or null if no such command was found."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public static Command getCommand(String commandName) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return commandList.get(commandName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Converts a string to a LocalDateTime object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param dateTimeString the string to be converted."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the resulting LocalDateTime object converted from the string."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws DateTimeParseException if the string could not be converted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    static LocalDateTime toDateTime(String dateTimeString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return LocalDateTime.parse(dateTimeString, dateTimeFormatter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a string containing an enumerated task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param list the list to convert to a string"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the string, converted from the list and enumerated."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    static String printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            result.append(String.format(\"  %1$d. %2$s\\n\", i++, task.toString()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a string containing a message about the size of a task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param size the size of the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the corresponding message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    static String printListSize(int size) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        if (size \u003d\u003d 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            return \"You have 1 task in your list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            return String.format(\"You have %1$d tasks in your list\", size);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 81
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandSaveFailureException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Adds a deadline to the user\u0027s task list, with properties specified by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static final String DELIMITER \u003d \"\\\\s+/by\\\\s+\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DeadlineCommand() {}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"deadline\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Adds a new deadline\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"deadline [description] /by [time]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            description \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please give a description for your deadline!\", e, this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String dateTimeString;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            dateTimeString \u003d description.split(DELIMITER, 2)[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            description \u003d description.split(DELIMITER, 2)[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please give a time for your deadline!\", e, this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            dateTime \u003d CommandUtility.toDateTime(dateTimeString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandInvalidArgumentException("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    String.format(\"%1$s is not a valid time!\", dateTimeString), e, this);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userData.getTaskList().add(deadline);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandSaveFailureException(\"Couldn\u0027t save your changes to the disk!\", e, this);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(String.format(\"Added this task:\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                \"  %1$s\", deadline.toString()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(CommandUtility.printListSize(userData.getTaskList().silentGetFullList().size()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 82
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandSaveFailureException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Removes a task from the user\u0027s task list, with a specified index corresponding to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * the current context (e.g. if the find command was ran prior to delete)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DeleteCommand() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"delete\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Deletes a task\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"delete [index]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String deleteIndexString;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            deleteIndexString \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please specify the task to delete!\", e, this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int deleteIndex;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Task taskToDelete;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            deleteIndex \u003d Integer.parseInt(deleteIndexString) - 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            taskToDelete \u003d userData.getTaskList().getVisibleList().get(deleteIndex);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userData.getTaskList().remove(taskToDelete);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandInvalidArgumentException(\"%1$s is not a valid index!\", e, this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandSaveFailureException(\"Couldn\u0027t save your changes to the disk!\", e, this);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(\"Removed this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(String.format(\"  %1$s\", taskToDelete.toString()));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(CommandUtility.printListSize(userData.getTaskList().silentGetFullList().size()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 69
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Sets a task to done in the user\u0027s task list, with a specified index corresponding to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * the current context (e.g. if the find command was ran prior to delete)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class DoneCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DoneCommand() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"done\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Marks a task as done\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"done [index]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String doneIndexString;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            doneIndexString \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please specify the task to delete!\", e, this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        int doneIndex;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Task taskToDone;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            doneIndex \u003d Integer.parseInt(doneIndexString) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            taskToDone \u003d userData.getTaskList().getVisibleList().get(doneIndex);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandInvalidArgumentException(\"%1$s is not a valid index!\", e, this);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        taskToDone.setDone(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(\"Marked this task as done:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(String.format(\"  %1$s\", taskToDone.toString()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 63
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandInvalidArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandSaveFailureException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Adds an event to the user\u0027s task list, with properties specified by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class EventCommand implements Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private static final String DELIMITER \u003d \"\\\\s+/at\\\\s+\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public EventCommand() {}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Adds a new event\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"event [description] /at [time]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            description \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please give a description for your event!\", e, this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String dateTimeString;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            dateTimeString \u003d description.split(DELIMITER, 2)[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            description \u003d description.split(DELIMITER, 2)[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please give a time for your event!\", e, this);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            dateTime \u003d CommandUtility.toDateTime(dateTimeString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandInvalidArgumentException("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    String.format(\"%1$s is not a valid time!\", dateTimeString), e, this);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Event event \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userData.getTaskList().add(event);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandSaveFailureException(\"Couldn\u0027t save your changes to the disk!\", e, this);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(String.format(\"Added this task:\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                \"  %1$s\", event.toString()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(CommandUtility.printListSize(userData.getTaskList().silentGetFullList().size()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 82
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Finds all tasks matching a query and shows them to the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class FindCommand implements Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public FindCommand() {}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Finds tasks containing a keyphrase\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"find [keyphrase]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String keyphrase;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            keyphrase \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please specify the phrase to search for!\", e, this);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        List\u003cTask\u003e tasks \u003d userData.getTaskList().getMatchingTasks(keyphrase);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(\"Found no matching tasks.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(\"Found 1 matching task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(String.format(\"Found %1$d matching tasks:\", tasks.size()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.print(CommandUtility.printList(tasks));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 60
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Shows the user all tasks currently in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class ListCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Lists all current tasks\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"list\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        List\u003cTask\u003e tasks \u003d userData.getTaskList().getFullList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(\"You have no tasks.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else if (tasks.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(\"You have 1 task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(String.format(\"You have %1$d tasks:\", tasks.size()));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.print(CommandUtility.printList(tasks));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 52
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandMissingArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandSaveFailureException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserData;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.main.UserInterface;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Adds a to do to the user\u0027s task list, with properties specified by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "class TodoCommand implements Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TodoCommand() {}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"Adds a new todo\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getUsage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return \"todo [description]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void execute(String fullCommand, UserInterface userInterface, UserData userData) throws DukeCommandException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            description \u003d fullCommand.split(\"\\\\s+\", 2)[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandMissingArgumentException(\"Please give a description for your todo!\", e, this);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userData.getTaskList().add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            throw new DukeCommandSaveFailureException(\"Couldn\u0027t save your changes to the disk!\", e, this);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(String.format(\"Added this task:\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                \"  %1$s\", todo.toString()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userInterface.println(CommandUtility.printListSize(userData.getTaskList().silentGetFullList().size()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 62
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Exceptions specific to Duke Commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandException extends DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private Command command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command responsible for the exception."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandException(Command command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command responsible for the exception."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandException(String message, Command command) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command responsible for the exception."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandException(String message, Throwable cause, Command command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param command The command responsible for the exception."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandException(Throwable cause, Command command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the command responsible for the exception."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the command responsible for the exception."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Command getCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 54
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCommandInvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Exceptions caused by a command receiving an invalid argument from the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandInvalidArgumentException extends DukeCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandInvalidArgumentException(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandInvalidArgumentException(String message, Command command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandInvalidArgumentException(String message, Throwable cause, Command command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, cause, command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandInvalidArgumentException(Throwable cause, Command command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(cause, command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCommandMissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * An exception caused by a command being incomplete."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandMissingArgumentException extends DukeCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandMissingArgumentException(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandMissingArgumentException(String message, Command command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandMissingArgumentException(String message, Throwable cause, Command command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, cause, command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandMissingArgumentException(Throwable cause, Command command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(cause, command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCommandSaveFailureException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * An exception caused by the save file being uneditable."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeCommandSaveFailureException extends DukeCommandException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandSaveFailureException(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandSaveFailureException(String message, Command command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandSaveFailureException(String message, Throwable cause, Command command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, cause, command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeCommandSaveFailureException(Throwable cause, Command command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(cause, command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * Exceptions specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public DukeException(Throwable cause) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(cause);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 34
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.command.CommandUtility;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // Object to interact with the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        UserInterface userInterface \u003d new UserInterface(System.in, System.out);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // todo: user should select save directory"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String dukeDir \u003d String.format(\"%1$s%2$s%3$s\", \"data\", File.separator, \"duke\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        File userDir \u003d new File(dukeDir);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userDir.mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        UserData userData \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userData \u003d new UserData(userDir);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(\"Failed to load your previous session. Exiting!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        CommandUtility.populateCommandList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        while (userInterface.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            String fullCommand \u003d userInterface.next();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            String commandName \u003d fullCommand.split(\"\\\\s+\", 2)[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            Command command \u003d CommandUtility.getCommand(commandName);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            if (command !\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    command.execute(fullCommand, userInterface, userData);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                } catch (DukeCommandException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                    userInterface.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                userInterface.println(String.format(\"I don\u0027t know what %1$s is!\", commandName));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 44,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A class used for file i/o operations."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new Storage object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param file the file to read and write to."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Storage(File file) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Overwrites the file with new contents."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param fileContents a string containing the raw content of the file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws IOException if the file is uneditable"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void write(String fileContents) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, StandardCharsets.UTF_8, false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        fileWriter.write(fileContents);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the raw content of the file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the raw content of the file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws FileNotFoundException if the file cannot be found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String read() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        // See https://stackoverflow.com/questions/3402735/what-is-simplest-way-to-read-a-file-into-string"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            return new Scanner(file).useDelimiter(\"\\\\Z\").next();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            // File is empty"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 50
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * An object containing the user\u0027s tasks, that saves any changes to the disk as they occur."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private List\u003cTask\u003e fullList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private List\u003cTask\u003e visibleList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param userDir the directory where the user\u0027s files should be saved."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws IOException if the file \"tasks.txt\" cannot be created or edited."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskList(File userDir) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        File userFile \u003d new File(userDir, \"tasks.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        userFile.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        storage \u003d new Storage(userFile);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        fullList \u003d deserialize(storage.read());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        visibleList \u003d fullList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param task the task to be added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws IOException if the changes cannot be saved to the disk."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void add(Task task) throws IOException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        fullList.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        storage.write(serialize());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Removes a task from the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param task the task to be removed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws IOException if the changes cannot be saved to the disk."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void remove(Task task) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        fullList.remove(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        visibleList.remove(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        storage.write(serialize());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns all tasks containing a character string in their description. Sets the"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * visible list to the list containing the found tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param query the string to find inside tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return a list of all tasks matching the query."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public List\u003cTask\u003e getMatchingTasks(String query) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        visibleList \u003d  fullList.stream()"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                .filter(t -\u003e t.getDescription().contains(query))"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return getVisibleList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the full task list, setting the visible list to the full list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the full task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public List\u003cTask\u003e getFullList() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        visibleList \u003d fullList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return getVisibleList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the full task list, without changing the visible list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the full task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public List\u003cTask\u003e silentGetFullList() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return fullList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a string containing the contents of the task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return string containing the contents of the task list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        for (Task t : fullList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            stringBuilder.append(t.serialize());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            stringBuilder.append(\"\\n\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a list containing tasks contained in a serialized list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param serializedTaskList string containing the contents of the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return list of tasks containined in the serialized list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public static List\u003cTask\u003e deserialize(String serializedTaskList) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String[] taskStrings \u003d serializedTaskList.split(\"\\n\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        for (String taskString : taskStrings) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            String[] taskProperties \u003d taskString.split(\"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            switch (taskProperties[0]) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                taskList.add(new Deadline(taskProperties[1], taskProperties[2], taskProperties[3]));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                taskList.add(new Event(taskProperties[1], taskProperties[2], taskProperties[3]));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                taskList.add(new Todo(taskProperties[1], taskProperties[2]));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the currently visible list."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the currently visible list."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public List\u003cTask\u003e getVisibleList() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return visibleList;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 136
    }
  },
  {
    "path": "src/main/java/duke/main/UserData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A container for the user\u0027s data."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class UserData {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    // private Settings settings;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new userData object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param userDir the directory to store the user\u0027s data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @throws IOException if any files in the directory could not be created or read."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public UserData(File userDir) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        taskList \u003d new TaskList(userDir);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the user\u0027s task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return user\u0027s task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 29
    }
  },
  {
    "path": "src/main/java/duke/main/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.OutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * The interface to communicate with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new UserInterface object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param in the input stream of the user interface."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param out the print stream of the user interface."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public UserInterface(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        sc \u003d new Scanner(in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns true if there is new input from the user, and false otherwise."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return whether there is new input from the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public boolean hasNext() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return sc.hasNextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the next line of input from the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the next line of input from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String next() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints a string, followed by a new line, to the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param obj a string or object containing a toString method to be printed."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void println(Object obj) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        out.println(obj);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Prints a string, to the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param obj a string or object containing a toString method to be printed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void print(Object obj) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        out.print(obj);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    private void printWelcomeMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        println(String.format(\"%1$s\\nWelcome to Duke!\", LOGO));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A task with a deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Deadline extends TaskWithTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the deadline\u0027s description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Deadline(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"D\", time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new deadline from a serialized deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the deadline\u0027s description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param isDone the done status of the deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Deadline(String description, String time, String isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"D\", time, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Converts the deadline into a string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the deadline as a string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return String.format(\"%1$s (by: %2$s)\", super.toString(), time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A task representing an event at some time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Event extends TaskWithTime {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the event\u0027s description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Event(String description, LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"E\", time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new event from a serialized event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the event\u0027s description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param isDone the done status of the event."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Event(String description, String time, String isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"E\", time, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Converts the event into a string."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the event as a string."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return String.format(\"%1$s (at: %2$s)\", super.toString(), time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * The general task class that Duke uses to store task information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected String typeIcon;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the task\u0027s description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param typeIcon the task\u0027s type icon."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Task(String description, String typeIcon) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.typeIcon \u003d typeIcon;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new task from a serialized task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the task\u0027s description."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param typeIcon the task\u0027s type icon."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param isDone the task\u0027s done status."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Task(String description, String typeIcon, String isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.typeIcon \u003d typeIcon;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d Boolean.parseBoolean(isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns an icon corresponding to the done status of the task: \\u2713 (tick mark) for done,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * and \\u2718 (cross mark) for undone."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return an icon corresponding to the done status of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the type icon of the task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the type icon of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getTypeIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return typeIcon;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the task\u0027s description."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the task\u0027s description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the task as a string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the task as a string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return String.format(\"[%1$s][%2$s] %3$s\", getTypeIcon(), getStatusIcon(), getDescription());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns a serialized task as a string."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return a string containing the task\u0027s information, serialized."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return String.format(\"%1$s\\n%2$s\\n%3$s\", typeIcon, description, isDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Sets the task\u0027s done status."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param isDone the new done status."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 83
    }
  },
  {
    "path": "src/main/java/duke/task/TaskWithTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A task, but with a time component as well."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class TaskWithTime extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskWithTime(String description, String typeIcon, LocalDateTime time) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, typeIcon);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param time the time of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public TaskWithTime(String description, String typeIcon, String time, String isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, typeIcon, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        this.time \u003d LocalDateTime.parse(time);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Returns the time of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @return the time of the task as a LocalDateTime object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public String serialize() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        return String.format(\"%1$s\\n%2$s\\n%3$s\\n%4$s\", typeIcon, description, time, isDone);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " * A task representing a to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new to do."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the to do\u0027s description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * Creates a new to do from a serialized to do."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param description the to do\u0027s description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     * @param isDone the done status of the to do."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public Todo(String description, String isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        super(description, \"T\", isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 25
    }
  },
  {
    "path": "src/test/java/duke/main/UserInterfaceTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class UserInterfaceTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void ioTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String testInString \u003d String.format(\"test1%1$stest2%1$stest3%1$s\", System.lineSeparator());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        String testOutString \u003d String.format(\"%1$s\\nWelcome to Duke!%2$s\", LOGO, System.lineSeparator() + testInString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        InputStream inStream \u003d new ByteArrayInputStream(testInString.getBytes());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        OutputStream outStream \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        PrintStream printStream \u003d new PrintStream(outStream);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        UserInterface userInterface \u003d new UserInterface(inStream, printStream);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        while (userInterface.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "            userInterface.println(userInterface.next());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Assertions.assertEquals(testOutString, outStream.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 29
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    public void EventTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Event event \u003d new Event(\"Test\", LocalDateTime.parse(\"2019-01-01T18:00\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Assertions.assertEquals(\"[E][\\u2718] Test (at: 2019-01-01T18:00)\", event.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        event.setDone(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "        Assertions.assertEquals(\"[E][\\u2713] Test (at: 2019-01-01T18:00)\", event.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "otonashixav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "otonashixav"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "otonashixav": 16
    }
  }
]

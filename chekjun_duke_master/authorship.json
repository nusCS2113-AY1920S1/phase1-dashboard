[
  {
    "path": "src/main/java/AddCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class AddCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private CommandType commandType;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String commandDetail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public AddCommand(CommandType commandType, String commandDetail){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.commandDetail \u003d commandDetail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        switch(commandType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (commandDetail.isBlank()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ToDos T \u003d new ToDos(commandDetail);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    taskList.addTask(T);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showAddTask();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.printTask(T);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (commandDetail.isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    Deadlines D \u003d validateDeadline(commandDetail);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    taskList.addTask(D);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showAddTask();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.printTask(D);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (commandDetail.isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    Events E \u003d validateEvent(commandDetail);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    taskList.addTask(E);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showAddTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.printTask(E);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"Something went wrong executing AddCommand!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Deadlines validateDeadline(String str) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        String[] splitString \u003d str.split(\" /by \", 2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            throw new DukeException(\"The format of deadline should be DESCRIPTION /by dd/MM/yyyy\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            Deadlines D \u003d new Deadlines(splitString[0], splitString[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            D.setParsedby(Parser.parseDate(splitString[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return D;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Events validateEvent(String str) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        String[] splitString \u003d str.split(\" /at \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            throw new DukeException(\"The format of event should be DESCRIPTION /by dd/MM/yyyy\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            Events E \u003d new Events(splitString[0], splitString[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            E.setParsedAt(Parser.parseDate(splitString[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return E;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 75
    }
  },
  {
    "path": "src/main/java/Command.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "interface Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 4
    }
  },
  {
    "path": "src/main/java/CommandType.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    EXIT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 9
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String parsedby;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Deadlines(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.parsedby \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     * @return the parsedby"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getParsedby() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return parsedby;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     * @param parsedby the parsedby to set"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void setParsedby(String parsedby) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.parsedby \u003d parsedby;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return \" [D]\" + super.toString() + \" (by: \" + parsedby + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 33
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String commandDetail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public DeleteCommand(String commandDetail) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.commandDetail \u003d commandDetail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (commandDetail.isBlank()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            throw new DukeException(\"Please specify a task.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (isInteger(commandDetail, 10)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                int doneNum \u003d Integer.parseInt(commandDetail);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (doneNum \u003e\u003d 1 \u0026\u0026 doneNum \u003c\u003d taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showDeleteTask();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    Task task \u003d taskList.getTaskList().get(doneNum - 1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.printTask(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    taskList.deleteTask(doneNum);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"Task does not exist.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"Index of task must be numerical value!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isInteger(String string, int radix) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (string.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (int i \u003d 0; i \u003c string.length(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (i \u003d\u003d 0 \u0026\u0026 string.charAt(i) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (string.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (Character.digit(string.charAt(i),radix) \u003c 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 51
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class DoneCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String commandDetail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public DoneCommand(String commandDetail) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.commandDetail \u003d commandDetail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (commandDetail.isBlank()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            throw new DukeException(\"Please specify a task.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (isInteger(commandDetail, 10)) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                int doneNum \u003d Integer.parseInt(commandDetail);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (doneNum \u003e\u003d 1 \u0026\u0026 doneNum \u003c\u003d taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    taskList.doneTask(doneNum);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showDoneTask();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    Task task \u003d taskList.getTaskList().get(doneNum - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.printTask(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"Task does not exist.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"Index of task must be numerical value!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isInteger(String string, int radix) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (string.isEmpty()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (int i \u003d 0; i \u003c string.length(); i++) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (i \u003d\u003d 0 \u0026\u0026 string.charAt(i) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (string.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (Character.digit(string.charAt(i),radix) \u003c 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 51
    }
  },
  {
    "path": "src/main/java/Driver.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "public class Driver {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 5
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    * Ui: deals with interactions with the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    * Storage: deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    * Parser: deals with making sense of the user command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    * TaskList: contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"Command successfully executed but writeToFile failed\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        new Duke(\"C:/Users/Chek Jun/Google Drive/1920S1/CS2113T/duke/src/main/java/Tasks.txt\").run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 48,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 5
    }
  },
  {
    "path": "src/main/java/Events.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String parsedAt;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Events(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.parsedAt \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     * @return the parsedAt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getParsedAt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return parsedAt;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     * @param parsedAt the parsedAt to set"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void setParsedAt(String parsedAt) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.parsedAt \u003d parsedAt;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return \" [E]\" + super.toString() + \" (at: \" + parsedAt + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 33
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class ExitCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public ExitCommand() {}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 11
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class ListCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public ListCommand() {}"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ui.showListTask();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        taskList.listTask(ui);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ui.showNumTask(taskList);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        String[] splitString \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        CommandType commandType \u003d checkCommand(splitString[0]);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            switch(commandType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"Please specify a task.\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String commandDetail \u003d splitString[1];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            switch(commandType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return new AddCommand(commandType, commandDetail);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return new DoneCommand(commandDetail);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return new DeleteCommand(commandDetail);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public static CommandType checkCommand(String str) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        switch(str) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.TODO;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.DEADLINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Event\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.EVENT;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.DONE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.DELETE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"List\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.LIST;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            case \"Bye\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return CommandType.EXIT;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public static boolean isInteger(String string, int radix) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (string.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (int i \u003d 0; i \u003c string.length(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (i \u003d\u003d 0 \u0026\u0026 string.charAt(i) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (string.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (Character.digit(string.charAt(i),radix) \u003c 0) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public static String parseDate(String input) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String output;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String[] splitString \u003d input.split(\"/\", 3);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String dd \u003d splitString[0];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String MM \u003d splitString[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            splitString \u003d splitString[2].split(\" \", 2);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String yyyy \u003d splitString[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String TTtt \u003d splitString[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (!isInteger(dd, 10)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                || !isInteger(MM, 10)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                || !isInteger(yyyy, 10)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                || !isInteger(TTtt, 10)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"Date Time format invalid. Use dd/MM/yyyy TTtt.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            output \u003d dd;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            switch(dd) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"1\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"21\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"31\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"st of \";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"2\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"22\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"nd of \";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"3\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"23\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"rd of \";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"th of \";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            switch(MM) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"1\":"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"January \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"2\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"February \";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"3\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"March \";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"4\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"April \";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"5\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"May \";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"6\":"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"June \";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"7\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"July \";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"8\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"August \";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"9\":"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"September \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"10\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"October\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"11\":"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"November\";"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                case \"12\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    output +\u003d \"December\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    throw new DukeException(\"Only 1 - 12 applicable for Month.\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            output +\u003d yyyy + \", \";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            int hr \u003d Integer.parseInt(TTtt.substring(0, 2));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            String min \u003d TTtt.substring(2, 4);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            output +\u003d (hr \u003d hr\u003e12 ? hr%12 : hr) + \":\" + min + \" \" + ((hr\u003e\u003d12) ? \"PM\" : \"AM\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            throw new DukeException(\"Date Time format invalid. Use dd/MM/yyyy TTtt.\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 169
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                String inputString \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                String[] splitString \u003d inputString.split(\" / \", 4);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                String taskType \u003d splitString[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                boolean isDone \u003d splitString[1].equals(\"done\") ? true : false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                String description \u003d splitString[2];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"Todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        ToDos T \u003d new ToDos(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        T.setDone(isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        taskList.add(T);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"Deadline\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        String by \u003d splitString[3];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        Deadlines D \u003d new Deadlines(description, by);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        D.setDone(isDone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        taskList.add(D);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    case \"Event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        String at \u003d splitString[3];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        Events E \u003d new Events(description, at);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        E.setDone(isDone);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        taskList.add(E);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                return taskList;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } catch (IOException f) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                throw new DukeException(\"File not found and unable to create one.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void writeToFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        ArrayList\u003cTask\u003e tempTaskList \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (Task task : tempTaskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (task instanceof ToDos) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(\"todo / \");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"done / \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"notdone / \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                Deadlines D \u003d (Deadlines) task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(\"deadline / \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"done / \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"notdone / \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(D.getDescription() + \" / \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(D.getBy() + \"\\n\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                Events E \u003d (Events) task;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(\"event / \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                if (task.isDone()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"done / \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                    fileWriter.write(\"notdone / \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(E.getDescription() + \" / \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                fileWriter.write(E.getAt() + \"\\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void deleteFile() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 100
    }
  },
  {
    "path": "src/main/java/Task.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private static final String TICK \u003d \"[\\u2713] \";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private static final String CROSS \u003d \"[\\u2718] \";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public int countTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        int numTasks \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            if (!t.isDone()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "                ++numTasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return numTasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void doneTask(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        Task t \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        if (!t.isDone()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            t.setDone(true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void deleteTask(int i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        taskList.remove(i - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void listTask(Ui ui) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); ++i) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            ui.printTask(i, taskList.get(i - 1));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 48
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chekjun"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chekjun"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    private PrintStream printer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        this.printer \u003d  new PrintStream(System.out, true, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showIndent() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.print(\"     \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chekjun"
        },
        "content": "              \"      ____        _        \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chekjun"
        },
        "content": "            + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showAddTask() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showDoneTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showDeleteTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showListTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void printTask(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        printer.println(task.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void printTask(int idx, Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        printer.println(idx + \".\" + task.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showNumTask(TaskList taskList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.countTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.print(errorMessage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showLoadingSuccess() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Save file found, loading data into Duke.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Save file not found, creating a new save file.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showWritingError() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Problem writing to file, deleting current one.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chekjun"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        showIndent();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chekjun"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chekjun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chekjun"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chekjun": 101
    }
  }
]

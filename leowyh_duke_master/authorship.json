[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "leowyh": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Deadline instance and initialises the required attributes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param description Description of the deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Returns a string status of the Deadline task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String GiveTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"[D]\" + super.GiveTask() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Duke is a program that tracks a list of tasks given by the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * @author Leow Yong Heng"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Duke instance and initialises the required attributes."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param filepath Filepath to the storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private Duke(String filepath){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ArrayList\u003cTask\u003e arraylist \u003d storage.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        tasklist \u003d new TaskList(arraylist);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Method to run the Duke instance and take in the inputs of the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private void run(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        ui.StartMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        while(!isExit){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String input \u003d ui.readinput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            isExit \u003d Parser.parse(input, tasklist, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * The main method of the Duke program, which instantiates a duke instance with the filepath to the storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "leowyh": 43
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * A class for exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates an instance of an exception specific to duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param message Message describing the exception thrown."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public DukeException (String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Task containing information of a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates an Event instance and initialises the required attributes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param at Time of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Returns a string status of the Event task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The task\u0027s status icon, description and eventtime."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String GiveTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"[E]\" + super.GiveTask() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 29
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Parser that parses input from the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static SimpleDateFormat dataformat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Method that parses input from the user and executes processes based on the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param storage Storage for the Tasklist."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Returns boolean variable to indicate when to stop parsing for input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @throws DukeException if input is not valid."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static boolean parse(String input, TaskList tasklist, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            if (IsBye(input)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                //print bye message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.ByeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.in.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsList(input)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                //print out current list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ui.PrintList(tasklist, \"list\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsDone(input)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessDone(input, tasklist, ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsDeadline(input)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessDeadline(input, tasklist, ui);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.save(tasklist.ReturnArrayList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsTodo(input)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessTodo(input, tasklist, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.save(tasklist.ReturnArrayList());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsEvent(input)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessEvent(input, tasklist, ui);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.save(tasklist.ReturnArrayList());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsDelete(input)) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessDelete(input, tasklist, ui);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                storage.save(tasklist.ReturnArrayList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else if (IsFind(input)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                ProcessFind(input, tasklist, ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                throw new DukeException(\"     \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the find command and outputs a list of tasks containing the word."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessFind(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            TaskList findlist \u003d new TaskList();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            for (Task tasks : tasklist.ReturnArrayList()){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                if(tasks.description.contains(splitspace[1])){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                    findlist.AddTask(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintList(findlist, \"find\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! The content to find cannot be empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the delete command."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessDelete(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            int numdelete \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String task \u003d tasklist.get(numdelete).GiveTask();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            tasklist.DeleteTask(numdelete);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintDeleteMessage(task, tasklist);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! Please input the list number to delete.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the done command and sets the task specified as done."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessDone(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            int numdone \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            tasklist.get(numdone).SetDone();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintDoneMessage(numdone, tasklist);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }catch(ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! Please input the list number to indicate as done.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the deadline command and adds a deadline to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessDeadline(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Deadline deadline \u003d new Deadline(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            tasklist.AddTask(deadline);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintAddedMessage(deadline, tasklist);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (ParseException e){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the todo command and adds a todo to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessTodo(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Todo todotoadd \u003d new Todo(splitspace[1]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            tasklist.AddTask(todotoadd);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintAddedMessage(todotoadd, tasklist);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Processes the event command and adds an event to the user\u0027s Tasklist."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param input Input from the user."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param ui Ui that interacts with the user."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static void ProcessEvent(String input, TaskList tasklist, Ui ui){"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitspace \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splitslash \u003d splitspace[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String taskDescription \u003d splitslash[0];"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String[] splittime \u003d splitslash[1].split(\" \", 2);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            String taskTime \u003d splittime[1];"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Date formattedtime \u003d dataformat.parse(taskTime);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            Event event \u003d new Event(taskDescription, dataformat.format(formattedtime));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            tasklist.AddTask(event);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.PrintAddedMessage(event, tasklist);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (ParseException e){"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ui.ExceptionMessage(\"     \\u2639 OOPS!!! Format of time is wrong.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsBye(String input){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.equals(\"bye\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsList(String input){"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.equals(\"list\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsDone(String input){"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"done\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsDeadline(String input){"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"deadline\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsTodo(String input){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"todo\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsEvent(String input){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"event\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsDelete(String input){"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"delete\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static boolean IsFind(String input){"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return input.startsWith(\"find\");"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 230
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Storage that saves and loads the tasklist of the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Storage{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static String filepath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Storage instance with the required attributes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param filepath Filepath to the storage file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Storage(String filepath){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        Storage.filepath \u003d filepath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Loads an ArrayList containing the Task object from the storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The ArrayList containing the Task object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static ArrayList\u003cTask\u003e load(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            FileInputStream file \u003d new FileInputStream(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ObjectInputStream out \u003d new ObjectInputStream(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ArrayList\u003cTask\u003e arraylist \u003d  (ArrayList) out.readObject();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            return arraylist;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (EOFException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"File is empty\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (IOException ioe)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        catch (ClassNotFoundException c)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.println(\"Class not found\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            c.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Saves the tasklist of the user as an ArrayList containing the task object."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist of the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e tasklist){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            FileOutputStream file \u003d new FileOutputStream(filepath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ObjectOutputStream out \u003d new ObjectOutputStream(file);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            out.writeObject(tasklist);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            out.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 69
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * The parent Task class containing the description of the task and its done status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Task instance and initialises the required attributes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param description Description of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Formats the representation of the Task to be printed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The task\u0027s status icon, description and deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String GiveTask(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Gives the status icon of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The status icon of the Task based on isDone."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Sets as done the isDone attribute."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void SetDone(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 41
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * TaskList class to handle methods related to the tasklist of the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class TaskList{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Copies an existing ArrayList containing the Task object into a newly instantiated TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist Tasklist to be copied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasklist){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.tasklist \u003d tasklist;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a new TaskList with an empty ArrayList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.tasklist \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Adds a new Task to the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void AddTask(Task task){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        tasklist.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Deletes a Task from the TaskList."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param numdelete Index of the Task in the TaskList to delete."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void DeleteTask(int numdelete){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        tasklist.remove(numdelete);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Gets the Task based on the index given."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param number Index of the Task in the TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The Task of the index given."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Task get(int number){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return tasklist.get(number);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Gives the size of the TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return TaskList size."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return tasklist.size();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Converts the TaskList into an ArrayList containing the Task object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return ArrayList containing the Task object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public ArrayList\u003cTask\u003e ReturnArrayList(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 65
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Task containing information of a todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Todo extends Task implements Serializable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Todo instance and initialises the required attributes."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param description Description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Returns a string status of the Todo task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return The task\u0027s status icon and description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String GiveTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return \"[T]\" + super.GiveTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": " * Ui to interact with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    private static final String line \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    Scanner in;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Creates a Ui instance with a scanner to read user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Reads input from the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @return Input from the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public String readinput(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints starting message for the Duke program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void StartMessage(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String logo \u003d line"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leowyh"
        },
        "content": "                + line;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints ending message for the Duke program."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void ByeMessage(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        String output \u003d line + \"     Bye. Hope to see you again soon!\\n\" + line;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints the list of tasks or the matching list of tasks depending on the command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param list TaskList of the user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param command Command given by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void PrintList(TaskList list, String command){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        int listsize \u003d list.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        // prints list or matching tasks in list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.print(line + \"     Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.print(line + \"     Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        for (int i \u003d 0; i \u003c listsize; i++){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            int listnum \u003d i+1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leowyh"
        },
        "content": "            System.out.print(\"     \" + listnum + \".\" + list.get(i).GiveTask() + \"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate deletion of a Task from the TaskList and the number of Tasks left."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param task Representation of the Task that is deleted."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void PrintDeleteMessage(String task, TaskList tasklist){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line + \"     Noted. I\u0027ve removed this task: \\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(\"       \" + task + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(\"     Now you have \" + tasklist.size() + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate a Task is done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param numdone Index of the Task in the TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void PrintDoneMessage(int numdone, TaskList tasklist){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line + \"     Nice! I\u0027ve marked this task as done: \\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(\"       \" + tasklist.get(numdone).GiveTask() + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints message to indicate a Task being added and the number of Tasks in the TaskList."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param tasklist TaskList of the user."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void PrintAddedMessage(Task task, TaskList tasklist){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line + \"     Got it. I\u0027ve added this task:  \\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(\"       \" + task.GiveTask() + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        int tasksize \u003d tasklist.size();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(\"     Now you have \" + tasksize + \" tasks in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * Prints the message for the exception thrown."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leowyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void ExceptionMessage(String message){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        System.out.print(line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 111
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leowyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leowyh"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leowyh"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leowyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leowyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leowyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leowyh": 12
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 28,
      "-": 19
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Command(String userInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 14
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // private static final long serialVersionUID \u003d 4L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // \u0027By\u0027 field is specific to Deadline class and is not in the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String byWhen;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private LocalDateTime formattedTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // Constructors are not members, so they are not inherited by subclasses,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // but the constructor of the superclass can be invoked from the subclass."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(description); // invocation of super class constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.byWhen \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Deadline(String description, LocalDateTime formattedTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.formattedTime \u003d formattedTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // @override annotation is a good practice. if there are mistakes like wrong method name,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // it will be detected and there would be compile time error. it also improves readability."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getTaskLabel() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \" [D]\" + super.getTaskLabel() + \" (by: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 32
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        String[] temp \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                throw new DukeNoInfoException(); // user input: done \u0027blank\u0027."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(temp[1]); // user input: done \u0027string\u0027."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                ui.printAcknowledgeDelete(taskNumber, tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                tasks.remove(taskNumber - 1); // -1 to get the index of the task in myList. user input: done \u0027number not in list\u0027."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                storage.save(ui, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printNumberFormatException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (DukeNoInfoException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeNoInfoException(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 38
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // 1. user could input number that is out of bounds of the list array"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // 2. or user did not input any number at all."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // 3. or user input something else rather than a number."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // Integer.valueOf() or Integer.parseInt() converts string to integer."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            String[] temp \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                throw new DukeNoInfoException(); // user input: done \u0027blank\u0027."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                int taskNumber \u003d Integer.parseInt(temp[1]); // user input: done \u0027string\u0027."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                tasks.get(taskNumber - 1).setAsDone(); // -1 to get the index of the task in myList. user input: done \u0027number not in list\u0027."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                ui.printAcknowledgeDone(taskNumber, tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                storage.save(ui, tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        // if want to catch 2 exceptions that are can be handled the same way, use (exception1 | exception2)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printNumberFormatException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (DukeNoInfoException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeNoInfoException(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 43
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        tasks \u003d new TaskList(storage.load(ui));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            String userInput \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            Command c \u003d Parser.parse(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // The following line indicates the entry point to the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        Duke duke \u003d new Duke(\"/Users/jiawei/Desktop/duke/data/duke.txt\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 27,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // default constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // overloaded constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public DukeException(String userInput) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String Feedback() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \"    Sorry, \" + \"\u0027\" + userInput + \"\u0027\" + \" is an invalid command. \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    Duke only accept these few commands:\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    1. todo _____.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    2. event _____ /at _____.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    3. deadline _____ /by _____.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 23
    }
  },
  {
    "path": "src/main/java/DukeNoFullInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DukeNoFullInfoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String byOrAt \u003d \"\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    DukeNoFullInfoException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    DukeNoFullInfoException(String byOrAt) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.byOrAt \u003d byOrAt;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String Feedback() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        if (byOrAt.equals(\"by\") || byOrAt.equals(\"By\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return \"    Please provide the full information.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    + \"    For deadlines, please include /by _____.\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "         else if (byOrAt.equals(\"at\") || byOrAt.equals(\"At\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return \"    Please provide the full information.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    + \"    For events, please include /at _____.\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return \"    Please provide the full information.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    + \"    1. For events, please include /at _____.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    + \"    2. For deadlines, please include /by _____.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 29
    }
  },
  {
    "path": "src/main/java/DukeNoInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DukeNoInfoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public DukeNoInfoException() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String Feedback() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \"    No information provided. Please input your task information.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Event extends Task implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // private static final long serialVersionUID \u003d 3L;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // \u0027By\u0027 field is specific to Deadline class and is not in the Task class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String atWhere;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private LocalDateTime formattedTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // Constructors are not members, so they are not inherited by subclasses,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // but the constructor of the superclass can be invoked from the subclass."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(description); // invocation of super class constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.atWhere \u003d at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Event(String description, LocalDateTime formattedTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.formattedTime \u003d formattedTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // @override annotation is a good practice. if there are mistakes like wrong method name,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // it will be detected and there would be compile time error. it also improves readability."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getTaskLabel() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \" [E]\" + super.getTaskLabel() + \" (at: \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 32
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 16
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        String[] temp \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                throw new DukeNoInfoException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                String keyword \u003d temp[1];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                int matchedCount \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                System.out.println(\"    Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    if (tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        ++matchedCount;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        System.out.println(\"    \" + matchedCount + \". \" + tasks.get(i).getTaskLabel());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (DukeNoInfoException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeNoInfoException(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 38
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        Ui.printList(tasks);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 16
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private static Command command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static Command parse(String userInput) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else if (userInput.equals(\"exit\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new DoneCommand(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new FindCommand(userInput);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } else if (userInput.startsWith(\"todo\") || userInput.startsWith(\"event\") || userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            command \u003d new TaskCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 34
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void save(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ObjectOutputStream objOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            objOut.writeObject(tasks.taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            objOut.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printFileSaved();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printIOException(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public ArrayList\u003cTask\u003e load(Ui ui) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        ArrayList\u003cTask\u003e loadedArrayList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            FileInputStream fileIn \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ObjectInputStream objIn \u003d new ObjectInputStream(fileIn);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // loadedArrayList \u003d (ArrayList\u003cTask\u003e) Arrays.asList((Task[]) objIn.readObject());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            // loadedArrayList \u003d (ArrayList) objIn.readObject();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            loadedArrayList \u003d (ArrayList\u003cTask\u003e) objIn.readObject();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            objIn.close();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            fileIn.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printFileLoaded();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return loadedArrayList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printIOException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            loadedArrayList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return loadedArrayList;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printClassNotFoundException(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            loadedArrayList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            return loadedArrayList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 49
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // private static final long serialVersionUID \u003d 1L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // attributes of the tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // constructor Task()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // getter method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        // Returns Tick symbol if task is done and Cross symbol is task is not done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // setter method."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getTaskLabel() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \" [\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 36
    }
  },
  {
    "path": "src/main/java/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.util.regex.PatternSyntaxException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private static final String dateTimePattern \u003d \"dd/MM/yyyy HHmm\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateTimePattern);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public TaskCommand(String userInput) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        String[] temp \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        String firstWord \u003d temp[0]; // to extract the first word."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            switch (firstWord) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        throw new DukeNoInfoException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        Todo newToDo \u003d new Todo(temp[1]); // temp[1] is the remaining words after extracting first word."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        tasks.add(newToDo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        storage.save(ui, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        throw new DukeNoInfoException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        // PatternSyntaxException on splitting with regex \"/\" if no \"/\" is provided."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        String[] tempEvent \u003d temp[1].split(\"/\", 2); // to get the description and the by/at when."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        if (tempEvent.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            throw new DukeNoFullInfoException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            // input: event xxxx /at cccc"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            // temp: event | xxxx /at cccc"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            // tempEvent: xxxx | at cccc"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            // tempEventWhen: at | cccc"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            String[] tempEventWhen \u003d tempEvent[1].split(\" \", 2); // to get the when without the at/by word."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            String eventDescription \u003d tempEvent[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            if (tempEventWhen.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                throw new DukeNoFullInfoException(tempEventWhen[0]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                String eventAt \u003d tempEventWhen[1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                LocalDateTime formattedDateTime \u003d LocalDateTime.parse(eventAt, formatter); // LocalDatetime.parse(String, DateTimeFormatter)."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                Event newEvent \u003d new Event(eventDescription, formattedDateTime);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                tasks.add(newEvent);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                storage.save(ui, tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        throw new DukeNoInfoException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        String[] tempDeadline \u003d temp[1].split(\"/\", 2); // to get the description and the by/at when."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        if (tempDeadline.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            throw new DukeNoFullInfoException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            String[] tempDeadlineWhen \u003d tempDeadline[1].split(\" \", 2); // to get the when without the at/by word."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            String deadlineDescription \u003d tempDeadline[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            if (tempDeadlineWhen.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                throw new DukeNoFullInfoException(tempDeadlineWhen[0]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                String deadlineWhen \u003d tempDeadlineWhen[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                LocalDateTime formattedDateTime \u003d LocalDateTime.parse(deadlineWhen, formatter);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                Deadline newDeadline \u003d new Deadline(deadlineDescription, formattedDateTime);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                tasks.add(newDeadline);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                storage.save(ui, tasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                default: // none of the 3 specified type of tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                    throw new DukeException(userInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (NullPointerException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            System.out.println(\"cheebai\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (PatternSyntaxException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printPatternSyntaxException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDateTimeParseException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (DukeNoFullInfoException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeNoFullInfoException(e);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (DukeNoInfoException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeNoInfoException(e);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            ui.printDukeException(e);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 132
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    protected ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // constructor for new taskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // constructor to load from saved tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e loadedArrayList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.taskList \u003d loadedArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 38
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Todo extends Task implements Serializable { // Todo class is a subclass. Task class is the superclass."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // private static final long serialVersionUID \u003d 2L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // @override annotation is a good practice. if there are mistakes like wrong method name,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // it will be detected and there would be compile time error. it also improves readability."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String getTaskLabel() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return \" [D]\" + super.getTaskLabel();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // final keyword for constants. constants to be in capital letters."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    // static keyword for class-level attributes rather than instance objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private static final String LINE \u003d \"   ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"   Hello! I\u0027m Duke\\n\" + \"   What can I do for you?\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        // use for loop because we want to print the number. if not can use enhanced for loop or iterator."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "            System.out.println(\"    \" + (i + 1) + \".\" + tasks.get(i).getTaskLabel());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public static void printAcknowledgeDone(int taskNumber, TaskList tasks) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        // System.out.println(\"    \" + taskList.get(taskNumber - 1).getStatusIcon() + \" \" + taskList.get(taskNumber - 1).getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    \" + tasks.get(taskNumber - 1).getTaskLabel());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printAcknowledgeDelete(int taskNumber, TaskList tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Noted. The task has been removed from the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        // System.out.println(\"    \" + taskList.get(taskNumber - 1).getStatusIcon() + \" \" + taskList.get(taskNumber - 1).getDescription());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    \" + tasks.get(taskNumber - 1).getTaskLabel());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printTaskAdded(TaskList tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    \" + tasks.get(tasks.size() - 1).getTaskLabel());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printFileSaved() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    File has been successfully saved!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printFileLoaded() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    File has been successfully loaded!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printIOException(IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printClassNotFoundException(ClassNotFoundException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Class not found.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printLoadingError() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Duke cannot find the saved file. A new tasklist will be created.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    You can only mark a task in the list as done. Please input another index within the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printNumberFormatException() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    The item you wanted to mark as done is not provided as its index. Please input the index of the task.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printDukeException(DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(e.Feedback());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printDukeNoInfoException(DukeNoInfoException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(e.Feedback());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printDukeNoFullInfoException(DukeNoFullInfoException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(e.Feedback());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printPatternSyntaxException() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Please provide the full information.\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    1. For events, please include /at _____.\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "                + \"    2. For deadlines, please include /by _____.\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void printDateTimeParseException() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(\"    Format of Date/Time provided is incorrect.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 144
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jiaweijwjw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jiaweijwjw": 10
    }
  }
]
